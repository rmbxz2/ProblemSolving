<?xml version="1.0" encoding="UTF-8" standalone="no"?><svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" contentScriptType="application/ecmascript" contentStyleType="text/css" height="1000px" preserveAspectRatio="none" style="width:2924px;height:1000px;" version="1.1" viewBox="0 0 2924 1000" width="2924px" zoomAndPan="magnify"><defs/><g><text fill="#000000" font-family="sans-serif" font-size="18" lengthAdjust="spacingAndGlyphs" textLength="175" x="1368" y="16.708">patterns of patterns</text><!--MD5=[9f095faffe0feb14db5388f9d449daa3]
cluster pattern_of_patterns2--><polygon fill="#FFFFFF" points="16,26.9531,187,26.9531,194,49.25,2907,49.25,2907,993.9531,16,993.9531,16,26.9531" style="stroke: #000000; stroke-width: 1.5;"/><line style="stroke: #000000; stroke-width: 1.5;" x1="16" x2="194" y1="49.25" y2="49.25"/><text fill="#000000" font-family="sans-serif" font-size="14" font-weight="bold" lengthAdjust="spacingAndGlyphs" textLength="165" x="20" y="41.9482">pattern_of_patterns2</text><!--MD5=[f9f9f82c51f6e3e1883b9ad313952a81]
class Quackable--><rect codeLine="50" fill="#FEFECE" height="65.4609" id="Quackable" style="stroke: #A80036; stroke-width: 1.5;" width="250" x="753" y="656.4531"/><ellipse cx="826.75" cy="672.4531" fill="#B4A7E5" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M822.6719,668.2188 L822.6719,666.0625 L830.0625,666.0625 L830.0625,668.2188 L827.5938,668.2188 L827.5938,676.2969 L830.0625,676.2969 L830.0625,678.4531 L822.6719,678.4531 L822.6719,676.2969 L825.1406,676.2969 L825.1406,668.2188 L822.6719,668.2188 Z "/><text fill="#CC0000" font-family="sans-serif" font-size="16" font-style="italic" font-weight="bold" lengthAdjust="spacingAndGlyphs" textLength="94" x="847.25" y="677.9922">Quackable</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="754" x2="1002" y1="688.4531" y2="688.4531"/><line style="stroke: #A80036; stroke-width: 1.5;" x1="754" x2="1002" y1="696.4531" y2="696.4531"/><text fill="#000000" font-family="sans-serif" font-size="15" font-weight="bold" lengthAdjust="spacingAndGlyphs" textLength="238" x="759" y="714.3765">public abstract void  quack();</text><!--MD5=[ab7a0a0169244241d99b33cfaaca66a8]
class DuckSimulator--><rect codeLine="149" fill="#FEFECE" height="100.3828" id="DuckSimulator" style="stroke: #A80036; stroke-width: 1.5;" width="456" x="1127" y="842.9531"/><ellipse cx="1286.75" cy="858.9531" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M1289.7188,864.5938 Q1289.1406,864.8906 1288.5,865.0313 Q1287.8594,865.1875 1287.1563,865.1875 Q1284.6563,865.1875 1283.3281,863.5469 Q1282.0156,861.8906 1282.0156,858.7656 Q1282.0156,855.6406 1283.3281,853.9844 Q1284.6563,852.3281 1287.1563,852.3281 Q1287.8594,852.3281 1288.5,852.4844 Q1289.1563,852.6406 1289.7188,852.9375 L1289.7188,855.6563 Q1289.0938,855.0781 1288.5,854.8125 Q1287.9063,854.5313 1287.2813,854.5313 Q1285.9375,854.5313 1285.25,855.6094 Q1284.5625,856.6719 1284.5625,858.7656 Q1284.5625,860.8594 1285.25,861.9375 Q1285.9375,863 1287.2813,863 Q1287.9063,863 1288.5,862.7344 Q1289.0938,862.4531 1289.7188,861.875 L1289.7188,864.5938 Z "/><text fill="#CC0000" font-family="sans-serif" font-size="16" font-weight="bold" lengthAdjust="spacingAndGlyphs" textLength="128" x="1307.25" y="864.4922">DuckSimulator</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="1128" x2="1582" y1="874.9531" y2="874.9531"/><line style="stroke: #A80036; stroke-width: 1.5;" x1="1128" x2="1582" y1="882.9531" y2="882.9531"/><ellipse cx="1138" cy="893.9531" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="15" font-weight="bold" lengthAdjust="spacingAndGlyphs" textLength="196" x="1147" y="900.8765">void main(String[] args)</text><ellipse cx="1138" cy="911.4141" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="15" font-weight="bold" lengthAdjust="spacingAndGlyphs" textLength="430" x="1147" y="918.3374">void simulate(AbstractDuckFactory duckFactory){ }</text><ellipse cx="1138" cy="928.875" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="15" font-weight="bold" lengthAdjust="spacingAndGlyphs" textLength="387" x="1147" y="935.7983">void simulate(Quackable duck){duck.quack() }</text><!--MD5=[9b43efee61cd7b52d5cee5e9d4776b70]
class Flock--><rect codeLine="140" fill="#FEFECE" height="135.3047" id="Flock" style="stroke: #A80036; stroke-width: 1.5;" width="597" x="32.5" y="825.4531"/><ellipse cx="303.75" cy="841.4531" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M306.7188,847.0938 Q306.1406,847.3906 305.5,847.5313 Q304.8594,847.6875 304.1563,847.6875 Q301.6563,847.6875 300.3281,846.0469 Q299.0156,844.3906 299.0156,841.2656 Q299.0156,838.1406 300.3281,836.4844 Q301.6563,834.8281 304.1563,834.8281 Q304.8594,834.8281 305.5,834.9844 Q306.1563,835.1406 306.7188,835.4375 L306.7188,838.1563 Q306.0938,837.5781 305.5,837.3125 Q304.9063,837.0313 304.2813,837.0313 Q302.9375,837.0313 302.25,838.1094 Q301.5625,839.1719 301.5625,841.2656 Q301.5625,843.3594 302.25,844.4375 Q302.9375,845.5 304.2813,845.5 Q304.9063,845.5 305.5,845.2344 Q306.0938,844.9531 306.7188,844.375 L306.7188,847.0938 Z "/><text fill="#CC0000" font-family="sans-serif" font-size="16" font-weight="bold" lengthAdjust="spacingAndGlyphs" textLength="46" x="324.25" y="846.9922">Flock</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="33.5" x2="628.5" y1="857.4531" y2="857.4531"/><line style="stroke: #A80036; stroke-width: 1.5;" x1="33.5" x2="628.5" y1="865.4531" y2="865.4531"/><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="40.5" y="873.4531"/><text fill="#000000" font-family="sans-serif" font-size="15" font-weight="bold" lengthAdjust="spacingAndGlyphs" textLength="531" x="52.5" y="883.3765">ArrayList&lt;Quackable&gt; quackers =new ArrayList&lt;Quackable&gt;();</text><ellipse cx="43.5" cy="893.9141" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="15" font-weight="bold" lengthAdjust="spacingAndGlyphs" textLength="462" x="52.5" y="900.8374">void add(Quackable quacker){ quackers.add(quacker) }</text><ellipse cx="43.5" cy="911.375" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="15" font-weight="bold" lengthAdjust="spacingAndGlyphs" textLength="571" x="52.5" y="918.2983">void quack(){ for(Quackable quacker: quackers){quacker.quack()} }</text><ellipse cx="43.5" cy="928.8359" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="15" font-weight="bold" lengthAdjust="spacingAndGlyphs" textLength="184" x="52.5" y="935.7593">void notifyObservers()</text><ellipse cx="43.5" cy="946.2969" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="15" font-weight="bold" lengthAdjust="spacingAndGlyphs" textLength="343" x="52.5" y="953.2202">void registerObserver(Observer observer)</text><!--MD5=[67cfaa0645ff41b79a488378b263ff04]
class MallaredDuck--><rect codeLine="55" fill="#FEFECE" height="135.3047" id="MallaredDuck" style="stroke: #A80036; stroke-width: 1.5;" width="716" x="1312" y="417.4531"/><ellipse cx="1606.25" cy="433.4531" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M1609.2188,439.0938 Q1608.6406,439.3906 1608,439.5313 Q1607.3594,439.6875 1606.6563,439.6875 Q1604.1563,439.6875 1602.8281,438.0469 Q1601.5156,436.3906 1601.5156,433.2656 Q1601.5156,430.1406 1602.8281,428.4844 Q1604.1563,426.8281 1606.6563,426.8281 Q1607.3594,426.8281 1608,426.9844 Q1608.6563,427.1406 1609.2188,427.4375 L1609.2188,430.1563 Q1608.5938,429.5781 1608,429.3125 Q1607.4063,429.0313 1606.7813,429.0313 Q1605.4375,429.0313 1604.75,430.1094 Q1604.0625,431.1719 1604.0625,433.2656 Q1604.0625,435.3594 1604.75,436.4375 Q1605.4375,437.5 1606.7813,437.5 Q1607.4063,437.5 1608,437.2344 Q1608.5938,436.9531 1609.2188,436.375 L1609.2188,439.0938 Z "/><text fill="#CC0000" font-family="sans-serif" font-size="16" font-weight="bold" lengthAdjust="spacingAndGlyphs" textLength="119" x="1626.75" y="438.9922">MallaredDuck</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="1313" x2="2027" y1="449.4531" y2="449.4531"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="1320" y="457.4531"/><text fill="#000000" font-family="sans-serif" font-size="15" font-weight="bold" lengthAdjust="spacingAndGlyphs" textLength="192" x="1332" y="467.3765">Observable observable;</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="1313" x2="2027" y1="474.9141" y2="474.9141"/><ellipse cx="1323" cy="485.9141" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="15" font-weight="bold" lengthAdjust="spacingAndGlyphs" textLength="428" x="1332" y="492.8374">MallaredDuck(){observable =new Observable(this)}</text><ellipse cx="1323" cy="503.375" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="15" font-weight="bold" lengthAdjust="spacingAndGlyphs" textLength="406" x="1332" y="510.2983">void quack(){print("Quack"); notifyObservers();}</text><ellipse cx="1323" cy="520.8359" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="15" font-weight="bold" lengthAdjust="spacingAndGlyphs" textLength="690" x="1332" y="527.7593">void registerObserver(Observer observer){observable.registerObserver(observer) }</text><ellipse cx="1323" cy="538.2969" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="15" font-weight="bold" lengthAdjust="spacingAndGlyphs" textLength="447" x="1332" y="545.2202">void notifyObservers(){observable.notifyObservers()}</text><!--MD5=[bbb761cc04b0085aa892d3a0c893b7a9]
class RedheadDuck--><rect codeLine="69" fill="#FEFECE" height="152.7656" id="RedheadDuck" style="stroke: #A80036; stroke-width: 1.5;" width="369" x="907.5" y="408.4531"/><ellipse cx="1026.75" cy="424.4531" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M1029.7188,430.0938 Q1029.1406,430.3906 1028.5,430.5313 Q1027.8594,430.6875 1027.1563,430.6875 Q1024.6563,430.6875 1023.3281,429.0469 Q1022.0156,427.3906 1022.0156,424.2656 Q1022.0156,421.1406 1023.3281,419.4844 Q1024.6563,417.8281 1027.1563,417.8281 Q1027.8594,417.8281 1028.5,417.9844 Q1029.1563,418.1406 1029.7188,418.4375 L1029.7188,421.1563 Q1029.0938,420.5781 1028.5,420.3125 Q1027.9063,420.0313 1027.2813,420.0313 Q1025.9375,420.0313 1025.25,421.1094 Q1024.5625,422.1719 1024.5625,424.2656 Q1024.5625,426.3594 1025.25,427.4375 Q1025.9375,428.5 1027.2813,428.5 Q1027.9063,428.5 1028.5,428.2344 Q1029.0938,427.9531 1029.7188,427.375 L1029.7188,430.0938 Z "/><text fill="#CC0000" font-family="sans-serif" font-size="16" font-weight="bold" lengthAdjust="spacingAndGlyphs" textLength="122" x="1047.25" y="429.9922">RedheadDuck</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="908.5" x2="1275.5" y1="440.4531" y2="440.4531"/><polygon fill="none" points="918.5,447.4531,914.5,453.4531,922.5,453.4531" style="stroke: #1963A0; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="15" font-weight="bold" lengthAdjust="spacingAndGlyphs" textLength="186" x="927.5" y="458.3765">Observable observable</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="908.5" x2="1275.5" y1="465.9141" y2="465.9141"/><ellipse cx="918.5" cy="476.9141" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="15" font-weight="bold" lengthAdjust="spacingAndGlyphs" textLength="126" x="927.5" y="483.8374">RedheadDuck()</text><ellipse cx="918.5" cy="494.375" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="15" font-weight="bold" lengthAdjust="spacingAndGlyphs" textLength="243" x="927.5" y="501.2983">void quack(){print("Quack")}</text><ellipse cx="918.5" cy="511.8359" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="15" font-weight="bold" lengthAdjust="spacingAndGlyphs" textLength="184" x="927.5" y="518.7593">void notifyObservers()</text><ellipse cx="918.5" cy="529.2969" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="15" font-weight="bold" lengthAdjust="spacingAndGlyphs" textLength="343" x="927.5" y="536.2202">void registerObserver(Observer observer)</text><ellipse cx="918.5" cy="546.7578" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="15" font-weight="bold" lengthAdjust="spacingAndGlyphs" textLength="134" x="927.5" y="553.6812">String toString()</text><!--MD5=[63d6d3b89924d904df1c14c4e399b513]
class RubberDuck--><rect codeLine="79" fill="#FEFECE" height="152.7656" id="RubberDuck" style="stroke: #A80036; stroke-width: 1.5;" width="369" x="503.5" y="408.4531"/><ellipse cx="629.25" cy="424.4531" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M632.2188,430.0938 Q631.6406,430.3906 631,430.5313 Q630.3594,430.6875 629.6563,430.6875 Q627.1563,430.6875 625.8281,429.0469 Q624.5156,427.3906 624.5156,424.2656 Q624.5156,421.1406 625.8281,419.4844 Q627.1563,417.8281 629.6563,417.8281 Q630.3594,417.8281 631,417.9844 Q631.6563,418.1406 632.2188,418.4375 L632.2188,421.1563 Q631.5938,420.5781 631,420.3125 Q630.4063,420.0313 629.7813,420.0313 Q628.4375,420.0313 627.75,421.1094 Q627.0625,422.1719 627.0625,424.2656 Q627.0625,426.3594 627.75,427.4375 Q628.4375,428.5 629.7813,428.5 Q630.4063,428.5 631,428.2344 Q631.5938,427.9531 632.2188,427.375 L632.2188,430.0938 Z "/><text fill="#CC0000" font-family="sans-serif" font-size="16" font-weight="bold" lengthAdjust="spacingAndGlyphs" textLength="109" x="649.75" y="429.9922">RubberDuck</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="504.5" x2="871.5" y1="440.4531" y2="440.4531"/><polygon fill="none" points="514.5,447.4531,510.5,453.4531,518.5,453.4531" style="stroke: #1963A0; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="15" font-weight="bold" lengthAdjust="spacingAndGlyphs" textLength="186" x="523.5" y="458.3765">Observable observable</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="504.5" x2="871.5" y1="465.9141" y2="465.9141"/><ellipse cx="514.5" cy="476.9141" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="15" font-weight="bold" lengthAdjust="spacingAndGlyphs" textLength="113" x="523.5" y="483.8374">RubberDuck()</text><ellipse cx="514.5" cy="494.375" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="15" font-weight="bold" lengthAdjust="spacingAndGlyphs" textLength="251" x="523.5" y="501.2983">void quack(){print("Squack")}</text><ellipse cx="514.5" cy="511.8359" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="15" font-weight="bold" lengthAdjust="spacingAndGlyphs" textLength="184" x="523.5" y="518.7593">void notifyObservers()</text><ellipse cx="514.5" cy="529.2969" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="15" font-weight="bold" lengthAdjust="spacingAndGlyphs" textLength="343" x="523.5" y="536.2202">void registerObserver(Observer observer)</text><ellipse cx="514.5" cy="546.7578" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="15" font-weight="bold" lengthAdjust="spacingAndGlyphs" textLength="134" x="523.5" y="553.6812">String toString()</text><!--MD5=[691bb5ffc514708e8a0800ab5862511f]
class DuckCall--><rect codeLine="89" fill="#FEFECE" height="152.7656" id="DuckCall" style="stroke: #A80036; stroke-width: 1.5;" width="369" x="2063.5" y="408.4531"/><ellipse cx="2206.25" cy="424.4531" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M2209.2188,430.0938 Q2208.6406,430.3906 2208,430.5313 Q2207.3594,430.6875 2206.6563,430.6875 Q2204.1563,430.6875 2202.8281,429.0469 Q2201.5156,427.3906 2201.5156,424.2656 Q2201.5156,421.1406 2202.8281,419.4844 Q2204.1563,417.8281 2206.6563,417.8281 Q2207.3594,417.8281 2208,417.9844 Q2208.6563,418.1406 2209.2188,418.4375 L2209.2188,421.1563 Q2208.5938,420.5781 2208,420.3125 Q2207.4063,420.0313 2206.7813,420.0313 Q2205.4375,420.0313 2204.75,421.1094 Q2204.0625,422.1719 2204.0625,424.2656 Q2204.0625,426.3594 2204.75,427.4375 Q2205.4375,428.5 2206.7813,428.5 Q2207.4063,428.5 2208,428.2344 Q2208.5938,427.9531 2209.2188,427.375 L2209.2188,430.0938 Z "/><text fill="#CC0000" font-family="sans-serif" font-size="16" font-weight="bold" lengthAdjust="spacingAndGlyphs" textLength="75" x="2226.75" y="429.9922">DuckCall</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="2064.5" x2="2431.5" y1="440.4531" y2="440.4531"/><polygon fill="none" points="2074.5,447.4531,2070.5,453.4531,2078.5,453.4531" style="stroke: #1963A0; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="15" font-weight="bold" lengthAdjust="spacingAndGlyphs" textLength="186" x="2083.5" y="458.3765">Observable observable</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="2064.5" x2="2431.5" y1="465.9141" y2="465.9141"/><ellipse cx="2074.5" cy="476.9141" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="15" font-weight="bold" lengthAdjust="spacingAndGlyphs" textLength="84" x="2083.5" y="483.8374">DuckCall()</text><ellipse cx="2074.5" cy="494.375" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="15" font-weight="bold" lengthAdjust="spacingAndGlyphs" textLength="235" x="2083.5" y="501.2983">void quack(){print("kwak")}</text><ellipse cx="2074.5" cy="511.8359" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="15" font-weight="bold" lengthAdjust="spacingAndGlyphs" textLength="184" x="2083.5" y="518.7593">void notifyObservers()</text><ellipse cx="2074.5" cy="529.2969" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="15" font-weight="bold" lengthAdjust="spacingAndGlyphs" textLength="343" x="2083.5" y="536.2202">void registerObserver(Observer observer)</text><ellipse cx="2074.5" cy="546.7578" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="15" font-weight="bold" lengthAdjust="spacingAndGlyphs" textLength="134" x="2083.5" y="553.6812">String toString()</text><!--MD5=[20a9dbe547b03a9f46f11e05af6bdbb5]
class GooseAdapter--><rect codeLine="104" fill="#FEFECE" height="170.2266" id="GooseAdapter" style="stroke: #A80036; stroke-width: 1.5;" width="436" x="32" y="399.9531"/><ellipse cx="182.25" cy="415.9531" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M185.2188,421.5938 Q184.6406,421.8906 184,422.0313 Q183.3594,422.1875 182.6563,422.1875 Q180.1563,422.1875 178.8281,420.5469 Q177.5156,418.8906 177.5156,415.7656 Q177.5156,412.6406 178.8281,410.9844 Q180.1563,409.3281 182.6563,409.3281 Q183.3594,409.3281 184,409.4844 Q184.6563,409.6406 185.2188,409.9375 L185.2188,412.6563 Q184.5938,412.0781 184,411.8125 Q183.4063,411.5313 182.7813,411.5313 Q181.4375,411.5313 180.75,412.6094 Q180.0625,413.6719 180.0625,415.7656 Q180.0625,417.8594 180.75,418.9375 Q181.4375,420 182.7813,420 Q183.4063,420 184,419.7344 Q184.5938,419.4531 185.2188,418.875 L185.2188,421.5938 Z "/><text fill="#CC0000" font-family="sans-serif" font-size="16" font-weight="bold" lengthAdjust="spacingAndGlyphs" textLength="127" x="202.75" y="421.4922">GooseAdapter</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="33" x2="467" y1="431.9531" y2="431.9531"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="40" y="439.9531"/><text fill="#000000" font-family="sans-serif" font-size="15" font-weight="bold" lengthAdjust="spacingAndGlyphs" textLength="111" x="52" y="449.8765">Goose goose;</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="40" y="457.4141"/><text fill="#000000" font-family="sans-serif" font-size="15" font-weight="bold" lengthAdjust="spacingAndGlyphs" textLength="186" x="52" y="467.3374">Observable observable</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="33" x2="467" y1="474.875" y2="474.875"/><ellipse cx="43" cy="485.875" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="15" font-weight="bold" lengthAdjust="spacingAndGlyphs" textLength="410" x="52" y="492.7983">GooseAdapter(Goose goose){this.goose=goose;}</text><ellipse cx="43" cy="503.3359" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="15" font-weight="bold" lengthAdjust="spacingAndGlyphs" textLength="232" x="52" y="510.2593">void quack(){goose.honk()}</text><ellipse cx="43" cy="520.7969" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="15" font-weight="bold" lengthAdjust="spacingAndGlyphs" textLength="184" x="52" y="527.7202">void notifyObservers()</text><ellipse cx="43" cy="538.2578" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="15" font-weight="bold" lengthAdjust="spacingAndGlyphs" textLength="343" x="52" y="545.1812">void registerObserver(Observer observer)</text><ellipse cx="43" cy="555.7188" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="15" font-weight="bold" lengthAdjust="spacingAndGlyphs" textLength="134" x="52" y="562.6421">String toString()</text><!--MD5=[69113fa2e8b1bc648e493998cc2a46b8]
class QuackCounter--><rect codeLine="115" fill="#FEFECE" height="170.2266" id="QuackCounter" style="stroke: #A80036; stroke-width: 1.5;" width="427" x="664.5" y="807.9531"/><ellipse cx="809.75" cy="823.9531" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M812.7188,829.5938 Q812.1406,829.8906 811.5,830.0313 Q810.8594,830.1875 810.1563,830.1875 Q807.6563,830.1875 806.3281,828.5469 Q805.0156,826.8906 805.0156,823.7656 Q805.0156,820.6406 806.3281,818.9844 Q807.6563,817.3281 810.1563,817.3281 Q810.8594,817.3281 811.5,817.4844 Q812.1563,817.6406 812.7188,817.9375 L812.7188,820.6563 Q812.0938,820.0781 811.5,819.8125 Q810.9063,819.5313 810.2813,819.5313 Q808.9375,819.5313 808.25,820.6094 Q807.5625,821.6719 807.5625,823.7656 Q807.5625,825.8594 808.25,826.9375 Q808.9375,828 810.2813,828 Q810.9063,828 811.5,827.7344 Q812.0938,827.4531 812.7188,826.875 L812.7188,829.5938 Z "/><text fill="#CC0000" font-family="sans-serif" font-size="16" font-weight="bold" lengthAdjust="spacingAndGlyphs" textLength="128" x="830.25" y="829.4922">QuackCounter</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="665.5" x2="1090.5" y1="839.9531" y2="839.9531"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="672.5" y="847.9531"/><text fill="#000000" font-family="sans-serif" font-size="15" font-weight="bold" lengthAdjust="spacingAndGlyphs" textLength="136" x="684.5" y="857.8765">Quackable duck;</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="672.5" y="865.4141"/><text fill="#000000" font-family="sans-serif" font-size="15" font-weight="bold" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="179" x="684.5" y="875.3374">int numberOFQuacks;</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="665.5" x2="1090.5" y1="882.875" y2="882.875"/><ellipse cx="675.5" cy="893.875" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="15" font-weight="bold" lengthAdjust="spacingAndGlyphs" textLength="400" x="684.5" y="900.7983">QuackCouter(Quackable duck){this.duck=duck}</text><ellipse cx="675.5" cy="911.3359" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="15" font-weight="bold" lengthAdjust="spacingAndGlyphs" textLength="401" x="684.5" y="918.2593">void quack(){duck.quack; numberOFQuacks++}</text><ellipse cx="675.5" cy="928.7969" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="15" font-weight="bold" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="353" x="684.5" y="935.7202">int getQuacks(){return numberOFQuacks}</text><ellipse cx="675.5" cy="946.2578" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="15" font-weight="bold" lengthAdjust="spacingAndGlyphs" textLength="184" x="684.5" y="953.1812">void notifyObservers()</text><ellipse cx="675.5" cy="963.7188" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="15" font-weight="bold" lengthAdjust="spacingAndGlyphs" textLength="343" x="684.5" y="970.6421">void registerObserver(Observer observer)</text><!--MD5=[c0bd9f44073f1a51428d87d6a9cf071b]
class Observable--><rect codeLine="161" fill="#FEFECE" height="135.3047" id="Observable" style="stroke: #A80036; stroke-width: 1.5;" width="767" x="1079.5" y="204.9531"/><ellipse cx="1408.75" cy="220.9531" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M1411.7188,226.5938 Q1411.1406,226.8906 1410.5,227.0313 Q1409.8594,227.1875 1409.1563,227.1875 Q1406.6563,227.1875 1405.3281,225.5469 Q1404.0156,223.8906 1404.0156,220.7656 Q1404.0156,217.6406 1405.3281,215.9844 Q1406.6563,214.3281 1409.1563,214.3281 Q1409.8594,214.3281 1410.5,214.4844 Q1411.1563,214.6406 1411.7188,214.9375 L1411.7188,217.6563 Q1411.0938,217.0781 1410.5,216.8125 Q1409.9063,216.5313 1409.2813,216.5313 Q1407.9375,216.5313 1407.25,217.6094 Q1406.5625,218.6719 1406.5625,220.7656 Q1406.5625,222.8594 1407.25,223.9375 Q1407.9375,225 1409.2813,225 Q1409.9063,225 1410.5,224.7344 Q1411.0938,224.4531 1411.7188,223.875 L1411.7188,226.5938 Z "/><text fill="#CC0000" font-family="sans-serif" font-size="16" font-weight="bold" lengthAdjust="spacingAndGlyphs" textLength="100" x="1429.25" y="226.4922">Observable</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="1080.5" x2="1845.5" y1="236.9531" y2="236.9531"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="1087.5" y="244.9531"/><text fill="#000000" font-family="sans-serif" font-size="15" font-weight="bold" lengthAdjust="spacingAndGlyphs" textLength="194" x="1099.5" y="254.8765">QuackObservable duck;</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="1080.5" x2="1845.5" y1="262.4141" y2="262.4141"/><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="1087.5" y="270.4141"/><text fill="#000000" font-family="sans-serif" font-size="15" font-weight="bold" lengthAdjust="spacingAndGlyphs" textLength="525" x="1099.5" y="280.3374">ArrayList &lt;Observer&gt; observers =new ArrayList &lt;Observer&gt;();</text><ellipse cx="1090.5" cy="290.875" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="15" font-weight="bold" lengthAdjust="spacingAndGlyphs" textLength="443" x="1099.5" y="297.7983">Observable(QuackObservable duck){this.duck=duck}</text><ellipse cx="1090.5" cy="308.3359" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="15" font-weight="bold" lengthAdjust="spacingAndGlyphs" textLength="568" x="1099.5" y="315.2593">void registerObserver(Observer observer){observers.add(observer)}</text><ellipse cx="1090.5" cy="325.7969" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="15" font-weight="bold" lengthAdjust="spacingAndGlyphs" textLength="741" x="1099.5" y="332.7202">void notifyObservers(for(QuackObservable observer: observers){observer.updat(duck)});</text><!--MD5=[108255b9b1ee1fab48b54925a1be62f0]
class QuackObservable--><rect codeLine="156" fill="#FEFECE" height="82.9219" id="QuackObservable" style="stroke: #A80036; stroke-width: 1.5;" width="375" x="1275.5" y="61.9531"/><ellipse cx="1379.75" cy="77.9531" fill="#B4A7E5" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M1375.6719,73.7188 L1375.6719,71.5625 L1383.0625,71.5625 L1383.0625,73.7188 L1380.5938,73.7188 L1380.5938,81.7969 L1383.0625,81.7969 L1383.0625,83.9531 L1375.6719,83.9531 L1375.6719,81.7969 L1378.1406,81.7969 L1378.1406,73.7188 L1375.6719,73.7188 Z "/><text fill="#CC0000" font-family="sans-serif" font-size="16" font-style="italic" font-weight="bold" lengthAdjust="spacingAndGlyphs" textLength="158" x="1400.25" y="83.4922">QuackObservable</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="1276.5" x2="1649.5" y1="93.9531" y2="93.9531"/><line style="stroke: #A80036; stroke-width: 1.5;" x1="1276.5" x2="1649.5" y1="101.9531" y2="101.9531"/><ellipse cx="1286.5" cy="112.9531" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="15" font-weight="bold" lengthAdjust="spacingAndGlyphs" textLength="349" x="1295.5" y="119.8765">void registerObserver(Observer observer);</text><ellipse cx="1286.5" cy="130.4141" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="15" font-weight="bold" lengthAdjust="spacingAndGlyphs" textLength="190" x="1295.5" y="137.3374">void notifyObservers();</text><!--MD5=[033742ea0a296aa39fa200356adee340]
class AbstractDuckFactory--><rect codeLine="125" fill="#FEFECE" height="117.8438" id="AbstractDuckFactory" style="stroke: #A80036; stroke-width: 1.5;" width="310" x="1725" y="629.9531"/><ellipse cx="1781.75" cy="645.9531" fill="#A9DCDF" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M1781.8594,641.2969 L1780.7031,646.375 L1783.0313,646.375 L1781.8594,641.2969 Z M1780.375,639.0625 L1783.3594,639.0625 L1786.7188,651.4531 L1784.2656,651.4531 L1783.5,648.3906 L1780.2188,648.3906 L1779.4688,651.4531 L1777.0313,651.4531 L1780.375,639.0625 Z "/><text fill="#CC0000" font-family="sans-serif" font-size="16" font-style="italic" font-weight="bold" lengthAdjust="spacingAndGlyphs" textLength="188" x="1802.25" y="651.4922">AbstractDuckFactory</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="1726" x2="2034" y1="661.9531" y2="661.9531"/><line style="stroke: #A80036; stroke-width: 1.5;" x1="1726" x2="2034" y1="669.9531" y2="669.9531"/><ellipse cx="1736" cy="680.9531" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="15" font-style="italic" font-weight="bold" lengthAdjust="spacingAndGlyphs" textLength="282" x="1745" y="687.8765">Quackable createMallaredDuck();</text><ellipse cx="1736" cy="698.4141" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="15" font-style="italic" font-weight="bold" lengthAdjust="spacingAndGlyphs" textLength="284" x="1745" y="705.3374">Quackable createRedheadDuck();</text><ellipse cx="1736" cy="715.875" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="15" font-style="italic" font-weight="bold" lengthAdjust="spacingAndGlyphs" textLength="240" x="1745" y="722.7983">Quackable createDuckCall();</text><ellipse cx="1736" cy="733.3359" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="15" font-style="italic" font-weight="bold" lengthAdjust="spacingAndGlyphs" textLength="271" x="1745" y="740.2593">Quackable createRubberDuck();</text><!--MD5=[19f6ee61bb51739fd0a26ce88cc6d3e4]
class CountingDuckFactory--><rect codeLine="175" fill="#FEFECE" height="117.8438" id="CountingDuckFactory" style="stroke: #A80036; stroke-width: 1.5;" width="714" x="2177" y="833.9531"/><ellipse cx="2434.25" cy="849.9531" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M2437.2188,855.5938 Q2436.6406,855.8906 2436,856.0313 Q2435.3594,856.1875 2434.6563,856.1875 Q2432.1563,856.1875 2430.8281,854.5469 Q2429.5156,852.8906 2429.5156,849.7656 Q2429.5156,846.6406 2430.8281,844.9844 Q2432.1563,843.3281 2434.6563,843.3281 Q2435.3594,843.3281 2436,843.4844 Q2436.6563,843.6406 2437.2188,843.9375 L2437.2188,846.6563 Q2436.5938,846.0781 2436,845.8125 Q2435.4063,845.5313 2434.7813,845.5313 Q2433.4375,845.5313 2432.75,846.6094 Q2432.0625,847.6719 2432.0625,849.7656 Q2432.0625,851.8594 2432.75,852.9375 Q2433.4375,854 2434.7813,854 Q2435.4063,854 2436,853.7344 Q2436.5938,853.4531 2437.2188,852.875 L2437.2188,855.5938 Z "/><text fill="#CC0000" font-family="sans-serif" font-size="16" font-weight="bold" lengthAdjust="spacingAndGlyphs" textLength="191" x="2454.75" y="855.4922">CountingDuckFactory</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="2178" x2="2890" y1="865.9531" y2="865.9531"/><line style="stroke: #A80036; stroke-width: 1.5;" x1="2178" x2="2890" y1="873.9531" y2="873.9531"/><ellipse cx="2188" cy="884.9531" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="15" font-weight="bold" lengthAdjust="spacingAndGlyphs" textLength="664" x="2197" y="891.8765">Quackable createMallardDuck(){return new QuackCounter(new MallardDuck()) }</text><ellipse cx="2188" cy="902.4141" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="15" font-weight="bold" lengthAdjust="spacingAndGlyphs" textLength="688" x="2197" y="909.3374">Quackable createRedheadDuck(){return new QuackCounter(new RedheadDuck()) }</text><ellipse cx="2188" cy="919.875" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="15" font-weight="bold" lengthAdjust="spacingAndGlyphs" textLength="634" x="2197" y="926.7983">Quackable createDuckCall()   {return new QuackCounter(new    DuckCall()) }</text><ellipse cx="2188" cy="937.3359" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="15" font-weight="bold" lengthAdjust="spacingAndGlyphs" textLength="672" x="2197" y="944.2593">Quackable createRubberDuck() {return new QuackCounter(new  RubberDuck()) }</text><!--MD5=[3ee0cd330710b7cc4e195025efbb517a]
class DuckFactory--><rect codeLine="132" fill="#FEFECE" height="117.8438" id="DuckFactory" style="stroke: #A80036; stroke-width: 1.5;" width="523" x="1618.5" y="833.9531"/><ellipse cx="1819.75" cy="849.9531" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M1822.7188,855.5938 Q1822.1406,855.8906 1821.5,856.0313 Q1820.8594,856.1875 1820.1563,856.1875 Q1817.6563,856.1875 1816.3281,854.5469 Q1815.0156,852.8906 1815.0156,849.7656 Q1815.0156,846.6406 1816.3281,844.9844 Q1817.6563,843.3281 1820.1563,843.3281 Q1820.8594,843.3281 1821.5,843.4844 Q1822.1563,843.6406 1822.7188,843.9375 L1822.7188,846.6563 Q1822.0938,846.0781 1821.5,845.8125 Q1820.9063,845.5313 1820.2813,845.5313 Q1818.9375,845.5313 1818.25,846.6094 Q1817.5625,847.6719 1817.5625,849.7656 Q1817.5625,851.8594 1818.25,852.9375 Q1818.9375,854 1820.2813,854 Q1820.9063,854 1821.5,853.7344 Q1822.0938,853.4531 1822.7188,852.875 L1822.7188,855.5938 Z "/><text fill="#CC0000" font-family="sans-serif" font-size="16" font-weight="bold" lengthAdjust="spacingAndGlyphs" textLength="112" x="1840.25" y="855.4922">DuckFactory</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="1619.5" x2="2140.5" y1="865.9531" y2="865.9531"/><line style="stroke: #A80036; stroke-width: 1.5;" x1="1619.5" x2="2140.5" y1="873.9531" y2="873.9531"/><ellipse cx="1629.5" cy="884.9531" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="15" font-weight="bold" lengthAdjust="spacingAndGlyphs" textLength="493" x="1638.5" y="891.8765">Quackable createMallaredDuck(return new MallaredDuck());</text><ellipse cx="1629.5" cy="902.4141" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="15" font-weight="bold" lengthAdjust="spacingAndGlyphs" textLength="497" x="1638.5" y="909.3374">Quackable createRedheadDuck(return new RedheadDuck());</text><ellipse cx="1629.5" cy="919.875" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="15" font-weight="bold" lengthAdjust="spacingAndGlyphs" textLength="406" x="1638.5" y="926.7983">Quackable createDuckCall(return new DuckCall();</text><ellipse cx="1629.5" cy="937.3359" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="15" font-weight="bold" lengthAdjust="spacingAndGlyphs" textLength="471" x="1638.5" y="944.2593">Quackable createRubberDuck(return new RubberDuck());</text><!--MD5=[d40932010816485ec57b44b6eea2392a]
class Observer--><rect codeLine="64" fill="#FEFECE" height="65.4609" id="Observer" style="stroke: #A80036; stroke-width: 1.5;" width="329" x="911.5" y="70.9531"/><ellipse cx="1030.25" cy="86.9531" fill="#B4A7E5" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M1026.1719,82.7188 L1026.1719,80.5625 L1033.5625,80.5625 L1033.5625,82.7188 L1031.0938,82.7188 L1031.0938,90.7969 L1033.5625,90.7969 L1033.5625,92.9531 L1026.1719,92.9531 L1026.1719,90.7969 L1028.6406,90.7969 L1028.6406,82.7188 L1026.1719,82.7188 Z "/><text fill="#CC0000" font-family="sans-serif" font-size="16" font-style="italic" font-weight="bold" lengthAdjust="spacingAndGlyphs" textLength="83" x="1050.75" y="92.4922">Observer</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="912.5" x2="1239.5" y1="102.9531" y2="102.9531"/><line style="stroke: #A80036; stroke-width: 1.5;" x1="912.5" x2="1239.5" y1="110.9531" y2="110.9531"/><ellipse cx="922.5" cy="121.9531" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="15" font-weight="bold" lengthAdjust="spacingAndGlyphs" textLength="303" x="931.5" y="128.8765">void update(QuackObservable duck);</text><!--MD5=[5cd80b8c95d96f74729d680fbbf31a42]
class Quackologist--><rect codeLine="170" fill="#FEFECE" height="65.4609" id="Quackologist" style="stroke: #A80036; stroke-width: 1.5;" width="427" x="617.5" y="239.9531"/><ellipse cx="769.25" cy="255.9531" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M772.2188,261.5938 Q771.6406,261.8906 771,262.0313 Q770.3594,262.1875 769.6563,262.1875 Q767.1563,262.1875 765.8281,260.5469 Q764.5156,258.8906 764.5156,255.7656 Q764.5156,252.6406 765.8281,250.9844 Q767.1563,249.3281 769.6563,249.3281 Q770.3594,249.3281 771,249.4844 Q771.6563,249.6406 772.2188,249.9375 L772.2188,252.6563 Q771.5938,252.0781 771,251.8125 Q770.4063,251.5313 769.7813,251.5313 Q768.4375,251.5313 767.75,252.6094 Q767.0625,253.6719 767.0625,255.7656 Q767.0625,257.8594 767.75,258.9375 Q768.4375,260 769.7813,260 Q770.4063,260 771,259.7344 Q771.5938,259.4531 772.2188,258.875 L772.2188,261.5938 Z "/><text fill="#CC0000" font-family="sans-serif" font-size="16" font-weight="bold" lengthAdjust="spacingAndGlyphs" textLength="115" x="789.75" y="261.4922">Quackologist</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="618.5" x2="1043.5" y1="271.9531" y2="271.9531"/><line style="stroke: #A80036; stroke-width: 1.5;" x1="618.5" x2="1043.5" y1="279.9531" y2="279.9531"/><ellipse cx="628.5" cy="290.9531" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="15" font-weight="bold" lengthAdjust="spacingAndGlyphs" textLength="401" x="637.5" y="297.8765">void update(QuackObservable duck){print duck}</text><!--MD5=[7f6c01e09a8d8fc4466c79617c73a44c]
class Goose--><rect codeLine="99" fill="#FEFECE" height="65.4609" id="Goose" style="stroke: #A80036; stroke-width: 1.5;" width="248" x="126" y="239.9531"/><ellipse cx="217.75" cy="255.9531" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M220.7188,261.5938 Q220.1406,261.8906 219.5,262.0313 Q218.8594,262.1875 218.1563,262.1875 Q215.6563,262.1875 214.3281,260.5469 Q213.0156,258.8906 213.0156,255.7656 Q213.0156,252.6406 214.3281,250.9844 Q215.6563,249.3281 218.1563,249.3281 Q218.8594,249.3281 219.5,249.4844 Q220.1563,249.6406 220.7188,249.9375 L220.7188,252.6563 Q220.0938,252.0781 219.5,251.8125 Q218.9063,251.5313 218.2813,251.5313 Q216.9375,251.5313 216.25,252.6094 Q215.5625,253.6719 215.5625,255.7656 Q215.5625,257.8594 216.25,258.9375 Q216.9375,260 218.2813,260 Q218.9063,260 219.5,259.7344 Q220.0938,259.4531 220.7188,258.875 L220.7188,261.5938 Z "/><text fill="#CC0000" font-family="sans-serif" font-size="16" font-weight="bold" lengthAdjust="spacingAndGlyphs" textLength="56" x="238.25" y="261.4922">Goose</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="127" x2="373" y1="271.9531" y2="271.9531"/><line style="stroke: #A80036; stroke-width: 1.5;" x1="127" x2="373" y1="279.9531" y2="279.9531"/><ellipse cx="137" cy="290.9531" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="15" font-weight="bold" lengthAdjust="spacingAndGlyphs" textLength="222" x="146" y="297.8765">void honk(){print("honk")}</text><!--MD5=[bbc6ac70f877581f5d45d289b292bef1]
reverse link Quackable to DuckSimulator--><path codeLine="21" d="M957.54,723.6331 C1034.48,756.2131 1151.93,805.9531 1239.23,842.9231 " fill="none" id="Quackable-backto-DuckSimulator" style="stroke: #0000FF; stroke-width: 1.0; stroke-dasharray: 7.0,7.0;"/><polygon fill="#0000FF" points="952.53,721.5131,959.2456,728.7174,957.1309,723.4706,962.3776,721.356,952.53,721.5131" style="stroke: #0000FF; stroke-width: 1.0;"/><!--MD5=[2c4d81bd5ca6f83edb377463426c7181]
reverse link Quackable to Flock--><path codeLine="22" d="M777.88,723.3231 C699.99,750.9931 590.33,791.2131 499.08,825.4231 " fill="none" id="Quackable-backto-Flock" style="stroke: #0000FF; stroke-width: 1.0; stroke-dasharray: 7.0,7.0;"/><polygon fill="#0000FF" points="782.97,721.5131,773.15,720.7599,778.259,723.1885,775.8305,728.2975,782.97,721.5131" style="stroke: #0000FF; stroke-width: 1.0;"/><!--MD5=[2c4d81bd5ca6f83edb377463426c7181]
reverse link Quackable to Flock--><path codeLine="23" d="M783.78,728.7731 C712.4,756.1131 612.06,793.3931 523.93,825.4231 " fill="none" id="Quackable-backto-Flock-1" style="stroke: #0000FF; stroke-width: 1.0; stroke-dasharray: 7.0,7.0;"/><polygon fill="none" points="781.48,722.1631,802.66,721.5131,786.5,735.2231,781.48,722.1631" style="stroke: #0000FF; stroke-width: 1.0;"/><!--MD5=[96579be7bacabf95a59028458a4da126]
link MallaredDuck to Quackable--><path codeLine="24" d="M1409.02,552.5131 C1279.93,585.4431 1129.09,623.9131 1021.23,651.4231 " fill="none" id="MallaredDuck-to-Quackable" style="stroke: #0000FF; stroke-width: 1.0; stroke-dasharray: 7.0,7.0;"/><polygon fill="none" points="1022.71,658.2631,1001.6,656.4231,1019.25,644.7031,1022.71,658.2631" style="stroke: #0000FF; stroke-width: 1.0;"/><!--MD5=[0001b5d8f338f161649d32e23fa84b68]
link RedheadDuck to Quackable--><path codeLine="25" d="M1012.01,561.4531 C983.2,588.6531 951.6,618.4731 926.33,642.3331 " fill="none" id="RedheadDuck-to-Quackable" style="stroke: #0000FF; stroke-width: 1.0; stroke-dasharray: 7.0,7.0;"/><polygon fill="none" points="930.84,647.7031,911.49,656.3431,921.23,637.5231,930.84,647.7031" style="stroke: #0000FF; stroke-width: 1.0;"/><!--MD5=[f77f1084fae10e32ff895a96dd76866e]
link RubberDuck to Quackable--><path codeLine="26" d="M759.02,561.4531 C784.35,588.3931 812.12,617.9131 834.46,641.6631 " fill="none" id="RubberDuck-to-Quackable" style="stroke: #0000FF; stroke-width: 1.0; stroke-dasharray: 7.0,7.0;"/><polygon fill="none" points="839.66,636.9831,848.27,656.3431,829.47,646.5731,839.66,636.9831" style="stroke: #0000FF; stroke-width: 1.0;"/><!--MD5=[29e687c2a224749f937d4d759a13dec5]
link DuckCall to Quackable--><path codeLine="27" d="M2075.57,561.4931 C2065.66,564.6331 2055.76,567.4931 2046,569.9531 C1855.84,617.9831 1291.45,660.4831 1023,678.6331 " fill="none" id="DuckCall-to-Quackable" style="stroke: #0000FF; stroke-width: 1.0; stroke-dasharray: 7.0,7.0;"/><polygon fill="none" points="1023.45,685.6131,1003.02,679.9731,1022.51,671.6431,1023.45,685.6131" style="stroke: #0000FF; stroke-width: 1.0;"/><!--MD5=[af255b52e4db459abe0fb5c582c99393]
link GooseAdapter to Quackable--><path codeLine="28" d="M468.13,564.0331 C474.15,566.0431 480.11,568.0231 486,569.9531 C572.97,598.5031 671.64,628.1931 748.24,650.6431 " fill="none" id="GooseAdapter-to-Quackable" style="stroke: #0000FF; stroke-width: 1.0; stroke-dasharray: 7.0,7.0;"/><polygon fill="none" points="750.48,644.0131,767.71,656.3431,746.55,657.4431,750.48,644.0131" style="stroke: #0000FF; stroke-width: 1.0;"/><!--MD5=[4f44925fd2688cb6bff76d503b68fe7c]
reverse link Quackable to QuackCounter--><path codeLine="29" d="M866.72,741.4631 C865.42,761.6531 864.98,785.3531 865.41,807.8931 " fill="none" id="Quackable-backto-QuackCounter" style="stroke: #0000FF; stroke-width: 1.0; stroke-dasharray: 7.0,7.0;"/><polygon fill="none" points="859.75,740.8431,868.44,721.5131,873.7,742.0431,859.75,740.8431" style="stroke: #0000FF; stroke-width: 1.0;"/><!--MD5=[4f44925fd2688cb6bff76d503b68fe7c]
reverse link Quackable to QuackCounter--><path codeLine="30" d="M888.68,726.5431 C891.02,749.2931 891.91,779.5131 891.33,807.8931 " fill="none" id="Quackable-backto-QuackCounter-1" style="stroke: #0000FF; stroke-width: 1.0;"/><polygon fill="#0000FF" points="888.12,721.5131,885.1235,730.8951,888.6643,726.4834,893.076,730.0242,888.12,721.5131" style="stroke: #0000FF; stroke-width: 1.0;"/><!--MD5=[bc014b182cb16e9a300ee24692dc01b9]
reverse link Observable to GooseAdapter--><path codeLine="31" d="M1074.23,338.2831 C1070.14,338.8531 1066.06,339.4031 1062,339.9531 C806.92,374.3531 737.02,343.0631 486,399.9531 C480.06,401.3031 474.07,402.7531 468.04,404.2831 " fill="none" id="Observable-backto-GooseAdapter" style="stroke: #0000FF; stroke-width: 1.0;"/><polygon fill="#0000FF" points="1079.43,337.5631,1069.9668,334.8341,1074.4772,338.2482,1071.063,342.7586,1079.43,337.5631" style="stroke: #0000FF; stroke-width: 1.0;"/><!--MD5=[eaa73c41639b2f241028e9c364c12653]
reverse link Observable to MallaredDuck--><path codeLine="32" d="M1532.22,343.8431 C1555.56,367.5831 1581.53,393.9931 1604.57,417.4231 " fill="none" id="Observable-backto-MallaredDuck" style="stroke: #0000FF; stroke-width: 1.0;"/><polygon fill="#0000FF" points="1528.5,340.0531,1531.9613,349.2737,1532.0069,343.6171,1537.6636,343.6627,1528.5,340.0531" style="stroke: #0000FF; stroke-width: 1.0;"/><!--MD5=[b8e703269c9d09a54fe7a3b24fecb1c3]
reverse link Observable to RedheadDuck--><path codeLine="33" d="M1341.1,342.6131 C1303.96,363.6931 1262.94,386.9631 1225.09,408.4431 " fill="none" id="Observable-backto-RedheadDuck" style="stroke: #0000FF; stroke-width: 1.0;"/><polygon fill="#0000FF" points="1345.61,340.0531,1335.8095,341.028,1341.2644,342.5261,1339.7663,347.981,1345.61,340.0531" style="stroke: #0000FF; stroke-width: 1.0;"/><!--MD5=[c4548f5b9572d58b1061d71978b139cc]
reverse link Observable to RubberDuck--><path codeLine="34" d="M1109.32,341.2531 C1036.18,358.1331 960.09,377.8331 890,399.9531 C881.67,402.5831 873.21,405.4131 864.7,408.4031 " fill="none" id="Observable-backto-RubberDuck" style="stroke: #0000FF; stroke-width: 1.0;"/><polygon fill="#0000FF" points="1114.59,340.0431,1104.9194,338.1776,1109.719,341.1716,1106.725,345.9712,1114.59,340.0431" style="stroke: #0000FF; stroke-width: 1.0;"/><!--MD5=[2f597fcb94e1fd06bca7d4cc9a4cc07e]
reverse link Observable to DuckCall--><path codeLine="35" d="M1824.38,341.2231 C1898.34,358.0631 1975.19,377.7431 2046,399.9531 C2054.34,402.5631 2062.8,405.3931 2071.31,408.3631 " fill="none" id="Observable-backto-DuckCall" style="stroke: #0000FF; stroke-width: 1.0;"/><polygon fill="#0000FF" points="1819.06,340.0131,1826.9452,345.9142,1823.9348,341.1249,1828.7241,338.1145,1819.06,340.0131" style="stroke: #0000FF; stroke-width: 1.0;"/><!--MD5=[f6232d3a0e31254cc123a905c4806e8d]
reverse link QuackObservable to Quackable--><path codeLine="36" d="M1670.48,128.1131 C2027.18,176.4331 2695.81,304.9931 2450,569.9531 C2443.85,576.5831 1374.25,652.8431 1003.1,679.1231 " fill="none" id="QuackObservable-backto-Quackable" style="stroke: #0000FF; stroke-width: 1.0;"/><polygon fill="none" points="1669.48,135.0431,1650.59,125.4631,1671.34,121.1631,1669.48,135.0431" style="stroke: #0000FF; stroke-width: 1.0;"/><!--MD5=[76eda73a7c25edc8aa4f657bc9d106eb]
reverse link QuackObservable to Observable--><path codeLine="37" d="M1451.47,150.4231 C1450.3,167.1731 1449.97,186.4731 1450.48,204.6731 " fill="none" id="QuackObservable-backto-Observable" style="stroke: #0000FF; stroke-width: 1.0;"/><polygon fill="#0000FF" points="1451.86,145.3031,1447.2024,153.9811,1451.4885,150.2893,1455.1803,154.5754,1451.86,145.3031" style="stroke: #0000FF; stroke-width: 1.0;"/><!--MD5=[76eda73a7c25edc8aa4f657bc9d106eb]
reverse link QuackObservable to Observable--><path codeLine="38" d="M1476.07,165.7131 C1476.57,178.3931 1476.64,191.8131 1476.26,204.6731 " fill="none" id="QuackObservable-backto-Observable-1" style="stroke: #0000FF; stroke-width: 1.0; stroke-dasharray: 7.0,7.0;"/><polygon fill="none" points="1469.05,165.7031,1474.79,145.3031,1483.02,164.8331,1469.05,165.7031" style="stroke: #0000FF; stroke-width: 1.0;"/><!--MD5=[7b9207bf11f16121780d15b4a1aed87c]
reverse link AbstractDuckFactory to DuckSimulator--><path codeLine="39" d="M1724.15,749.9131 C1647.15,779.5431 1555.4,814.8431 1482.63,842.8431 " fill="none" id="AbstractDuckFactory-backto-DuckSimulator" style="stroke: #0000FF; stroke-width: 1.0; stroke-dasharray: 7.0,7.0;"/><polygon fill="#0000FF" points="1729.2,747.9731,1719.3637,747.4766,1724.5344,749.7709,1722.2401,754.9416,1729.2,747.9731" style="stroke: #0000FF; stroke-width: 1.0;"/><!--MD5=[88f66592c6653d2d5e1f423f047e2f15]
reverse link AbstractDuckFactory to CountingDuckFactory--><path codeLine="40" d="M2054.57,743.8731 C2144.47,771.6431 2254.18,805.5231 2345.95,833.8731 " fill="none" id="AbstractDuckFactory-backto-CountingDuckFactory" style="stroke: #0000FF; stroke-width: 1.0;"/><polygon fill="none" points="2052.45,750.5431,2035.4,737.9531,2056.58,737.1631,2052.45,750.5431" style="stroke: #0000FF; stroke-width: 1.0;"/><!--MD5=[be49c9ef6f9156f4b1e54115df01f23c]
reverse link AbstractDuckFactory to DuckFactory--><path codeLine="41" d="M1880,768.4031 C1880,790.1931 1880,813.4631 1880,833.8631 " fill="none" id="AbstractDuckFactory-backto-DuckFactory" style="stroke: #0000FF; stroke-width: 1.0;"/><polygon fill="none" points="1873,768.1131,1880,748.1131,1887,768.1131,1873,768.1131" style="stroke: #0000FF; stroke-width: 1.0;"/><!--MD5=[b2a1d70bbaf77034b7b51a5796196263]
reverse link Observer to Quackologist--><path codeLine="42" d="M1012.94,147.4331 C970.68,176.2431 915.95,213.5531 877.6,239.6931 " fill="none" id="Observer-backto-Quackologist" style="stroke: #0000FF; stroke-width: 1.0; stroke-dasharray: 7.0,7.0;"/><polygon fill="none" points="1009.16,141.5431,1029.63,136.0631,1017.05,153.1131,1009.16,141.5431" style="stroke: #0000FF; stroke-width: 1.0;"/><!--MD5=[e6113e973c416938d8c3ceed2dfc1918]
reverse link Observer to Observable--><path codeLine="43" d="M1154.05,138.1331 C1198.45,157.2931 1255.64,181.9731 1308.72,204.8731 " fill="none" id="Observer-backto-Observable" style="stroke: #0000FF; stroke-width: 1.0; stroke-dasharray: 7.0,7.0;"/><polygon fill="#0000FF" points="1149.25,136.0631,1155.9277,143.3025,1153.8405,138.0448,1159.0983,135.9576,1149.25,136.0631" style="stroke: #0000FF; stroke-width: 1.0;"/><!--MD5=[c99e4beffd8e0d8c7915d3005bea8338]
link Observer to QuackObservable--><path codeLine="44" d="M1240.78,103.4531 C1252.35,103.4531 1263.93,103.4531 1275.5,103.4531 " fill="none" id="Observer-QuackObservable" style="stroke: #0000FF; stroke-width: 1.0; stroke-dasharray: 7.0,7.0;"/><!--MD5=[6c2fb258eb6adfa7a43ce4a4afb5d703]
reverse link Goose to GooseAdapter--><path codeLine="45" d="M250,310.1131 C250,334.9031 250,368.6831 250,399.8731 " fill="none" id="Goose-backto-GooseAdapter" style="stroke: #0000FF; stroke-width: 1.0;"/><polygon fill="#0000FF" points="250,304.9631,246,313.9631,250,309.9631,254,313.9631,250,304.9631" style="stroke: #0000FF; stroke-width: 1.0;"/><!--MD5=[79502456dfd8ed76422642887fb9c831]
@startuml pattern_of_patterns2
'scale 1.5


title patterns of patterns

skinparam classFontColor #CC0000
skinparam classFontStyle bold
skinparam classFontSize 16
skinparam classAttributeFontSize 15
skinparam classAttributeFontStyle bold
skinparam classArrowColor blue
skinparam shadowing false

'left to right direction
'show Observable members
'hide members


package "pattern_of_patterns2" {

Quackable           <..  DuckSimulator
Quackable           <..  Flock
Quackable           <|.. Flock
Quackable           <|.up. MallaredDuck
Quackable           <|.up. RedheadDuck
Quackable           <|.up. RubberDuck
Quackable           <|.up. DuckCall
Quackable           <|.up. GooseAdapter
Quackable           <|.. QuackCounter
Quackable           <- -  QuackCounter
Observable          <- -  GooseAdapter
Observable          <- -  MallaredDuck
Observable          <- -  RedheadDuck
Observable          <- -  RubberDuck
Observable          <- -  DuckCall
QuackObservable     <|- - Quackable
QuackObservable     <- -  Observable
QuackObservable     <|.. Observable
AbstractDuckFactory <..  DuckSimulator
AbstractDuckFactory <|- - CountingDuckFactory
AbstractDuckFactory <|- - DuckFactory
Observer            <|.. Quackologist
Observer            <..  Observable
Observer            .right.   QuackObservable
Goose               <- -  GooseAdapter

}


interface Quackable {
public abstract void  quack();
}


class  MallaredDuck {
- Observable observable;
+ MallaredDuck(){observable =new Observable(this)}
+ void quack(){print("Quack"); notifyObservers();}
+ void registerObserver(Observer observer){observable.registerObserver(observer) }
+ void notifyObservers(){observable.notifyObservers()}
} 


interface Observer{
+ void update(QuackObservable duck);
}


class RedheadDuck {
~Observable observable
+RedheadDuck()
+void quack(){print("Quack")}
+void notifyObservers()
+void registerObserver(Observer observer)
+String toString()
}


class  RubberDuck {
~Observable observable
+RubberDuck()
+void quack(){print("Squack")}
+void notifyObservers()
+void registerObserver(Observer observer)
+String toString()
} 


class  DuckCall {
~Observable observable
+DuckCall()
+void quack(){print("kwak")}
+void notifyObservers()
+void registerObserver(Observer observer)
+String toString()
} 


class  Goose {
+void honk(){print("honk")}
} 


class  GooseAdapter {
- Goose goose;
-Observable observable
+ GooseAdapter(Goose goose){this.goose=goose;}
+ void quack(){goose.honk()}
+void notifyObservers()
+void registerObserver(Observer observer)
+String toString()
} 


class  QuackCounter {
- Quackable duck;
- {static} int numberOFQuacks;
+ QuackCouter(Quackable duck){this.duck=duck}
+ void quack(){duck.quack; numberOFQuacks++}
+ {static} int getQuacks(){return numberOFQuacks}
+void notifyObservers()
+void registerObserver(Observer observer)
} 

abstract class AbstractDuckFactory {
+{abstract} Quackable createMallaredDuck();
+{abstract} Quackable createRedheadDuck();
+{abstract} Quackable createDuckCall();
+{abstract} Quackable createRubberDuck();
} 

class  DuckFactory {
+Quackable createMallaredDuck(return new MallaredDuck());
+Quackable createRedheadDuck(return new RedheadDuck());
+Quackable createDuckCall(return new DuckCall();
+Quackable createRubberDuck(return new RubberDuck());
} 


class  Flock {
-ArrayList<Quackable> quackers =new ArrayList<Quackable>();
    +void add(Quackable quacker){ quackers.add(quacker) }
    +void quack(){ for(Quackable quacker: quackers){quacker.quack()} } 
    +void notifyObservers()
    +void registerObserver(Observer observer)
    } 


    class  DuckSimulator {
    +void main(String[] args)
    +void simulate(AbstractDuckFactory duckFactory){ }
    +void simulate(Quackable duck){duck.quack() }
    } 


    interface QuackObservable {
    +void registerObserver(Observer observer);
    +void notifyObservers();
    }

    class  Observable {
    - ArrayList <Observer> observers =new ArrayList <Observer>();
    - QuackObservable duck;
    + Observable(QuackObservable duck){this.duck=duck}
    + void registerObserver(Observer observer){observers.add(observer)}
    + void notifyObservers(for(QuackObservable observer: observers){observer.updat(duck)}); 
    } 


    class  Quackologist {
    +  void update(QuackObservable duck){print duck}
    } 


    class  CountingDuckFactory {
    + Quackable createMallardDuck(){return new QuackCounter(new MallardDuck()) }
    + Quackable createRedheadDuck(){return new QuackCounter(new RedheadDuck()) }
    + Quackable createDuckCall()   {return new QuackCounter(new    DuckCall()) }
    + Quackable createRubberDuck() {return new QuackCounter(new  RubberDuck()) }
    } 

    @enduml

@startuml pattern_of_patterns2


title patterns of patterns

skinparam classFontColor #CC0000
skinparam classFontStyle bold
skinparam classFontSize 16
skinparam classAttributeFontSize 15
skinparam classAttributeFontStyle bold
skinparam classArrowColor blue
skinparam shadowing false



package "pattern_of_patterns2" {

Quackable           <..  DuckSimulator
Quackable           <..  Flock
Quackable           <|.. Flock
Quackable           <|.up. MallaredDuck
Quackable           <|.up. RedheadDuck
Quackable           <|.up. RubberDuck
Quackable           <|.up. DuckCall
Quackable           <|.up. GooseAdapter
Quackable           <|.. QuackCounter
Quackable           <- -  QuackCounter
Observable          <- -  GooseAdapter
Observable          <- -  MallaredDuck
Observable          <- -  RedheadDuck
Observable          <- -  RubberDuck
Observable          <- -  DuckCall
QuackObservable     <|- - Quackable
QuackObservable     <- -  Observable
QuackObservable     <|.. Observable
AbstractDuckFactory <..  DuckSimulator
AbstractDuckFactory <|- - CountingDuckFactory
AbstractDuckFactory <|- - DuckFactory
Observer            <|.. Quackologist
Observer            <..  Observable
Observer            .right.   QuackObservable
Goose               <- -  GooseAdapter

}


interface Quackable {
public abstract void  quack();
}


class  MallaredDuck {
- Observable observable;
+ MallaredDuck(){observable =new Observable(this)}
+ void quack(){print("Quack"); notifyObservers();}
+ void registerObserver(Observer observer){observable.registerObserver(observer) }
+ void notifyObservers(){observable.notifyObservers()}
} 


interface Observer{
+ void update(QuackObservable duck);
}


class RedheadDuck {
~Observable observable
+RedheadDuck()
+void quack(){print("Quack")}
+void notifyObservers()
+void registerObserver(Observer observer)
+String toString()
}


class  RubberDuck {
~Observable observable
+RubberDuck()
+void quack(){print("Squack")}
+void notifyObservers()
+void registerObserver(Observer observer)
+String toString()
} 


class  DuckCall {
~Observable observable
+DuckCall()
+void quack(){print("kwak")}
+void notifyObservers()
+void registerObserver(Observer observer)
+String toString()
} 


class  Goose {
+void honk(){print("honk")}
} 


class  GooseAdapter {
- Goose goose;
-Observable observable
+ GooseAdapter(Goose goose){this.goose=goose;}
+ void quack(){goose.honk()}
+void notifyObservers()
+void registerObserver(Observer observer)
+String toString()
} 


class  QuackCounter {
- Quackable duck;
- {static} int numberOFQuacks;
+ QuackCouter(Quackable duck){this.duck=duck}
+ void quack(){duck.quack; numberOFQuacks++}
+ {static} int getQuacks(){return numberOFQuacks}
+void notifyObservers()
+void registerObserver(Observer observer)
} 

abstract class AbstractDuckFactory {
+{abstract} Quackable createMallaredDuck();
+{abstract} Quackable createRedheadDuck();
+{abstract} Quackable createDuckCall();
+{abstract} Quackable createRubberDuck();
} 

class  DuckFactory {
+Quackable createMallaredDuck(return new MallaredDuck());
+Quackable createRedheadDuck(return new RedheadDuck());
+Quackable createDuckCall(return new DuckCall();
+Quackable createRubberDuck(return new RubberDuck());
} 


class  Flock {
-ArrayList<Quackable> quackers =new ArrayList<Quackable>();
    +void add(Quackable quacker){ quackers.add(quacker) }
    +void quack(){ for(Quackable quacker: quackers){quacker.quack()} } 
    +void notifyObservers()
    +void registerObserver(Observer observer)
    } 


    class  DuckSimulator {
    +void main(String[] args)
    +void simulate(AbstractDuckFactory duckFactory){ }
    +void simulate(Quackable duck){duck.quack() }
    } 


    interface QuackObservable {
    +void registerObserver(Observer observer);
    +void notifyObservers();
    }

    class  Observable {
    - ArrayList <Observer> observers =new ArrayList <Observer>();
    - QuackObservable duck;
    + Observable(QuackObservable duck){this.duck=duck}
    + void registerObserver(Observer observer){observers.add(observer)}
    + void notifyObservers(for(QuackObservable observer: observers){observer.updat(duck)}); 
    } 


    class  Quackologist {
    +  void update(QuackObservable duck){print duck}
    } 


    class  CountingDuckFactory {
    + Quackable createMallardDuck(){return new QuackCounter(new MallardDuck()) }
    + Quackable createRedheadDuck(){return new QuackCounter(new RedheadDuck()) }
    + Quackable createDuckCall()   {return new QuackCounter(new    DuckCall()) }
    + Quackable createRubberDuck() {return new QuackCounter(new  RubberDuck()) }
    } 

    @enduml

PlantUML version 1.2020.18(Wed Sep 30 22:40:44 EEST 2020)
(GPL source distribution)
Java Runtime: OpenJDK Runtime Environment
JVM: OpenJDK 64-Bit Server VM
Default Encoding: UTF-8
Language: en
Country: US
--></g></svg>