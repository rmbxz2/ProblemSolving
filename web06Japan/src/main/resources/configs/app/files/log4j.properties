#
# THIS IS A SAMPLE LOG4J CONFIGURATION
#
# YOU CAN MODIFY IT AS YOU WANT!
#

log4j.rootLogger=DEBUG, R, console

log4j.logger.lodsve=DEBUG
log4j.logger.org.springframework=DEBUG
log4j.logger.org.springframework.web.servlet=DEBUG

log4j.appender.R=org.apache.log4j.RollingFileAppender
log4j.appender.R.File=${user.home}/app/logs/app.log
log4j.appender.R.MaxFileSize=2MB
log4j.appender.R.MaxBackupIndex=10
log4j.appender.R.layout=org.apache.log4j.PatternLayout
log4j.appender.R.layout.ConversionPattern=[%p]%d{yyyy-MM-dd HH:mm:ss,SSS} %l-%m%n

#  %p 输出优先级，即DEBUG，INFO，WARN，ERROR，FATAL
#  %d 输出日志时间点的日期或时间，默认格式为ISO8601，也可以在其后指定格式，比如：%d{yyyy MMM dd HH:mm:ss,SSS}，输出类似：2002年10月18日 22：10：28，921
#  %l 输出日志事件的发生位置，包括类目名、发生的线程，以及在代码中的行数。
#  %m 输出代码中指定的消息
#  %n 输出一个回车换行符，Windows平台为“rn”，Unix平台为“n”
#  %r 输出自应用启动到输出该log信息耗费的毫秒数
#  %c 输出所属的类目，通常就是所在类的全名
#  %t 输出产生该日志事件的线程名

log4j.appender.console=org.apache.log4j.ConsoleAppender
log4j.appender.console.layout=org.apache.log4j.PatternLayout
log4j.appender.console.layout.ConversionPattern=%d{yyyy-MM-dd HH\:mm\:ss,SSS} [%p] %l %m%n