;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;; zobda  ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;; zobda  ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;; beginning of emacs keybinding  ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
use [C-s enter] to unincremental search in macro. it will be very fast. 

=========== first github clone project ==============================


C-x n n   narrow-to-region
C-x n d   narrow-to-defun 
C-x n w   wide 
M-x google-translate-paragraphs-overlay
M: (sleep-for 1)


seperated by new line 
M-x google-translate-paragraphs-overlay
hi مرحبا

what ماذا
=============
*** git ****
------------------------------one git command ----------------------
git is just one command like this ((wow)) 
g $ zz (szz) Fu (open modified files for stash) s cc Pu , in Erorr Xh(hard reset)

Q:- how to use git github ? stash->pull->myfiles-->push
g for refresh magit
$ for view git command 
zk (delete all previos stashed)
zz (stach my modified files)
[szz] new files, untracked files, must staged then stash, only once not file by file stashed

Fu (pull from master) ==>  git pull origin master  ;; default merge  (local Master <----Master in github)
 
# stash copy paste for my modified files, then Push origin master 
# 1- git add .               // working to staged [magit s]
# 2- git commit -m "hi" .    // staged to local master  [magit cc comment C-cC-c]
# 3- git push -u origin master  --force // local master to origin/master to remote origin [magit Pu]
s cc Pu

# in Error merge pull push
# git reset --hard  hash // undo from local master to working  [magit Xh] (out<--W<----LM)
  Xh(reset hard): in Error merge pull push
------------------------------one git command ----------------------


https://github.com/rmbxz2/ProblemSolving/commits/master
(working)-->(stage)-->(localMaster)-->(Origin/Master)-->(Master in github)
(w)--1-->(s)-2--->(LM)--3-->(OM)--3-->(Master in github)

1- git add .               // working to staged [magit s]
2- git commit -m "hi" .    // staged to local master  [magit cc comment C-cC-c]
3- git push -u origin master  --force // local master to origin/master to remote origin [magit Pu]

(w)<--12--(s)<--8--(LM)<--7--(OM)<--5--(Master in github)
 |                  | |                     |
 ------<-9----------  -------<-6-------------

view all git command in magit ==>magit-porcess buffer to view all git command 
You can run the command ‘magit-process-buffer’ with $
view all git command in magit ==>magit-porcess buffer to view all git command 
$  list current git  command 
$  list current git  command 

5- git fetch          (OM<----Master in github)  [magit fu]
6- git pull origin master --rebase  (local Master <----Master in github)   [magit Fu]
7- git merge origin/master    (LM<----OM)
8- git reset --soft  hash // undo from local master to stage   [magit Xs] (S<----LM)
9- git reset --hard  hash // undo from local master to working  [magit Xh] (out<--W<----LM)
9- git reset         hash // undo from local master to working [magit Xw] (W<----LM)
12-git restore --staged file // undo from staged to working [magit u] (W<----S)
13-git restore          file // undo from staged to working [magit k] (out <---W)
=============

Q: how to modify .gitignore ?
0- git status --ignored
1- modify .gitignore => */target/  one level
   modify .gitignore => **/target/  multil subdirectory  levels
2- git rm -r --cached .
3- git add .
4- git commit -m "modify .gitignore" 
5- git push -u origin master 


call function by emacs 
alt + shift + : ==>> eval-expression 
M: (sit-for 3) ;; eval elisp
(message "hi")
M-x eval-expression eval-region eval-defun 


[first time  pull from github working 100%]
[first time  pull from github working 100%]
[first time  pull from github working 100%]
# my branch is master not main
git clone https://github.com/rmbxz2/ProblemSolving.git
cd problemSolving
#  switch from main to master in working direcotory
git branch -v -a ;; to list all branches  main and (master not exist yet)
git checkout -b master 
git pull origin master --rebase
git fetch origin
git pull origin master ;; merge
git remote add origin  https://github.com/rmbxz2/ProblemSolving.git
git remote set-url origin git@github.com:rmbxz2/ProblemSolving.git
1- git add .               // working to staged [magit s]
2- git commit -m "hi" .    // staged to local master  [magit cc comment C-cC-c]
3- git push -u origin master   // local master to origin/master to remote origin [magit Pu]
   

[first time  pull from github not not not working ]
[first time  pull from github not not not working ]
[first time  pull from github not not not working ]
git clone https://github.com/rmbxz2/ProblemSolving.git
cd problemSolving
git pull origin master --rebase
git fetch origin
git pull

git fetch
git reset --hard origin/master

# set HEAD to master
git rebase HEAD master

then after changes type just
    git pull

git remote add origin  https://github.com/rmbxz2/ProblemSolving.git
git remote set-url origin git@github.com:rmbxz2/ProblemSolving.git
[first time  pull from github]
[first time  pull from github]
[first time  pull from github]


    [end]
    [end]
    [end]

     git pull origin master // pull from origin to local master [magit Fu]
     git pull = git fetch + git merge origin/branch

 [end of first pull from git hub]
 [end of first pull from git hub]

=========== first github clone project ==============================

git clone https://github.com/rmbxz2/ProblemSolving.git
user:  rmbxz2
user:  rmbxz2
email: ahmad.ali.omar.quran@gmail.com
pass: 
git remote add origin  https://github.com/rmbxz2/ProblemSolving.git
git remote set-url origin git@github.com:rmbxz2/ProblemSolving.git


=========== start  GIT Git ===============

git reflog  stash        // list log of stash (trash), ==> magit zl
git stash        //stash  push in trash ==> magit zz
git stash pop    // pop from stack stash ==> magit zp
git status               // [magit c-x g  then g]
git status --ignore      //  view ignored dir/files by .gitignore
git remote              // view remote branches, it is origin
git remote -v          // view verbose all connected point 
git remote set-url origin [url from github code button  as ssh]   //add  connected point  by ssh 
git remote set-url origin git@github.com:rmbxz2/ProblemSolving.git
git remote rm origin     // remove connected point, then can reconnect by git remote set-url [url-ssh]
git init                 // config .git and add it to the current dir
git log --one-line --all // view log for  all branches [magit bl]
git add .               // working to staged [magit s]
git restore file        // undo from working [magit k]
git restore --staged file // undo from staged to working [magit u]
git commit -m "hi" .    // staged to local master  [magit cc comment C-cC-c]
git commit -am "hi" .   // working to local master [magit ]
git push -u origin master  --force // local master to origin/master to remote origin [magit Pu]
git fetch               // remote origin to origin/master  [magit fu]
git merge origin/master // 
git pull origin master // pull from origin to local master [magit Fu]
git reset --hard  hash // undo from local master to working  [magit Xh] (out<--W<----LM)
git reset --soft  hash // undo from local master to stage   [magit Xs] (S<----LM)
git reset         hash // undo from local master to working [magit Xw] (W<----LM)
git revert --no-edit hash  // one undo but save it in history. undo from local master to working [magit v]
git diff               // diff working to master [magit du]
git diff --staged      // diff staged  to master [magit ds]
git fetch origin master       // first do this then diff origin/master master
git diff origin/master master // diff origin/master to local master [magit dr], do fetch orign master first
git mv oldFile newFile  // rename or  move
git rm/add file  // rmove the file then commit
git commit -m "comment" // first we rm/add file  then commit -m 
git clean -n // what will delete
git clean -f // delet it 


github first time  by git 
github first time  by git 
github first time  by git 
https://docs.github.com/en/github/importing-your-projects-to-github/importing-source-code-to-github/adding-an-existing-project-to-github-using-the-command-line
# Initialize the local directory as a Git repository.
  git init -b main
# Adds the files in the local repository and stages them for commit. To unstage a file, use 'git reset HEAD YOUR-FILE'.
  git add .
# Commits the tracked changes and prepares them to be pushed to a remote repository. To remove this commit and modify the file, use 'git reset --soft HEAD~1' and commit and add the file again.
  git commit -m "First commit"
# Sets the new remote
  git remote add origin  https://github.com/rmbxz2/ProblemSolving.git
# Verifies the new remote URL
  git remote -v
# Pushes the changes in your local repository up to the remote repository you specified as the origin
  git push origin main
or or 
  git push -u origin master #push to github
  git commit -m "initial commit"
  git push origin master

#it will work if checkout the project from main to master
git branch -a -v ;; list all branches 
git checkout -b master  ;; switch from main to master

----------------------------------

[work]
;; commit rmbxz2
M-x magit-status
S                    => all or one ( or u to unstage)), s =>stage one , S => stage all , u => unstage
cc  "commit title"  => add comment then C-c C-c 
Ctrl-c Ctrl-c       
P u                  => push
user:- rmbxz2
password :- 

  or or or by command line

;; commit rmbxz2
$ git add --all .
$ git commit -m "update note"
$ git push -u origin master
  user :- rmbxz2
  password:-

----------------------------------

ignore git subdirectories
Put .gitignore in the working directory
to view all ignored file/dir
    git status --ignored
    git status --ignored
    git status --ignored
**  means ==> wildcard to match any level of subdirectories:
!   means not this one 

/target/              // current directory [target and .gitignore in the same directory], check by  git status --ignored
*/target/             // the correct one is       one_folder_only/target , check by  git status --ignored


bin/                  // git ignore bin/ and subdirectories, same as  **/bin/ ,check by  git status --ignored
**/bin/               // **/bin/ same as  bin/ ,check by  git status --ignored

*.log                 // git ignore all log files ,check by  git status --ignored
!keep_me.log          // git not ignore keep_me.log ,check by  git status --ignored

my .gitignore is

    /target/
    */target/

my .gitignore  is 



Q:- how Apply .gitignore on an existing repository [already] tracking large number of files ?
git rm -r --cached .    // It specifies that the rm  will only act on the staging index(stage), not on the repository(master).
git add .
git commit -m ".gitignore is now working"



Q:- view git ignored files 
   git status --ingored

----------------------------------
Q:- github by ssh

$ ssh-keygen -t ed25519 -C "ahmad.ali.omar.quran@gmail.com"
  eval "$(ssh-agent -s)"
  ssh-add ~/.ssh/id_ed25519
 
  sudo apt-get update
  sudo apt-get install xclip
  xclip -selection clipboard < ~/.ssh/id_ed25519.pub
  # copy  public key to github  
  github --> settings --> SSH and GPG --> new ssh key --> add 

  git remote set-url origin [url from github code button  as ssh]
  git remote set-url origin git@github.com:rmbxz2/ProblemSolving.git
----------------------------------

Q:- what is the Differences between [git pull origin master]  & []git pull origin/master]
    https://stackoverflow.com/questions/2883840/differences-between-git-pull-origin-master-git-pull-origin-master
    [git pull origin   master] will pull changes from the [origin] remote, [master] branch and merge them to the local checked-out branch.
    [git pull origin/master  ] will pull changes from the locally stored branch [origin/master] and merge that to the local checked-out branch. The origin/master 

----------------------------------
Q: reload config 
   git init


Q:- how to unod hard reset 
# by revert 
  git revert a867b4af

# or or by  keeping work at trash (stach),
  git reflog  stash        // list log of stash (trash), ==>  list trash magit zl  ==>  remove trash Magit zd
  git stash push              // push  push in stash ==> magit zz 
  git stash pop    // pop from stack stash, i cant pop more than one, dont dont dont use checkout Magit bb to pop stash


Q:- how to  use git stash pop more than once
 pop from stack stash, i cant pop more than one
 dont dont dont use checkout Magit bb to pop stash
 the solution :- 
 the solution :-  is return to master 
 the solution :- 
 git stash push  // add 1 in stack, magit zz 
 git stash push  // add 2 in stack, magit zz
 git stash push  // add 3 in stack, magit zz
 git stash pop   // pop 1 from stack, magit zp
 git restore .     // magit k , magit k
 git stash pop   // pop 1 from stack, magit zp
 git restore .     // magit k , magit k
 git stash pop   // pop 1 from stack, magit zp
 git restore .     // magit k , magit k
  

Q:- problem
    git status ==> HEAD detached from 4a25a61
the solution is :   
   git checkout master
   magit bb
------------------------



--------------- start Magit --------------------
--------------- start Magit --------------------
c-x g  git status for any buffer in emacs
M-x    magit
h      help
j      jumb to staged untracked unstaged stached
$      show commands
dr     diff between master and origin/master
du     diff between master and work  
ds     diff between master and Stage 


M-x  magit-log-buffer-file   View a file's history in Magit ==> git log -p Leetcode71binaryTreeInOrderTraversal.java
M-x  magit-log-trace-definition   filter      

zz   stack commit in stash (trash).
zl to list  commits in stash

--------------- end Magit --------------------
--------------- end Magit --------------------

=========== end  GIT  ===============




 diminish can hide minor mode only
 important get the names of modes from below
 C-h v ==> major-mode
 C-h v ==> minor-mode
 or or or or
 M-x diminish then select the mode
 M-x diminish-undo to view ti again
(diminish 'anzu-mode)  




c-x 1 not work ?
 temp fix c-x 1 causing by dap causing by treemacs mode
the problem occurs after calling M-x dap-java-debug, C-c c-v c-d
C-u C-u C-x o => delete window or use c-x 0 (close current window)
M-x delete-other-windows-internal
M-x delete-other-windows-vertically
;; the problem occurs after calling M-x dap-java-debug, C-c c-v c-d
;; it is temporary solution  becuase when use c-x 1 (delete-other-windows) not work because treemacs-mode error after calling dap-java 
;; waiting for the fixing bug in  treemacs-mode
;; so my  temp solution is 
(global-set-key (kbd "C-x 1")   'delete-other-windows-internal)



;; dired auto refresh by
;; refresh dired auto by 
;; (setq global-auto-revert-non-file-buffers t) (global-auto-revert-mode)
;;
     stop auto fresh in all  dired 
     M-x global-auto-revert-mode  disabled



========================= gif =======================================              
;; for gif images f next frame, b back frame , ss for zoom in , S 0 for default size
f     ==> forward frame
b     ==> backward frame 
ss 2  ==> zoom in 
s 0   ==> default size
enter ==> play gif , dont stop playing frames
enter ==> animate gif auto,
a +   ==> image-increase-speed
ss 1  ==> for svg 
use smplayer to view gif  forward frame by frame ......  
use smplayer to view gif  backward frame by frame ,,,,,,

M-x image-transform-set-scale 1.5  ;; scale image 1.5 zoom in, 0.5 zoom-out ==>>  s s 


[new]
gif ===> press [f] only , frame by frame  forward
You can run the command ‘image-next-frame’ with f
gif ===> press [b] only , frame by frame  backword 

ss 2 ===> zoom in 2
s 0  ===> default size

;; for gif images f next frame, b back frame , ss for zoom in , S 0 for default size
M-x image-transform-set-scale 1.5  ;; scale image 1.5 zoom in, 0.5 zoom-out ==>>  s s 
=============================== end of gif =================================
# ace-mc-add-multiple-cursors
C-shift-0 ======> c-) ==========> mult cursor qurey .ace-mc-add-multiple-cursors


[[[dont install]]] apt-get install xmlstarlet or xmllint, just use the xmlls from lsp server


Q; howo to filter buffers ? c-x c-b
   /r then programming then m(mark) then D(kill all marked buffers)    or (d) then (x)
   /f fiter by rgex    then D(mark for del kill buffer) then x         or (m) then (D)




Q :- how to add old emacs package  ? 
copy it to elpa then add the name here 
ex:- pdf-tools , i use the old version of pdf-tools 

 '(package-selected-packages
   (quote
    (pdf-tools mvn company-edbi rainbow-mode google-translate real-auto-save company-lsp dap-mode imenus lsp-java lsp-mode lsp-treemacs lsp-ui projectile treemacs treemacs-icons-dired treemacs-projectile use-package hydra ido-ubiquitous format-all flymake-cursor symon plantuml-mode emms-info-mediainfo emms-mark-ext emms-soundcloud fuzzy iedit diredfl look-dired ztree yasnippet widget-mvc which-key web-mode web-completion-data web-beautify vlf sx soundklaus sos smex smartparens simple-httpd runner restclient rainbow-delimiters multi-term move-dup monochrome-theme mark-multiple magit jtags htmlize goto-chg google-maps golden-ratio fiplr expand-region elmacro eimp dirtree direx-grep dired-toggle-sudo dired-toggle dired-subtree dired-single dired-ranger dired-rainbow dired-open dired-narrow dired-k dired-imenu dired-filter dired-efap dired-dups dired-avfs dic-lookup-w3m deferred chm-view bash-completion auto-complete-nxml apt-utils-ido anzu ant ace-window ace-mc ac-html ac-emmet)))



Q :- how to config .emacs ? [best way]
   by many files of of lisp form
   https://github.com/seagle0128/.emacs.d/tree/master/lisp
   https://emacs.nasy.moe/ ==>  i put it in one file here /home/notes_files/amazing_emacs_config_with_usepackage


apt-get install emacs  emacs-intl-fonts  emacs-common-non-dfsg emacs-window-layout emacs-common emacs-gtk emacs-el
aptitude install emacs  emacs-intl-fonts  emacs-common-non-dfsg emacs-window-layout emacs-common emacs-gtk emacs-el
aptitude install emacs 
aptitude upgrade emacs 


  apt-get update ==> not update the system, just update list of software, use apt-get upgrade to update the system packages
  ;; how  to update package ?
  apt-get   upgrade 
  aptitude  upgrade 

  
  ;; this will upgrade and update only  packages for emacs .
  apt-get   install emacs
  apt-get reinstall emacs
 
 ;; How can I install just security updates from the command line ?
 sudo apt-get install unattended-upgrades
    sudo unattended-upgrade -d --dry-run ;; check if  there is any Security Updates are available in Debian/Ubuntu
    sudo unattended-upgrade -d           ;; install available Security Updates in Debian/Ubuntu 
    sudo unattended-upgrade


;; search for emacs bugs in
https://lists.gnu.org/archive/html/bug-gnu-emacs/


to conifig use-package visit ==>> https://github.com/jwiegley/use-package
				  https://jwiegley.github.io/use-package/keywords/

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
build  emacs 26
build emacs from scratch
;; note :- emacs 26.1 is stable
;; note :- emacs 26.2 is not stable
;; note :- emacs 26.3 is not stable

/etc/apt/sources.list
deb-src http://old.kali.org/kali sana main non-free contrib

apt-get update
apt-get build-dep emacs [use this]


;;  check your gtk by 
;; apt-cache policy libgtk2.0-0 libgtk-3-0 (optionally pipe to grep Installed) 
;; it is gtk3

;; emacs 26.2
aptitude install libwebkitgtk-3.0-dev
aptitude install libwebkitgtk-3.0-*
apt-get  install webkit2gtk-driver 
;; emacs 26.3
apt-get install libwebkit2gtk-4.0-*


chmod +x autogen.sh
./autogen.sh


./configure  --prefix=/home/emacs_webkit/emacs-26-2             --with-gif  --with-jpeg --with-png --with-rsvg --with-tiff --with-xft --with-xpm  --with-x-toolkit=gtk3 --with-dbus --with-xwidgets   
./configure  --prefix=/home/emacs_webkit/emacs-26-1-4-new-2020  --with-gif  --with-jpeg --with-png --with-rsvg --with-tiff --with-xft --with-xpm  --with-x-toolkit=gtk3 --with-dbus --with-xwidgets  

  [ i will test --wiht-threads  ]
./configure  --prefix=/home/emacs_webkit/emacs-26-1-new-2020    --with-gif  --with-jpeg --with-png --with-rsvg --with-tiff --with-xft --with-xpm  --with-x-toolkit=gtk3 --with-dbus --with-xwidgets   --with-threads
./configure  --prefix=/home/emacs_webkit/emacs-26-2-new-2020    --with-gif  --with-jpeg --with-png --with-rsvg --with-tiff --with-xft --with-xpm  --with-x-toolkit=gtk3 --with-dbus --with-xwidgets   --with-threads
./configure  --prefix=/home/emacs_webkit/emacs-26-3-new-2020    --with-gif  --with-jpeg --with-png --with-rsvg --with-tiff --with-xft --with-xpm  --with-x-toolkit=gtk3 --with-dbus --with-xwidgets   --with-threads
./configure  --prefix=/home/emacs_webkit/emacs-26-3-blackLaptop     --with-gif  --with-jpeg --with-png --with-rsvg --with-tiff --with-xft --with-xpm  --with-x-toolkit=gtk3 --with-dbus --with-xwidgets   --with-threads

;; look at M-x version  will see the date of creation like this
;; GNU Emacs 26.3 (build 1, x86_64-pc-linux-gnu, GTK+ Version 3.24.12) of ===>>> [[2019-12-04]] <<<===


[just for test and fun, read ./configure looking for --winth- ]
./configure  --prefix=/home/emacs_webkit/emacs-26-1-4-new-2020   --with-mailutils  --with-pop  --with-kerberos  --with-kerberos5  --with-hesiod  --with-mail-unlink  --with-x-toolkit=gtk3 --with-wide-int  --with-xpm  --with-jpeg  --with-tiff  --with-gif  --with-png  --with-rsvg  --with-lcms2  --with-libsystemd  --with-cairo  --with-xml2  --with-imagemagick  --with-xft  --with-libotf  --with-m17n-flt  --with-toolkit-scroll-bars  --with-xaw3d  --with-xim   --with-dbus  --with-gconf      --with-gnutls  --with-zlib  --with-modules  --with-threads  --with-xwidgets  --with-makeinfo  --with-compress-install 

----------------------------start  of emacs 27 emacs27----------------------------

emacs as root
c-x d /su::/home
c-x c-f /su::/root/file.txt
c-x d /sudo::/home



sudo apt-get update
sudo apt-get upgrade

# for kali
/etc/apt/sources.list
deb-src http://old.kali.org/kali sana main non-free contrib

# for linux mint  sources.list deb-src
cp /su:root@zinko:/etc/apt/sources.list.d/official-package-repositories.list to   /etc/apt/sources.list
   


apt-get build-dep emacs 


chmod +x autogen.sh
./autogen.sh
;; emacs 27.1 faster in lsp-moe must be with json to be fast --with json( on by default)
;; https://www.masteringemacs.org/article/whats-new-in-emacs-27-1
./configure  --prefix=/home/emacs_webkit/emacs-27-5-blackLaptop     --with-json
./configure  --prefix=/home/emacs_webkit/emacs-27-12-blackLaptop     --with-gif  --with-jpeg --with-png --with-rsvg --with-tiff --with-xft  --with-xpm   --with-xwidgets   --with-x-toolkit=gtk3  --with-threads  --with-json

./configure  --prefix=/home/emacs_webkit/emacs-27-12-blackLaptop     --with-gif  --with-jpeg --with-png --with-rsvg --with-tiff --with-xft  --with-xpm   --with-threads  --with-json --with-imagemagick
./configure  --prefix=/home/emacs_webkit/emacs-27-13-blackLaptop     --with-gif  --with-jpeg --with-png --with-rsvg --with-tiff --with-xft  --with-xpm   --with-threads  --with-json --with-imagemagick

./configure  --prefix=/home/emacs_webkit/emacs-27-blackLaptop        --with-gif  --with-jpeg --with-png --with-rsvg --with-tiff --with-xft  --with-xpm   --with-threads  --with-json --with-imagemagick


     make  or    make bootstrap (i select this)
     make install
     make clean
     ./emacs   to run it 
     (functionp 'json-parse-string)  t ==> must be true be check if it is support json files build by C langauge
     (functionp 'json-parse-string)  t ==> must be true be check if it is support json files build by C langauge


# [wow finally i found it ]
the solution is install  libjansson-dev
sudo apt install libjansson-dev
look at ./configure output command, must be yes for the question
Does Emacs use -ljansson?    yes ,

M-x package-reinstall lsp-java lsp-mode lsp-ui lsp-treemacs ==>> will generate .elc with libjansson-dev json in C langauge

use emacsw to run emacs-27.1
#!/bin/sh
/home/emacs_webkit/emacs-27-1-blackLaptop/bin/emacs-27.1
/home/emacs_webkit/emacs-27-1-blackLaptop/bin/emacs27




ايماكس
============
نزل الاصدار 27.1 من الايماكس
emacs 27.1

هذا الاصدار بها ميزات جميلة
احدى هذه الميزات هي :
rebuild json.el  by C Language
بناء محرك الجانسون باستخدام لغة السي
بدلا من لغة اللسب
-------------------------
س:- من الذي استفاد من هذه العملية ؟
ج:- المستفيد الاكبر هم جماعة
    lsp-mode
   وبهذا يصبح سريعا جدا بشكل لا يصدق .
--------------------------
 تناقل البيانات بين lsp-mode والسيرفرات تتم
 بوساطة ملفات الجنسون. ولتسريع النقل تم اعادة
 بناء محرك الجنسون داخل الايماكس باستخدام لغة السي
 ولكن لن تستيطع الحصول على هذه الميزة الا في ايماكس 27
 ---------------------------
 ان أسعفتك توزيعتك وحصلت على اخر اصدار من الايماكس
 فنعما بها والا عليك ببناء الايماكس من الكود المصدري
 واكثر نقطة يجب الانتباه لها اثناء عملية البناء من المصدر
 هي تنزيل مكتبة الجنسون
apt-get install libjansson-dev
----------------------------
س:- كيف أتحقق تناقل البيانات في الايماكس 27 يتم باستخدام
مكتبة الجنسون الحديثة ؟؟
ضع المؤشر في اخر هذا السطر واضغط
C-x C-e
(functionp 'json-parse-string)  ==> t
----------------------------
اما اذا كان الناتج هو فراغ nil
(functionp 'json-parse-string)  ==> nil
فهذا يعني انك نسخة الايماكس عندك تستخدم
الاصدار القديم من مكتبة الجنسون
----------------------------
هناك العديد من الاعدادات lsp mode
حتى تجعل الايماكس سريعا
look look at the this link (visit it)
https://emacs-lsp.github.io/lsp-mode/page/performance/
 -use emacs 27 with json libjansson-dev
 -(setq gc-cons-threshold 100000000)  ;; set  100m start of emacs
 -(setq read-process-output-max (* 1024 1024)) ;; 1mb or more  Increase the amount of data which Emacs reads from the process.
 -(setq lsp-completion-provider :capf) ;;     Make sure that you are using company-capf as the completion provider with:
 -(setq lsp-idle-delay 0.500) ;; Optional: fine-tune lsp-idle-delay. This variable determines how often lsp-mode will refresh the highlights, lenses, links, etc while you type.
 -[dont do this] (setq lsp-enable-file-watchers  nil) ;; Ignore watch folders/files

 ;; Reporting performance problems 
-(setq lsp-print-performance t) ;; check performance
 ;; Include emacs performance report. Use the following step to collect it:
 M-x profiler-start and select CPU
  Reproduce the slow behavior.
 M-x profiler-stop


;; view process(emacs) memory usage
or by taskmgr
print emacs
look at RSS
RSS stands for Resident Set Size. It basically shows the amount of RAM your application is using
may be the problem in emacs ram, it is more than 1.2 GB

- i stopped ahmad_config.sh, but not remap keyboard, to solove the problem of emacs slower 
- i activate the sticky keys and keyboard speed and touchpad from xfce4 GUI to solove the emacs slow 


----------------------------end of emacs 27 ----------------------------

./configure --prefix=/home/emacs_webkit/emacs-27-6-blackLaptop --disable-silent-rules  --with-modules --with-file-notification=inotify --with-mailutils  --with-x=yes  --with-x-toolkit=gtk3  --with-xwidgets --with-lcms2  --with-imagemagick  --with-json

cd /snap/emacs/857/usr/bin#
./emacs-27.1 

/snap/emacs/857/usr/bin/emacs-27.1




this is new emacs 
cd ~/temp/emacs-26
cd ~/emacs-xwidgets-25-3/bin/

now i put it in

/home/emacs26


# emacs 27.1 in the easy way
# snapd cant run without apparmor
apt-get install snapd
systemctl start snapd.service
snap install emacs --beta --classic
# sudo systemctl stop apparmor
# sudo apt-get remove apparmor
# sudo systemctl stop snapd.service
cd /snap/bin/
./emacs

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;; end of build emacs ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
empty keys C-c SPC 

C-c h  recentf-open-files  ;; M-x rf open recent files
C-c b  ido-switch-buffer  ;; c-x b

C-c SPC g   yas-insert-snippet ;;  c-c space g or c-c c-d g (lsp-mode)
C-c SPC o   async-shell-command;; M-& ooooo
C-c SPC j   bookmark-jump ;; c-x r b
C-c C-,   beginning-of-buffer ;; M->   M-S-,
C-c C-.   end-of-buffer      ;; M-<    M-S-.



M-x projectile-ripgrep  ;; fing ripgrep in project Must install ripgrep ;; apt-get install ripgrep
M-x projectile-grep     ;; find grep in project; like M-x my-lsp-find-in-project-as-grep ==> C-c c-d c-f
M-x projectile-find-file;; find files in project like fiplr 


;; shell command in .bashrc 
myspacemacsConverter  ;; use spacemacs
myemacsCoverter       ;; use emacs


;; M-x list-packages ==> then install mvn
M-x mvn-clean      ;; from mvn package not from lsp
M-x mvn-compile    ;; from mvn package not from lsp
M-x mvn            then tab to write maven command by selecting command  ;; from mvn package not from lsp

M-x maven-search  ;; search maven repository  from  ~/.emacs.d/plugins/maven-search.el
M-x my-maven-replace-colon-by-tags  ;; "replace : by maven tags after search by M-x maven-search "

M-x rc       my-lsp-FDQN  ,need for java file and lsp to copy relative class with dot 
M-x rc-dot   my-lsp-FDQN-second,can also copy relative folders with/without classes, without lsp 
M-x rc-slash my-lsp-FDQN-third,can also copy relative folders with/without classes, without lsp


M-x gt   my-google-translate-english-to-arabic
M-x gta  my-google-translate-arabic-to-english
c-u M-x google-translate-at-point, then input source and target language 


C-c C-space   not modified 
c-c c-v space not modified 
c-c c-f       not modified in jdee
c-x p s       modified 
c-x p [abcdef...]         not modified

jdee note:- no javac, just (java -jar ecj.jar) => (java compiler)

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;; shell script notes
<<inside>>         before | xargs  after
<<inside>>         before | xargs  after
<<inside>>         before | xargs  after

>>         ==>>>>>>  command << cat input.txt    
<<         ==>>>>>>  command >> cat output.txt
|          ===>>>>>  cat "one two three" |       command ====>>>> one two three  command 
| xargs    ===>>>>>  cat "one two three" | xargs command ====>>>> command  one two three  

;; find all files (not folders) exclude .java extension and classes then replace web1 by web2
find . ! \( -iname '*.java' -or -iname '*.class'  \)  -type f
then t sellect all
[not work]==> then Q in dired M-x dired-do-find-regexp-and-replace
or use M-x diredQ or  M-x 'dired-do-query-replace-regexp web1 ==> web2
(defalias 'diredQ   'dired-do-query-replace-regexp)


;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

M-= count-words-region
M-x list-processes,colors,fonts,command-history,packages
M-x command-history ;; list previous history M-x 
esc C-r => regex search
c-x z zzzzz  repeat the last command


add/remove comment by c-x c-;
add/remove comment to three lines c-u 3  c-x c-;
add comment at the end  by M-;
remove  comment at the end  by C-u M-;

;; view color number as color by M-x rainbow-mode like this
#125478


M-x compare-windows  ;; start comparing from cursor cursor for both windows,can compare same window :)[wow]
                     ;; go to next diff in compre windows repeat command c-x zzzz
		     ;; variables compare-ignore-whitespace and  compare-ignore-case are  null
M-x vh               ;;  toggle two windows from/to horizontal from/to vertical


c-x ps                ==> format-all,  format code like eclipse code, format all sql,web,java,c,css,xml, all languages 
M-x my-sleep second    => sleep with macros



c-x m                 ==> browse url at point, open file.html directly in w3m

M-c  Hi 
M-l  hi 
M-u  HI 
c-x c-u UPPER REGION
c-x c-l lower region
M-x superword-mode     one word ==> AhmedAliOmar ,  Ahmed_Ali_Omar  ==> look at small 2 in modeline
M-x global-superword-mode
M-x subword-mode     three words ==> AhmedAliOmar , Ahmed_Ali_Omar ==> look at comma   in modeline
M-x global-subword-mode
disable subword-mode and disable superword-mode ==> three words ==>  Ahmed_Ali_Omar 
disable subword-mode and disable superword-mode ==> one word    ==>  AhmedAliOmar 

;; wow .emacs setting 
http://nullman.net/emacs/files/init-emacs.org.html save it as txt 
/home/notes_files/emacs_config_nullman.txt

;; note
;; only classes in this file can be automatically imported as jdk source path in jdee
  /home/jdee_workspace/sourcePathx/openJDK/jdk-10/lib/classlist

[very important]
M-x        ==> M-p/n    (view history)
C-x C-f/d  ==> M-p/n    (view history)
M-x        ==> M-r      (search history) ==> C-r/s (view result)  >>> M-x Mr Cr
C-x C-f/d  ==> M-s      (search history) ==> M-p/n (view result)  >>> incremental
C-x C-f/d  ==> file/dir (search history) ==> M-p/n (view result)  >>> fast search

M-x bookmark-save => c-x r l =>(s);; no c-x ps ;; save bookmark by press(s), because new bookmark will be for current session 

what is my current text properties at point ? to view font type or face type 
M-x describe-text-properties 
c-u c-x = ====>>> describe-text-properties 

c-h f tab ;; list all functions
c-h a .   ;; list all command
C-u   C-y  instead leaves the cursor in front of the inserted text

M-x  global-visual-line-mode     ===> change truncate lines globally
M-x  toggle-truncate-lines with  ===> current buffer only, when c-k (not kill all line, put part of it), it is use truncate-lines variable
M-x  toggle-word-wrap             ==> must truncate line work, but full words, it use use the word-trap variable
M-x  set-variable line-move-visual nil   ===> to jump over the truncate line

(require 'help-mode)
(add-hook 'help-mode-hook
  (lambda ()
     (setq   truncate-lines nil)  ;; divide long line into seperated lines
     (setq   word-wrap t)         ;; (if truncate-lines nil) then view it as complete words
  ))



M-x gt   translate english to arabic
M-x gta  translate arabic  to english


c-\         my-toggle-bidi-direction-and-input-method
c-u M-x google-translate-at-point, then select source languages and target language,
        if you want to set it as C-u M-x gtx =>>put it like this  (defalias 'gtx 'google-translate-at-point)


[old]
c-u M-x gt  translate from arabic to english or any language 

M-x ts       my-delete-trailing-whitespace-of-region or paragraph, instead of M-\ or M-SPC(one-space)
M-x delete-trailing-whitespace  ;; (region/no region) delete trailing-whitespace
M-x whitespaces-cleanup          ;; (region/no region) delete trailing-whitespace
variable delete-trailing-lines ==> If non-nil, M-x delete-trailing-whitespace deletes trailing lines
set-variable  flymake-log-level = 3,  to see log file  ~/flymake.log
C-c d ==> M-x 
C-c D ==> M-X relevant commands used 


;; search  .gz files by zgrep
gzip -r folder #  compress files in folder one by one  by gzip
find . -iname '*.gz'  -type f -exec zgrep --color -nHi -a "exit" {} +

;; what is the differance between 2 jar files
[important======> compare files and methods, not contents of files]
[important======> compare files and methods, not contents of files]
[important======> compare files and methods, not contents of files]
apt-get install jardiff
jardiff 
jardiff -f ecj-4.4.2.jar -t ecj-4.7.3a-from-tomcat9.jar -o html -O output.html
jardiff -f ecj-4.4.2.jar -t ecj-4.7.3a-from-tomcat9.jar -o xml -O output.xml


# to compare everyting in two jars
extract two jars, decompil all classes to java then ztree-diff 
1- in dired ==> !unzip or & unzip
2- find . -iname '*.class' -execdir jad -s java  {} +   ;;;;;; replace .jad to .java
3- ztree-diff
M-x ztree-diff, then ((h) ==> hide equal files),((r) => re ztree-diff current folder),((d)==> ediff-file current files like githut -+)

note:- fastest diff between two buffers windows
M-x compare-windows  ;; start comparing from cursor cursor for both windows,can compare same window :)[wow]
                     ;; go to next diff in compre windows repeat command c-x zzzz
		     ;; variables compare-ignore-whitespace and  compare-ignore-case are  null


instead use  jadx or jadx-gui
jadx /home/downloads/me.jar  -d  /home/downloads/exportSourceCode  ;; must absolute path

M-x ztree, x for expand ==> view dir as tree, 
           xx for (expand all)
M-x ztree-diff, then ((h) ==> hide equal files),((r) => re ztree-diff current folder),((d)==> ediff-file current files like githut -+)
M-x ztree-diff-toggle-show-equal-files  ==> hide/show equal files ==> press only (h)
M-x ztree-diff-toggle-show-orphan-files ==> hide/show orphan files
(kbd "h")  ztree-diff-toggle-show-equal-files
(kbd "d")  ztree-diff-simple-diff-files ==>(ediff-files current file only like githut -+)
(kbd "H")  ztree-diff-toggle-show-filtered-files
(kbd "D")  ztree-diff-delete-file       ==> (delete current file)
(kbd "C")  ztree-diff-copy              ==> (copy current file from left/right to left/righ)
(kbd "v")  ztree-diff-view-file         ==> (open current file/folder)
(kbd "r")  ztree-diff-partial-rescan    ==> (re ztree-diff current folder)
(kbd "R")  ztree-diff-full-rescan       ==> (ztree-diff full)



# search jar,zip files by zipgrep
# zipgrep search inside *.zip or *.jar but cant visit file
{} the matching file
-execdir run command in the same file dir
-exec    run command here
apt-get install xz-utils - XZ-format compression utilities; for zgrep 
find . -iname '*.zip'  -exec zipgrep  -nHi  -e "exit" {} +
find . -iname '*.jar'  -exec zipgrep  -nHi  -e "exit" {} +
find . -iname '*.pdf'  -exec pdfgrep  -nHi  -e "exit" {} +


# convert all jar to java classes
in dired ==> !unzip or & unzip 
find . -iname '*.class' -execdir jad   {} \;
# replace .jad to .java
find . -iname '*.class' -execdir jad -s java  {} +

instead use  jadx or jadx-gui
jadx /home/downloads/me.jar  -d  /home/downloads/exportSourceCode  ;; must absolute path

;; merge jars into one jar
 mkdir tmp
 cd tmp
 unzip -ou  ../aa1.jar     ;; -ou o->override u->update
 unzip      ../aa2.jar
 unzip      ../aa3.jar
 cd ..
 jar -cvf combined.jar -C tmp .



;; how to remove ^M in files ?
by command dos2unix A.txt


change end line for unix and windows ???
M-x set-buffer-file-coding-system, then give a value of “mac”, “dos”, “unix
C-x Enter  f  =>>  dos or unix
C-x return f  =>>  dos or unix (buffer)
C-x return F  =>>  dos or unix (file)


or or or
by mouse click  U in status bar to view current file coding system
by mouse click  : in status bar to change coding system mac dos unix
                DOS ==> c-x return f ==> undecided-dos
                Mac ==> c-x return f ==> undecided-mac
                :   ==> c-x return f ==> undecided-unix

Q:- how to describe current coding system for file ?
M-x describe-current-coding-system 


# check tomcat apache connected port 
# check mysql  port 
ss -tupln


#  how to view all argument with process 
  watch -n 1 "ps -w w   -eo args >> /home/temp/all.txt"

# check maria mysql process 
ps aux | grep mysql


# view all process with full argument every 1 second and record it in hi8.txt file
# in terminal not in emacs 
while [ 1 ] ; do ps -aux >> hi8.txt ;sleep 1 ; done


# you can see that httpd (Apache) listens on port 80
lsof -i tcp:80

# List programs with open ports and connections
lsof -i -P 
lsof -i -P -n

# list opend files by java command
lsof -c java

;; check ports 
ss -tupln (l for listening)


M-x  my-toggle-case-replace  ;; (t)  GNU Gnu gnu ;;  (nil) gnu gnu gnu
M-x  my-radio
M-h M-h M-h => incremental mark paragraph 

note :- folders  build dist  => for ant
note :- folders  target      => for maven

C-s M-c    seach by case sensitive (uppercase and lowercase) [tarref]
C-s M-e    edit search
C-s  backspace  delete minibuffer search



M-x keep-lines same as M-x dnml
M-x dd  => delete-duplicate-lines
M-x dml  (flush-lines) => delete-matching-lines
M-x dnml (keep-lines)  => delete-non-matching-lines


M-x ifconfig
M-x iwconfig
M-x route
M-x dig

C-c space g   global snippet    or c-c & c-s yas-insert-snippet or (c-c c-d g lsp-mode

;; xml nxml keys
M-x rng-set-schema-file => set rnc file into schemas.xml=>  /home/jdee_workspace/sourcePathx/jars/schemes/schemas.xml"
< c-m-i    edit tags
c-c c-f    insert end tag

c-c /      insert end tag
C-c tab    close tag

c-c c-n next     go to error in xml, (rng-next-error)
c-c c-p previos  go to error in xml, (rng-previous-error)
c-c c-v  rng-validate-mode start / stop (valid inValid in mode line )

c-c c-s c-w     show which rnc file run
C-c C-s C-a     which re-applies the rules based on the current content of the document.
C-M-n/p/d/u     xml element moves


c-c j set global, not local, so i can vist class file from xml
      [stop it]    (global-set-key  (kbd "C-c j") 'my-jtags-show-declaration) ;; visit tag(method,function), to return c-c s

M-x cpu ;; view symon-mode = cpu mem(ram+swap) network and battery 


;; easy elisp examples
   https://caiorss.github.io/Emacs-Elisp-Programming/Elisp_Programming.html
   i downloaded website here =>  /media/D/HOME/notes_files/Emacs-Elisp-Programming-gh-pages




[important note] :-  use macros it is better than mc
[important note] :-  mc with registers it will work, 
[important note] :-  mc with yassnipt(jsp-jstl)  it will work, not with keys, but the template words
[important note] :-  mc with html-mode not web-mode because (c-< mc/skip-to-next-like-this )not work in web-mode



[old]
;; TAG file is result of  etags command
c-c j        ==> (visit method,variable) by jtags.el in TAGS TAGS, must be like this to work(no space)  ArrayList<league> leaguelist, not like this  ArrayList space-error  <league> leaguelist
M-x find-tag ==>[[don't use it, obsolete,deprecated]] find tag in TAGS TAGS  (M-x find-tag this function is obsolete since 25.1)
M-x  jtag   ==> 'jtags-update-tags-files

;; regexp-builder
M-x regexp-builder, [important](default now) C-c TAB => string => then use  \ not \\ 
M-x list-matching-lines then regexp M-x lml
M-x qr, rx, dml, dmnl, C-c C-v C-f, fg, fd 
M-x hlr (highlight-regexp), 
M-x uhlr (unhighlight-regexp) 
[wow] use rx.pdf for regexp  rx 

;; in dired
 v    view file as read only,  q for quit
 A    use t first the A [hang for java files] search inside marked files, in result (n/p)=> visit files,  (r)==> xref-query-replace-in-results
 A    search in marked files, :) :) M-x grep-mode to view as n/p visit files,
 Q    use M-x diredQ ,query replace regexp on multi files by  M-x fd then t then Q
 M-x  gpgx => decrypt movie in dired, and play it 

C-s c-w better than M-s . because it will increase search 
M-x wk    whick key, M-x  which-key-show-keymap
M-x firefox-url  'browse-url-firefox
M-x firefox-external  'w3m-external-view-current-url) ;; w3m ==> firefox
M-s . search for current word


;; flycheck work by major-mode not file extension, change to right mode then it check errors directly ( xml-mode, html-mode )
c-c e    next-error, or C-c ! n
c-c r    previos-error, or C-c ! p
c-c w    flycheck list errors and warnings c-c ! l  
c-c !    flycheck keys
c-c ! v  flycheck view checker status 
f        flycheck filter errors or warnings

c-x r f   save frame to register, if use it in dired then must use return(enter) instead of a
C-x r r   copy rectangle then C-x r i (paste it )
c-x r w   save the window to register,


c-h e      ==> view errors messages (view-echo-area-messages)
;; install emacs documentation c-h i, elisp doc,  in /usr/share/info/emacs-25/
;; apt-get install emacs25-common-non-dfsg
;; apt-get install   emacs-common-non-dfsg  in /usr/share/info/emacs/
;; copy emacs documents as text file ==> bookmark emacs_manual_full.text
c-h i
s  => search document
[] => next/previous
u  => up 
i  => index view

M-x my-insert-date   ==>  change it to  30-07-2018
c-c & c-s  => view all snippet, M-x yas-insert-snippet
use bookmark => doc_servlet doc_jdk doc_struts
[old] c-c b ==> list last edited methods to update use  c-c ,,  or c-c c-d ,

M-x sh-execute-region or M-| sh ===>> run area of commands

C-c f  or C-tab => hippie-expand hippie-expand not from dict
C-z      ==> auto-compete menu  one word (must be the only word  means fuzzy
C-c z    emmet-mode
C-c C-z  emmet-wrap-with-markup, hi => mark it then c-c c-z then a => <a href="">hi</a>

C-c C-c e  jsp-el 
C-c C-c s  jsp-scriptlet
C-c C-c d  jsp-directive-page
C-c C-c c  jsp-comment
C-c C-c j  jsp-jstl
c-v and  m-v  scroll file


c-2 r jump to local variable and rename it, dont dont dont use M-. to  jump to local variable, to return c-c s


C-M-a   c-beginning-of-defun or method, use it better than c-c n, can jump to class name 
C-M-e   c-end-of-defun or method , use it better than c-c p
c-M-x   kill(){}
c-M-h   mark (){}
C-c  n	senator-next-tag or method and variables     ;; if set it to global you can use it with xml(or use c-c c-t in web-mode
C-c  p	senator-previous-tag or method and variables ;; if set it to global you can use it with xml

M-x umlx   => folder to image
M-x uml    => text to image
M-x umlGUI => dynamically generate svg from text files in the current directory
M-x auto-image-file-mode t => view color svg( is a xml file)  as good image  ==> image[svg] not image[imageMagick]
file.svg open it by M-x xwidget-webkit-browse-url   file:/home/hi/hi2/file.svg

eimp image the best solution for zoom in and zoom out in image is 
zoom in but but but 
M-x image-transform-set-scale 1.5  ;; scale image 1.5 zoom in, 0.5 zoom-out ==>>  s s 
M-x then M-x image-transform-fit-width  ;; for fit image as width 
M-x image-transform-reset ;; small size as original 
the best zoom in better thant + -
file.svg open it by M-x xwidget-webkit-browse-url   file:/home/hi/hi2/file.svg

# view all options for plantuml ?
java -jar /home/jdee_workspace/sourcePathx/jars/private_JAR/plantuml.1.2018.10.jar -language

# how can i hide class in plantuml ~/plantumlDependency.txt
at the end of file, just write 
hide package.package.class
hide package.package.*  
[work]
hide java.*
hide javax.*
hide  SK.*
hide  com.jgoodies.*

   class1 .[hidden].> class2
   class1 .[#blue].> class2


'  comment plantuml line 
/' comment plantuml multi lines  '/
so try to comment multi line --> ..> instead of hide package.class 

# svg is faster than png ten times
-tsvg not tpng  ==> svg is a xml file 

# plantuml -gui ==> still working directory, dynamic directory

left to right direction
skinparam shadowing false

left to right direction
skinparam shadowing false

;; plantuml straight line 
 skinparam linetype polyline
or 
  skinparam linetype ortho


#[dont do this] how make svg working in linux
[dont do this ] by apt-get install inkscape, librsvg*



[do this to open svg with good colors and good view]
M-x  disable auto-image-file-mode
or tweak image-file-name-extensions.

;; wow
;; how to list current  emacs processes  and argument ?
M-x list-processes 


M-x my-tomcat-start                  (from my .emacs)
M-x my-tomcat-stop                   (from my .emacs)
M-x my-tomcat-restart

[dont use it]
;; M-x my-tomcat-clean                  (from my .emacs)


M-x my-yas (clean my-yas minor mode)

# how query replace string in multi files ? ex :- replace doGet by doPost
1- fd  (find-dired) 8fd8 be carefull and type -iname  '*.java'  -type f (to select files only,not select the processes files #file) 	
2- t   (select all)
3- Q   (dired-do-find-regexp-and-replace)[not work], use instead the M-x diredQ
4- y space or no 


C-c use restclient then  c-c c-n/p ====>  nex/previous
umlx  then edit the file then use uml (see .emacs )

;;fiplr
c-c G    ==> list directory
c-c g    ==> list files, ;; c-c g can jump to files in directory from anywhere, no need to type c-c c-v l to return to top prj.el
c-c c-g  ===> clean
M-x fg ==> search in files or (c-c c-v c-f in jdee)


c-c c-d c-n  global create full path class(directory+file) at once , my-create-new-class in .emacs,
c-x c-f c-f ===>> to create a specific file without ido help 
+       c-f ===>> to create a new Directory(in dired) without ido help
c-x d  M-m  ===>> to create a new Directory(every where) without ido help

c-x c-f ==> M-s (search) or (M-n/p)history
c-x d   ==> M-s (search) or (M-n/p)history


    c-c c-c  comment region,
c-u c-c c-c  uncomment region 
M-;      commnet uncomment  line with    mark region
c-x c-;  comment/uncomment  line without mark region 
c-c c-k  c-toggle-comment-style from // to /* */ when add comment by M-; or by c-x c-;

      c-q ==> local  go to last change(s) 
c-m-j c-q ==> global go to last change(s)  

c-spc c-spc   Set the mark
c-u c-space   pop local mark  
c-x c-space   Pop Global Mark 

c-x z  zzzzz         repeat last command 



M-x dap-debug-edit-template  in lsp like ==> jdee-run-set-app-args


M-x my-Spell   just for select region, space =>(dont fix it)


c-c c-v c-f search only folder not zip files 
    	    "hi"  ==must be==>  \"hi\" because the grep "  \"hi\"   "
            -sv   ==must be==>  \-sv 	  
            print.*sleep   = print then many char then sleep
            ^a[h]\+.[ae]\?[^i]d$  == ^begin of line,    ahmad ahmed Ahmed Ahhhhhmed $end of the line, not ahmid 
M-C-s       first\|second first or second 

M C-s   \<one\>   ==> search only the word only , same as M-s w
M-s w             ==> search only the word only without CamelCase 
M-s _             ==> search only the word only without _, same as M-s . [use C-s c-w will increase instead of M-s . ] (but this for current word)

M-s _ search one word, no  underscore
M-s w search one word, yes underscore 

M-x fg
M-x fd
M-x fgd
8fg8   ==>   find . \( -iname  '*file*.txt' -or -and  -iname '*.pdf'   -type f \) -exec grep -Hni "^a[h]\+.[ae]\?[^i]d$" "first.*second"  {} + 
8fd8   ==>   -iname  '*file*.txt' -or -and -iname '*.pdf' -type f   -iregex ".*/e[a-zA-Z0-9].*\.pdf"   -regextype sed -iregex ".*[t]\{1,2\}"   -cmin -60  -mmin +60 -amin -20 -size +50M -size -100M  -user user -group group 

(defun my-toggle-case-replace () in .emacs 
 or use M-x set-variable  case-replace t or nil from -learning gun emacs- chm  book

c-j    avy word or region select or c-j then c-j then c-w to kill region between two jump points
c-S-j  pop up mark , go to the original point reversibly.
c-c c  avy copy line in eclipse for open emacs, i change it to c-c c for copy lines and c-c k for cut or kill
c-c k  avy move line i change it to c-c k for kill or cut lines 
c-x c  duplicate area or line

M-up   move lines up
M-down move lines down

C-2 r  rename local variable


c-'  iedit-mode, dont use c-g to quit , can use it for modify instance variable
tab  next or C-i 
M-;  toggle selection or remove selection
C-c a  iedit hide unmatched lines, dont use c-g to quit c-c a, this will cause problem
         [[[ important note ]]] => dont use c-g to quit c-c a, this will cause problem
C-"    hide matched lines,
shift-tab previous
M-space blank
M-N    numbering lines 
c-g    exit
M-SPC		iedit-blank-occurrences
M-<		iedit-goto-first-occurrence
M->		iedit-goto-last-occurrence
[wow] M-M       iedit-switch-to-mc-mode
f1 m            help-key-description for iedit 



C-x n n   narrow-to-region
C-x n d   narrow-to-defun 
C-x n w   wide 

C-c C-d  j 	fast jump to variables and methods

C-c C-v t	jdee-gen-try-catch-wrapper ((both))
C-c C-v f	jdee-gen-try-finally-wrapper

c-x ps                ==> format-all,  format code like eclipse code, format all sql,web,java,c,css,xml, all languages 
[not good]C-c C-q renident defun or tag, c-indent-defun, 



C-c C-d  C-w	senator-kill-tag ;; use C-y to yank or paste 
C-c C-d  C-c o	senator-copy-tag ;; use C-y to yank or paste 
C-c C-d  M-w	senator-copy-tag ;; use C-y to yank or paste 


C-c @ C-c    Hide/show  the current block (M-x hs-hide-block). (add-hook 'jdee-mode-hook 'hs-minor-mode) ;; open jdee first then open hs-minor mode  ;; C-c @ C-c        
C-c @ C-l    hide all   then  C-c @ C-M-s show all

M-x gls or glass,  best way to view CamelCaseWord as Camel_Case_Word

C-c e     flymake-display-err-menu-for-current-line
C-c w     flymake-popup-current-error-menu, or use flymake-cursor-mode to view it in tiny buffer
C-c r     flymake-goto-prev-error



M-& jad or !jad  or & jad -s java (set java  extension)  ===>  java decompiler jad 

instead use  jadx or jadx-gui
jadx /home/downloads/me.jar  -d  /home/downloads/exportSourceCode  ;; must absolute path

M-x umlx uml diagram for currenct class with package 
M-x umlx     convert folder(dired ) to image called  ~/plantumlDependency.png, can run command from the java file 
M-x uml draw plantuml code ,convert txt to image and open it 


C-; er/expand-region
C-: er/contract-region( C-Shift-;  )
C-shift-0 ======> c-) ==========> mult cursor qurey .ace-mc-add-multiple-cursors
M-x rs M-x replace-string 
M-x qr M-x query-replace-regexp

M-x edit-abbrev ;; edit for all all abbrevs

[old]
C-c C-d s  replace-string ;; M-x rs qr

================  Web-mode ====================
C-c   general
C-c-t tag 
C-c-e elemnt
C-c-a attribute
C-c-b block

[wow select tag]
c-c c-e a => select content 
c-c c-e s => select content+tag
c-c c-t s => select beginging of tag

General                                            
M-; comment / uncomment line(s)       ;; select after if dont select region  
C-c C-f toggle folding on a tag/block ;; more than, less than 
C-i[tab] indent entire buffer
C-c C-s insert snippet                         
C-c C-w toggle display of invalid whitespaces  ;; in jdee subword-mode
C-c C- jumping
mark and expand  C-c C-m   or    C-c enter    c-m =enter

Block                         
C-c C-b b block beginning	  
C-c C-b c block close    	  
C-c C-b e block end      	  
C-c C-b k block kill     	  
C-c C-b n next block     	  
C-c C-b p previous block 	  
C-c C-b s block select      

DOM                                
C-c C-d a replace apostrophes    
C-c C-d d show tag mismatch      
C-c C-d e replace HTML entities  
C-c C-d n normalize              
C-c C-d q replace dumb quotes    
C-c C-d t traverse dom tree      
C-c C-d x xpath                  

HTML attribute                   	     
C-c C-a b attribute beginning	     
C-c C-a e attribute end      	     
C-c C-a i attribute insert   	     
C-c C-a k attribute kill     	     
C-c C-a n attribute next     	     
C-c C-a p attribute previous 	     
C-c C-a s attribute select   	     
C-c C-a t attribute transpose        

HTML tag                        
C-c C-t a sort attributes     
C-c C-t b tag beginning       
C-c C-t e tag end             
C-c C-t m fetch matching tag  
C-c C-t n next tag            
C-c C-t p previous tag        
C-c C-t s select tag          

HTML element                                                                                                 
C-c C-e / element close, or just type  </  
C-c C-e a select element content                                                                         
C-c C-e b element beginning                                                                              
C-c C-e c element clone                
C-c C-e d child element (down)         
C-c C-e e element end                  
C-c C-e f toggle folding on children   
C-c C-e i element insert               
C-c C-e k element kill                 
C-c C-e m mute blanks between children 
C-c C-e n next element                 
C-c C-e p previous element             
C-c C-e r rename element                                                 
C-c C-e s select element                                                                                 
C-c C-e t transpose element                                                                              
C-c C-e u parent element (up)                                                                            
C-c C-e v element vanish                                                                                 
C-c C-e w wrap element, select area then c-c c-e w then tag 

Helper functions
web-mode-apostrophes-replace : replace ' by ’ (only in HTML content)
web-mode-entities-replace : replace html entities (only in HTML content)
web-mode-quotes-replace : replace dumb quotes (only in HTML content)

======================= w3m-emacs ==============================

C-c C-w	close the current emacs-w3m buffer.
g  (open the following url ),then M-p/n 
log file in  ~/.w3m/log file for request and response
a then v or V (new buffer) => bookmark ==> edit bookmarks here ==> /home/importantDIR/EmacsBookmark/w3mBookmark

c g c-y  edit current url
M-k	Display cookies and enable you to manage them.
M-s     list all visited pages
C-c M-h  history, use M-s it is better
c-c c-s pop up menu for tabs
^       go up in url 
A	Display the report of changes in web pages.
s 	search google in same buffer
S 	search google in new  buffer 
R 	not r, Reload the current page.
B 	Move back to the previous page in the history.
U 	Visit the web page.
M-d 	Download the URL.
d 	Download the URL under point.
\ 	Display the html source of the current page.
=       display the response headers 
b 	Scroll down the current window, or go to the previous page.
[ ]     next/previous form 
{ }     next/previoud image
g       current buffer
G	new session(tab) 
u	copy Display the url under point and put it into `kill-ring'.
c	copy Display the url of the current page and put it into `kill-ring'.
	see file /root/.w3m/.cookie

I	Display the image under point in the external viewer.
M-i	Save the image under point to a file.
C-c C-npwk
C-c C-t	Create a copy of the current page as a new session.
C-c C-n	Turn the page of emacs-w3m buffers ahead.
C-c C-p	Turn the page of emacs-w3m buffers behind.
C-c C-k	Try to stop internal processes of a page.
M-x firefox-external

t	Toggle the visibility of an image under point.
T	Toggle the visibility of all images.
M-T	Turn off to display all images.
M-[	Zoom in an image on the point.
M-]	Zoom out an image on the point.
E	Edit the local file displayed as the current page.
e	Edit the local file which is pointed to by URL under point.
D	Display a directory tree.


================================================================

C-M-j winner-undo
C-M-k winner-redo , return to the original buffer(modified buffer )

c-x tab // move
c-x c-j // shift+6 ^, and in dired use it to go to up folder
c-x c-o // delete empty line

M-x describe-variable  
M-x font-lock-mode    => disable theme for this buffer 

M-q  ==>> fill-paragraph

c-x o    ==> ace-window  then char
C-u C-x o ==> swap current window to (many windows)
C-u C-u C-x o => delete other windows  or     use c-x 0 (close current window) 

C-h-n   ==> emacs news 



c-spc c-spc          Set the mark, pushing it onto the mark ring, without activating i
c-x c-space          Pop Global Mark (jump to another  buffer for mark ring  ), c-u c-space (inside buffer)
c-u c-space          pop local mark  (inside buffer for mark ring )

C-x l            Count Lines Buffer

M-x gt        google-translate from en to ar
M-x gta       google-translate from ar to en
M-x reader   festival
M-x my-yt       play youtube
M-x my-youtube-search   search in youtube only 
M-x emms-play-url 8hayat , then M-x stop
M-x my-radio , then stop
==========================================

change end line for unix and windows ???
M-x set-buffer-file-coding-system, then give a value of “mac”, “dos”, “unix
C-x Enter  f  =>>  dos or unix
C-x return f  =>>  dos or unix
or or or
by mouse click  U in status bar to view current file coding system
by mouse click  : in status bar to change coding system mac dos unix
                DOS ==> c-x return f ==> undecided-dos
                Mac ==> c-x return f ==> undecided-mac
                :   ==> c-x return f ==> undecided-unix


Q:- how to describe current coding system for file ?
M-x describe-current-coding-system 

==================== calendar  ======================

c-u M-! date or by template yasnippet just right time  Sun May 17 07:23:03 2015

M-x calendar
g    go
g d  go to sepsific day
g i  islamic calendar goto

p    print 
p i  print islamic calendar current day
p c  print current day of year

M-=  select from to days then count days
S    sunrise sunset 
.    go to today
A a		appt-add  alarm will stay for 999 second wow ;; in kali ,in title bar set always on top
A d		appt-delete alarm

M-S-6   delete-indentation M-^
M-S-4   is spell word correct( M-$)
F10     menu bar

c-x m       display current url inside w3m, or open current file in dired inside w3m
M-x locate  find in the system database
M-x wk      whick key show help
M-x firefox-url  ;;browse-url-firefox
M-x firefox-external ;; w3m-external-view-current-url
M-x quick-calc ;; C-x*q    $ previous result 

M-: eval-expression
M-x Reverse Region (unbound): Reverse the order of lines in a region

focus to the right shift

;;;;;;;;;;;;;;;;

what is your name 
hi sir 
ok ok
     M-x Reverse Region (unbound): Reverse the order of lines in a region
ok ok
hi sir 
what is your name 
;;;;;;;;;;;;;;;;

emacs web server ==> simple httpd 
M-x httpd-serve-directory
M-x httpd-serve-start
M-x httpd-serve-stop
127.0.0.1:8080
default port is 8080
gufw stop it to work , to start again must be on not off then close it
#
# allow port 8080 (in/out)
ufw status verbose
sudo ufw allow        8080/tcp
sudo ufw delete allow 8080/tcp
ufw status verbose


apt-get install ufw
sudo ufw disable
sudo ufw enable

ufw status
ufw status verbose

# the default 
sudo ufw default deny incoming
sudo ufw default allow outgoing


# incomming and outgoing 
sudo ufw allow in  8080 (in ==> incomming)
sudo ufw allow out 8080 (out==> outgoing)


# allow incomming port 22
sudo ufw allow    22/tcp
sudo ufw allow    ftp

# allow port 8080 (in/out)
sudo ufw allow        8080/tcp
sudo ufw delete allow 8080/tcp

# reset every thing as default 
sudo ufw reset

# Allow Specific IP Addresses on Specific port
sudo ufw allow from 64.63.62.61 to any port 22

================================================================

c-/    undo
c-?    redo 


c-x-f M-s or automatically search, for create new file  stop search press \   backspace or c-x-f c-x-f or c-e for edit 

M-x term  c-c c-j to move ==> c-c c-k to original
M-x wb  open buffer by w3m

M-x sm  ==>  my-save-current-kbd-macro-to-dot-emacs, if you want to edit it jsut look at ?(means char
best to save macro  to register c-x c-k x => c-x r j 1  => c-x z zzzz   or save it  to macro.el 
c-x c-k return  ==> edit macro then put it in register again c-x c-k x 



;; systemd start mysql 
systemctl status mariadb
systemctl start mariadb 
systemctl start mysql
systemctl stop mariadb

;; start mysql mariadb
mysql -u root -p

;; List programs with open ports and connections
lsof -i -P

;; check ports 3306
ss -tupln (l for listening)

M-x vh  ==> vertical windows
M-x sql-mysql
M-x sql-postgres  ==> dont enter the server=
M-x ssp set product type (mysql postgresql ansi....)
M-x ssb  important to connect more than one file.sql file2.sql file3.sql 
c-x r f a   frameset-to-register save frame to register,if use it in dired then must use return(enter) instead of a
c-x r j a   jump-to-register
C-c s      [show tables ]   sql-list-all == list all  tables ==  c-c c-l a 
c-.          sql-list-table  c-c c-l t , please change it to c-.(i changed it )

M-x sql-save-connection ;; save it in .emacs as alist
M-x sql-connect         ;; connect to old  connections which saved as list in .emacs


# connect very fast by command 
M-x sql-connect 
(setq sql-connection-alist
      '((pgsql-emp (sql-product 'postgres)
                    (sql-port 5432)
                    (sql-server "")
                    (sql-user "ahmad")
                    (sql-password "ahmadjar")
                    (sql-database "emp"))
                (mysql-emp (sql-product 'mysql)
                   (sql-port 3306)
                   (sql-server "localhost")
                   (sql-user "ahmad")
                   (sql-password "ahmadjar")
                   (sql-database "emp"))))



M-x my-sql-diagram  draw entity diagrams 
C-c C-c  send pragraph  
C-c C-b  send buffer   
C-c C-s  send string   
c-i    tab
c-m    enter 
c-j    enter, i change it to avy jump 
c-o    enter
c-[    escape 
[old] c-x ps save all bookmarks , M-x ps show process 
[new] M-x bookmark-save or just press (s), because the new bookmark for current sesssion only

M-x flyspell-buffer then
M-x flyspell-mode c-, c-.
C-M-i  ispell-complete-word

or just for selected region 
M-x ispell-region (first c-x n n then c-x n w)

or for one word
M-$ current word without select it 

c-o     new line
c-x c-o delete all empty  lines
c-x c-q enable/disable read only files 

c-x c-w  save as( rename file and location )
c-x i    insert file_1  to this file_2 (keep the file_1 as is )
M-x write-area    =>  insert area to file_, but remove all current  data in file_1
c-x c-i  identation  area to  left right (movement area)
c-x s    save all
c-x q    query in macro in the Begin of macro 

c-x z repeat the last command

c-)  mc-ace jump, then enter 
c-shift-n mc-new or just press [enter or return]
c-> select word  then =>  mc-next,
c-< deselect word 
c-c c-> mc-all-next, then c-g 
M-x mc/insert-number-or-letter
c-g to remove selection 
[undefined] c-c c-<  mc-unselect

html-tags
M-x nxml-mode then  <c-m-i 

note:- use mc with registers 

[important] C-x space => mark rectangle
C-x r SPC	point-to-register  
C-x r j		jump-to-register

c-x r s or x => copy region to register 
c-x r r      => copy rectangle to register
c-x r i or g => insert/paste from register
 save macro  to register c-x c-k x => c-x r j 1  => c-x z zzzz   or save it  to macro.el 

but             
c-x r k kill region
c-x r y yank-paste rectangle
also
C-x r t		string-rectangle replace rectangle by this string 

C-x r +		increment-register
C-x r N		rectangle-number-lines
C-x r c		clear-rectangle 
C-x r o		open-rectangle open space of rectangle 

C-x r f		frameset-to-register save frame to register,if use it in dired then must use return(enter) instead of a

space j       (point is before and can move it)
ky

ri==> ii
si==> ii
t
+( for string only not rectangel)
N
c,o

C-h w    command to key         (note must be at the current mode)
c-h k    key     to  command    (note must be at the current mode)

c-h b    show all/(not all) keybinding
c-h a . all command

c-h c :- describe-command

c-h w :- yank => c-y ;; command to key       (note must be at the current mode)
c-h k :- c-y  => yank;; key     to command   (note must be at the current mode)
c-h m :- describe current mode
c-h b :- bindings
C-h a :- apropos-command
c-h o :- options
C-h d :- apropos-documentation
c-h l :- last 100 command
C-h l :- view-lossage
c-h P :- discribe package
c-h r :- emacs doc
C-h B :- describe-buffer
C-h e :- view-echo-area-messages
C-h f :- describe-function
C-h v :- describe-variable

c-h f      show info about command 
c-h d      wow ,search for an emacs topic inside emacs it self , apropos-documentation
c-h l      display last 100 keystroke
c-h enter  describe file

[ido-mode] ==>> read the ido-mode  c-h d ido-mode 
double c-x c-f to stop auto  searching
c-e  edit path
M-s  start searching 
M-o  cycle file in the history 
M-p  Go to previous directory in work directory history.
M-m	Prompt for a directory to create in current directory.
M-l	Toggle literal reading of this file.

c-x c-f double stop searching / open old ido
M-p/n   directory history ,
M-s     search for files or dir in minibuffer 
C-r/s   display the search results 
M-m     create new folder  in the ido-mode

[Ibuffer]
/f filter name
/c  wow  filter content

M-x fg      then n,p  
M-x occur   display search string M-g n then  C-x z
M-s         [in mini buffer ]also search at the ido-mode 

[in buffer] very important  
M-s o       occur,  M-x oc
M-s .       like c-s put search the current word at point without underscore
M-s . M-s o  amazing occur current word, M-p/n for next-previous 

M C-s   \<one\>   ==> search only the word only , same as M-s w
M-s w    with_    ==> search only the word only without CamelCase ,but with underscore _
M-s _    without_ ==> search only the word only without _, same as M-s . (but this for current word)
M-s .    without_ ==> search current word no underscore

M-s .   no  underscore,search current word 
M-s _   no  underscore search one word
M-s w   yes underscore search one word


hiabxx
hiabxx
abxx
abxx_a
abxx

c-s c-w search the current word, better than  M-s . 

[ pdf ]
o       pdf-outline
tab     sub outline  , space to open 
M-x    pdf-occur 
M-x    pdfb black pdf 
C-c-a t add annotation( then click it by mouse)
C-c-a h add highlight of selected area
B       back history
N       forward history 
=       pdf-view-enlarge
-       pdf-view-shrink
0       pdf-view-scale-reset
W       pdf-view-fit-width-to-window
h       pdf-view-fit-height-to-window
M-x set-variable  pdf-view-resize-factor  1.1 not 1.25  , to control pdf resize 
 
c-x c-w save as ( rename file and location ), move file


;; remove it, causing problem in lsp unix dos files in jdtls java server 
;; (prefer-coding-system 'utf-8 ) ;;  in .emacs remove it, dont use utf-8 ,not good for json transfer between client and java server
c-h C  enter  ==> describe the current file coding system

M-x ffap  ==> M-x find-file-at-point   /home/songs then c-j to visit folder
C-x enter f ==>>(buffer) set coding system for this file (charset Unicode utf-8 then dos,unix,mac
C-x enter F ==>>(File)   set coding system for this file (charset Unicode utf-8 then dos,unix,mac
C-\  ==> arabic  my-toggle-bidi-input-method (language and direction)





M-x global-subword-mode       =>  CamelCaseWord  hi_then_hi  (look at the mini bar you see the icon , )
disable  global-subword-mode  =>  CamelCaseWord  hi_then_hi

M-x superword-mode     ==>   hi_then_hi  CamelCaseWord   (look at the mini bar you see the icon 2)
disable superword-mode ==>   hi_then_hi  CamelCaseWord

[ not installed ]
M-x paredit-mode
https://www.youtube.com/watch?v=D6h5dFyyUX0
c-k         kill
M-Shift-s   Split the list or string
M-s         removing its delimiters. like "" or () example  (foo (bar| baz) quux)   ---> (foo bar| baz quux)
M-r         raise word or ()
M-up        splice word or ()

[old ]c-x ps  ==>>  save bookmarks
[new] M-x bookmark-save

M-x ps  ==>>  processes 
M-x cpu


M-x riched-mode
M-j b		set-justification-full
M-j c		set-justification-center
M-j l		set-justification-left
M-j r		set-justification-right
M-j u		set-justification-none


fiplr :- amazing file searcher for many dir, if you open the c-c g it will be indexed, for folde and subfolders, 
      :- many folders, and many subfolders indexed 

[number 4=open as other window ]
[number 5=open as other frame(new emacs ) ]
space           next page
S-space         previos page 
C-x 4 C-f	find-file-other-window
C-x 5 C-f	find-file-other-frame
C-x 5 C-o	find-buffer-other-frame
c-x 5 0         delete-frame
C-x 4 d		dired-other-window
C-x 5 d		dired-other-frame
c-x 5 0         close frame 

M-/                  autocomplete
M-C-/                autocomplete
M-x auto-complete    autocomplete

[imprtant about copy and paste instead of kill ring c-y M-y ]
always use the registe c-x r s (1 2 3 4 or a b c d ) for copy string string so you can paste it again by c-x r i (1 2 3 a b c )
and you can see the string and the number in the ido mode
and it is order also

c-x r si => c-x r ii 
c-x r ri => c-x r ii 

[macro]
c(q i a) a=1  x  (the default a=1, so i want to change it must by by increment or decrement like this a=1-2==> -1, or a=1-1==>0)
c-x c-k cia  

# how macro decremen 10 9 8 7 6 5 4 3 2 1 0
c-x c-k c-c = 10
c-x (
c-x c-k tab
c-x c-k c-a = -2 (why -2 because the default a=1, so if i use a=1-1 => 0 ,and if i need  a=1-2 ==> -1)
c-x )


c-x q  => macro query
c-x c-k q  => macro query
c-x c-k e  => edit macro 
c-x c-k f  => formt %d =decimal , %c -> char  ( for every macro )
c-x c-k tab or c-x c-k c-i (insert )
c-x c-k n => name macro

not need to cloas macro, just run it  

very important [note that the counter in macro will shared between all macros]
c-x c-k x a ==> save macro to register a, so you can run more than one macro, no need to save it and invoke it 
c-x c-k x a ==> c-x rj a ==> c-x z zzz 

alt-ctrl-s => first.*second ==> easy search regex for two words togathers
alt-ctrl-s => first\|second first or or or second  


M C-s   \<one\>   ==> search only the word only , same as M-s w
M-s w             ==> search only the word only without CamelCase 
M-s _             ==> search only the word only without _, same as M-s . (but this for current word)

M-s _ search one word, no  underscore
M-s w search one word, yes underscore 

wow debug macro 
c-x c-k space => edit macro step by step
macro to elsip
by elmacro-mode then write your macro, then elmacro-show-last-macro
==============================

M-x list-packages
smartparens
note:-  that M-down for moving line will not work so this mode will work manullay not automated
M-x smartparens
see the examples below 

(aa1 (bb0 (ccc1  (ddddd2 hhui ) cccc3) bbbb0) aaaa2)
(aa1 (bb0 (ccc1  (ddddd2 hhui ) cccc3) bbbb0) aaaa2)
(aa1 (bb0 (ccc1  (ddddd2 hhui ) cccc3) bbbb0) aaaa2)
(aa1 (bb0 (ccc1  (ddddd2 hhui)  cccc3) bbbb0) aaaa2)

C     => for left  )
C-M   => for right (

C-(		sp-backward-slurp-sexp
<C-M-left>	sp-backward-slurp-sexp
C-{		sp-backward-barf-sexp
<C-M-right>	sp-backward-barf-sexp

C-)		sp-forward-slurp-sexp
<C-right>	sp-forward-slurp-sexp
C-}		sp-forward-barf-sexp
<C-left>	sp-forward-barf-sexp

<M-down>	sp-splice-sexp-killing-forward
<M-up>		sp-splice-sexp-killing-backward

(aa1 (bb0 (CCC1  (ddddd2 hhui ) cccc3) bbbb0) aaaa2)
(aa1 (bb0 (ccc1  (ddddd2 hhui ) cccc3) bbbb0) aaaa2)


C-M-f		sp-forward-sexp
C-M-b		sp-backward-sexp


C-M-d		sp-down-sexp
C-M-n		sp-up-sexp

C-M-u		sp-backward-up-sexp
C-M-p		sp-backward-down-sexp

M-S		sp-split-sexp
M-r		sp-splice-sexp-killing-around
M-s		sp-splice-sexp



example :- x the position of the cursor 
M-r 
(aa1 (bb0        (ddddd2 hhui )        bbbb0) aaaa2)
(aa1 (bb0 (cccX  (ddddd2 hhui ) cccc3) bbbb0) aaaa2)


example :- x the position of the cursor 
M-s 
(aa1 (bb0  cccX  (ddddd2 hhui ) cccc3  bbbb0) aaaa2)
(aa1 (bb0 (cccX  (ddddd2 hhui ) cccc3) bbbb0) aaaa2)


example :- x the position of the cursor 
M-S
(aa1 (bb0 ()(Xccc  (ddddd2 hhui ) cccc3) bbbb0) aaaa2)
(aa1 (bb0 (  Xccc  (ddddd2 hhui ) cccc3) bbbb0) aaaa2)
M-s and M-S same as undo/redo , for put (select area the press (, that is it    )


example :- x the position of the cursor 
M-C-k
(aa1 (bb0                              bbbb0) aaaa2)
(aa1 (bb0 Xccc   (ddddd2 hhui ) cccc3) bbbb0) aaaa2)   X the cursor at the () exactly 
(aa1 (bb0 (ccc   (ddddd2 hhui ) cccc3) bbbb0) aaaa2)



example :- x the position of the cursor 
M-C-t
(aa1 (bb0 (ccc  cccc3 (ddddd2 hhui ))       bbbb0) aaaa2)
(aa1 (bb0 (ccc        (ddddd2 hhui )X cccc3) bbbb0) aaaa2)

======= end of smartparens ======================

M-x last_command then M-p/n  previos command to edit 
C-c prefix is for users to define. 
alwyas use [a ] in dired instead of [enter] 

C-M-V     scroll-other-wtindow down
C-M-S-V   scroll-other-window up 
then c-x z zzzzzzzz

c-x c duplicate lines
c-j then c-j then c-x c-x  for select region 
(global-set-key (kbd "C-c c") 'avy-copy-line)  
(global-set-key (kbd "C-c k") 'avy-move-line)

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
[SX]  stackoverflow dont use M-x sos
;; https://github.com/vermiculus/sx.el/
;; sx or  StackOverflow
;; M-x sx-search
;;
;; https://github.com/vermiculus/sx.el/
;; M-x package-install RET sx RET

;; M-x cs gold ==> mode ==> sx-display

;; M-x cs SX order sort 
 '(sx-default-site "stackoverflow")
 '(sx-question-mode-answer-sort-function (quote sx-answer-higher-score-p))
 '(sx-search-default-order (quote votes))
;; https://github.com/vermiculus/sx.el/
;; S  ==> search 

;; O  ==> order  sx-question-list-order-by
;; v  ==> vist sx  site
;; ss ==> switch to site
;; w  ==> copy the thing 
;; q  ==> quit-window
;; enter ==> visit link
;; C-m => enter or return
;; C-i => tab 
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;; key chord ;;;;;;;;;;;;;;;;;;;;;;;;;;;;

[[ dont use it it is very bad]]
;; press two key at the same time 
;; (setq key-chord-two-keys-delay 0.1) 

(require 'key-chord) 
(key-chord-mode 1)
;; (require 'key-chord)
(key-chord-define-global "df" 'smex-major-mode-commands)
(key-chord-define-global "fi" 'find-file)
(key-chord-define-global "di" 'dired)
(key-chord-define-global "fj" 'ido-switch-buffer)

;;      (key-chord-define c++-mode-map ";;"  "\C-e;")
;; see the emacs config file
;; (load "/home/emacs_config") 
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

;;;;;;;;;;;;;;;;;; auto-complete ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; in dired you can add many words to any mode to complete it under dict,
;; you can also create new mode under dict directory

;;; optional  (add-to-list 'ac-dictionary-directories "~/.emacs.d/dict")
;;; optional  (require 'auto-complete)

(global-auto-complete-mode t)
(require 'auto-complete-config)

;; dont use this command  (ac-config-default)
;; (ac-config-default)
;;

;;  M-x apropos then ^ac-source-
;; or by built in from source
;; look at the ac-source-
;; http://auto-complete.org/doc/manual.html
(setq-default ac-sources '(
ac-source-files-in-current-dir
ac-source-filename
ac-source-functions
ac-source-yasnippet
ac-source-variables
ac-source-symbols
ac-source-features
ac-source-abbrev
ac-source-words-in-same-mode-buffers
ac-source-words-in-buffer
ac-source-words-in-all-buffer
ac-source-dictionary
ac-source-css-property
ac-source-emacs-lisp-features
ac-source-imenu
ac-source-nxml-attr
ac-source-nxml-attr-value
ac-source-nxml-css
ac-source-nxml-css-property
ac-source-nxml-tag
ac-source-nxml-tag-value-by-myself
ac-source-nxml-tag-value-by-nxml

))

(define-key ac-complete-mode-map "\C-n" 'ac-next)      ;;  the way to modify any key for the mode only but must call  (require ) before map key
(define-key ac-complete-mode-map "\C-p" 'ac-previous)  ;;  the way to modify any key for the mode only but must call  (require ) before map key

C-c o == copy line/area if no selection 
Alt-w == copy line/area if no selection 

C-c d == M-x smex ;; recent command used 
C-c D == M-x smex-major-mode-commands ;; relevant commands  used 

c-i ==> tab
c-m => enter or return 

c-j/o ==> new line 
C-[  ==> ESC
c-x 4 b ==> open in the half window, switch to other buffer 

c-e
c-a
C-S-e ==> select to the end 
C-S-a ==> select to the begining 
C-S-backspace ==> delete line 

C-M-j winner-undo
C-M-k winner-redo

M-x describe-variable  then

M-x fg  then  8fd0   
M-x fd  then  8fg1 
M-x fgd then  

very important 
always use bookmarks and abbreviation, can M-x abbrev-mode  enable/disable 
C-x a g  ==> M-add-global-abbrev  [very bad]

;;;;;;;;;;;;;;;; [[[ dired ]]] ;;;;;;;;;;;;;;;;


;; packge dired-subtree ==> https://youtu.be/vm-FvNdYFcc?list=PL8Bwba5vnQK14z96Gil86pLMDO2GnOhQ6
;; how to dired-subtree or subdirectory or tree like ztree  by M-x dired-subtree-toggle
      :) :) :) :)
  i  dired-subtree-insert
  r  dired-subtree-remove
  h  dired-subtree-up
  ;  dired-subtree-down

:):) as trees subdirectory, or use i then i => c-x c-j to reuturn up
o    open  file in other window, and jump the cursor to new window
C-o  open  file in other window, and keep the cursor in dired.


I    in dired to open java without mode (dired-info)
j    in dired to jump to file

;; find all files (not folders) exclude .java extension and classes then replace web1 by web2
find . ! \( -iname '*.java' -or -iname '*.class'  \)  -type f
then t sellect all
[not work]==> then Q in dired M-x dired-do-find-regexp-and-replace
or use M-x diredQ or  M-x 'dired-do-query-replace-regexp   web1 ==> web2
(defalias 'diredQ   'dired-do-query-replace-regexp)

[not work]
A    use t first the A [hang for java files] search inside marked files, in result (n/p)=> visit files,  (r)==> xref-query-replace-in-results
A    search in marked files, M-x grep-mode to view as n/p visit files,
Q    use M-x diredQ ,query replace regexp on multi files by  M-x fd then t then Q
M-,  forward search 


C        copy file to 
R        cut files or move files to another dir by, or rename
w  copy  name for current file
c-u 0 w   copy full path name for dired
du -sh *   view folders size
& du -sh   view current folder size
M-x      dired-sort-dialog or c-d or
M-x  ds
Ctrl+x Ctrl+j parent dir in dired
Ctrl+x Ctrl+j show current file in diredb or c-x d
(    dired-hide-details-mode 
M-x ffap find file at the point /home/songs
M-x im   dispaly images  or tumme
c-x c-q  to edit file name . wow wow wow and c-c c-c to save ,but  c-x q query macro
s  to sort them , M-x ds ==> dired-sort date/name
enter  animate gif images or press enter , a +		image-increase-speed
t        mark all
c-t c-t  open thumbnails images in dired 
c-t i    open image in small size
c-t x    open image in image magic software but press left button to show the menu
c-t a    add image to group to view all later 

<  image rotate
>  image rotage  then C-M-4 to fix a word

d      delete then x
m       mark
U       unmark
t       mark all
*/      mark folders only
*/ t    mark files only
+       create folder
c-x c-f make file
g       refresh 
&       run shell on file 
C       copy file
s       sort
M-x ds  sort by dialog
R       rename file
f       open marked file
F       open many maked files

to search inside many files 
*/    mark dir only
*/ t  mark files only
* C-n  next marked file

% g  mark files contains regex 
% m  mark files/folder names by regex



impotant  1 2
1-  C-return ==> open file in explorer 
2-  M-return ==> open file by the assoc program or by mouse click

* m   Mark the current region
**    mark exe files
t     mark all
U     unmark all
* C-n  next marked file
M-}    next marked file
w    copy the name
/   ==> filter
/ n ==> filter by name
/ ! ==> nagate the filte means wow wow
/ r ==> filter by regexp
/ d ==> filter by dir
/ f ==> filter by file
/ . ==> filter by extenstion
//  ==> pop all filter means remove all filters
/p  ==> pop one filter 
/?  ==> help filter
/r  ==> filter by regex 8fr0 or 8fr1
/r     8fr0 = e[a-zA-Z0-9].*.pdf  
/r     8fr1 = .*\.pdf$\|.*\.txt$  

:e encrypt
:d decrypt

Z uncompress file.zip  
Z compress/uncompress folder or file to  tar.gz

z compress .zip 
c compress zip, select folder


z dired compress, can compress multi dir 
Z dired uncompress, extract what inside folder 
_ file type like file *


M-x ds only hahahah hii
C-u s => -alh   // sort by name (the deafult )  
C-u s => -alht  // sort by modification  time mtime
when press s then switch between (name and modification time)
s         sort name/date
C-u s => -alhS  // sort files by size  
C-u s => -alhc  // the ctime (ls -lc) is not the file creation time, it's the inode change time. The inode change time is updated whenever anything about the file changes ,Most unices do not have a concept of file creation time
-u s => -alhX  // sort by extension
C-u s => -alhu  // sort by access time (not work)
or use the
M-x ds
M-x tumme M-x  im  ==>view images thumbnails in directory 
w = copy current name
w = copy current dir name
C-x R     ==> view current open directory  it is usefull than using c-x b for searching files and dir
C-x D     ==> merge many dir buffer , buffers not merege it in the hard disk but merge buffers only like vlc and mplayer buffers


C-u s => -alh   // sort by name (the deafult )  
C-u s => -alht  // sort by modification  time mtime
               when press s then switch between (name and modification time)
C-u s => -alhS  // sort files by size 
C-u s => -alhc  // sort by creation time ctime
C-u s => -alhX  // sort by extension
C-u s => -alhu  // sort by access time (not work)




;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;; end of dired ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

[[[[ important ]]]]
[[[[ important ]]]]
[[[[ important ]]]]

note :- find not matching word "sam"
the solution is :- mark region  which containg the sam, then delete it ,then mark the othe region
M-x qr  ^.*sam.*$  => space or put special char lile #$~| instead of ali
that is it 

M-x regexp-builder
M-x occur 
M-x qr
[not work ]^[^s]+[^a]+[^m]+$, 

[[[[ important ]]]]
[[[[ important ]]]]
[[[[ important ]]]]
[[[[ important ]]]]



;; walk slowlly 
(defun walk ()
    (interactive)
    (while (= 1 1)
    (progn
    (next-line)
    (sit-for 1))))

;; (sit-for 2)   not not not working in macro, but it is working in elisp
;; (sleep-for 2) working in macro, but not not not working in elisp


;; sleep for seconds use it with macro
;; (sit-for) use it with elisp
(defun my-sleep (second)
  (interactive
   (list
    (read-number "second: ")
    ))
  (sleep-for second)
)


(defun my-cu1 (num macro)
  (interactive
   (list
    (read-number "num: ")
    (read-command "macro: ")))
  (setq current-prefix-arg num) 
  (call-interactively  macro)
)



;;
  (defun my-mycu (num macro)
  (interactive)
  (setq current-prefix-arg num) ;; C-u
  (call-interactively macro))


convert any text to html tag by htmlize package
text to html by Mx htmlize-

== the best for web is web-mode.org it is on melpa (css, jsp ,php ,js) ==
M-x  browse-url-firefox    ==>       firefox
M-x  w3m-external-view-current-url   w3m==>firefox



================================================================
================= org mode ========================
================================================================
best org mode tutorial 
/media/D/linux/emacs_movies/org-mode/

c-c =  insert formlua
c-c '  edit formula
c-c c-c to the formula to effect
c-c {   amazing debug 
c-c }  show columns numbers
M-s up/left    delete rows colms
M-s down/righ  add rows colms 
$1 =column1 
@1 =row 1

M-arrow  move colm/rows 

'(* $1 @1);N

|    | 0 |  1 |  2 |  3 |  4 |  5 |  6 |  7 |  8 |  9 |  10 |
|----+---+----+----+----+----+----+----+----+----+----+-----|
|  0 | 0 |  0 |  0 |  0 |  0 |  0 |  0 |  0 |  0 |  0 |   0 |
|  1 | 0 |  1 |  2 |  3 |  4 |  5 |  6 |  7 |  8 |  9 |  10 |
|  2 | 0 |  2 |  4 |  6 |  8 | 10 | 12 | 14 | 16 | 18 |  20 |
|  3 | 0 |  3 |  6 |  9 | 12 | 15 | 18 | 21 | 24 | 27 |  30 |
|  4 | 0 |  4 |  8 | 12 | 16 | 20 | 24 | 28 | 32 | 36 |  40 |
|  5 | 0 |  5 | 10 | 15 | 20 | 25 | 30 | 35 | 40 | 45 |  50 |
|  6 | 0 |  6 | 12 | 18 | 24 | 30 | 36 | 42 | 48 | 54 |  60 |
|  7 | 0 |  7 | 14 | 21 | 28 | 35 | 42 | 49 | 56 | 63 |  70 |
|  8 | 0 |  8 | 16 | 24 | 32 | 40 | 48 | 56 | 64 | 72 |  80 |
|  9 | 0 |  9 | 18 | 27 | 36 | 45 | 54 | 63 | 72 | 81 |  90 |
| 10 | 0 | 10 | 20 | 30 | 40 | 50 | 60 | 70 | 80 | 90 | 100 |
#+TBLFM: $2='(* $1 @1 );N::$3='(* $1 @1 );N::$4='(* $1 @1 );N::$5='(* $1 @1 );N::$6='(* $1 @1 );N::$7='(* $1 @1 );N::$8='(* $1 @1 );N::$9='(* $1 @1 );N::$10='(* $1 @1 );N::$11='(* $1 @1 );N::$12='(* $1 @1 );N


* first  alt to add new star, s-alt to add new star to all ,
befor star put tab and s-tab to hide and show 
c-c c-e ho convert to html
c-c c-e lo convert to pdf
this is the first 
wow that is amazing 
** DONE second [2/3] [put only /]  , s-right to change todo to done
   1) [ ] this is   , - then tab then [ ] then c-c c-c  , s-right ,s-left t cohange list numbering 
   2) [X]   the second one<2016-06-30 Thu>  c-c . to add date
   3) [X] that is it 
** second2
   second two 
*** third images
add image

 [[/home/fish/image/myPNG/fish_number_02.png]]

(setq org-startup-with-inline-images t)                                                                   
 then 
M-x org-redisplay-inline-images
M-x org-remove-inline-images 

** DONE add movie  mp4 files [2/2]
   1. [X] add movie [[/home/emacs_demo.mp4]]
   2. [X] add movie2

 ** org mode 
<tab> expand 
shift-<tab> global expand
*bold*
/italic/
_underLine_
list  -
image [[./images/image.jpg]]

table 
c-c | convert region to table

|-  tab  to create table

|   |   | 
|-tab

C-c | => create table from string 

:= set the formula 
:= @2$3  row 2 and column 3


                                                                                                                        
\documentclass{article}                                                                                   
\begin{document}                                                                                          
\begin{verbatim}                                                                                          

Do not format this text in org mode .                                                                                  

\end{verbatim}                                                                                            
\end{document}                                                                                            

===== or you can use only this===== 

\begin{verbatim}                                                                                          
Do not format this text in org mode .                                                                                  
\end{verbatim}                       
                                                                     
=====================================

org to odt (office) or from odt to org

M-x org-odt-convert

=====================================

org mode timer
C-c C-x ;	org-timer-set-timer   set(h:mm:ss)
C-c C-x 0	org-timer-start       start(0:00:00)
C-c C-x ,	org-timer-pause-or-continue
C-c C-x _	org-timer-stop  
C-c C-x .	org-timer,print current timer, can use it only without anything other,


================================================================
============================= end of org-mode ==================
================================================================


;; how visit directory of the softlink symbolik
(setq find-file-visit-truename t)   ;; when press c-x c-k will be in directory of file
(setq find-file-visit-truename nil) ;; when press c-x c-k will be in directory of link symbolic(default)

M-x set-variable find-file-visit-truename t/nil








;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;; zobda ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;; end of emacs keybinding  ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
(line-number-at-pos)  1623[yes,seperated jdee] 1749 1600  1514



;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;; run more then one emacs and change icons ;;;;;;;;;;;;;;;;;;;;;

;;Q:-  how can run more than one emacs like emacs1 emacs2 emacs3 emacs4, and change icons ? 
;; easy way by command line  is
;; emacs -name first ;; will appear in title bar word (first) always 
;; emacs -T    second ;; will appear in title bar word (first) always 
;; emacs -nbi  third ;; will change the icon in title bar  (first) always 
;; 
;;
;; add invocation-name variable to print (name of the link in /usr/bin/emacs1  emacs2  emcs3 or emacs4  ln -s ),
;; add invocation-name to frame-title-format as below
ln -s /opt/emacs_webkit/emacs-26-1-second/bin/emacs-26.1              /usr/bin/emacs2
ln -s /opt/emacs_webkit/emacs-26-1-third/bin/emacs-26.1               /usr/bin/emacs3
ln -s /opt/emacs_webkit/emacs-26-2-fourth/emacs-26-2/bin/emacs-26.2   /usr/bin/emacs4
ln -s /opt/emacs_webkit/emacs-26-3-fifth/emacs-26-3/bin/emacs-26.3    /usr/bin/emacs5

sudo ln -s /usr/bin/emacs-gtk   /usr/bin/emacs22
sudo ln -s /usr/bin/emacs-gtk   /usr/bin/emacs33

then Ctrl-F2 ==>> emacs22 -nbi (without icons)
then Ctrl-F2 ==>> emacs33 -nbi (without icons)

'(mode-line-format
   (quote
    ("%e" invocation-name  mode-line-front-space mode-line-mule-info mode-line-client mode-line-modified mode-line-remote mode-line-frame-identification mode-line-buffer-identification "   " mode-line-position
     (vc-mode vc-mode)
     "  " mode-line-modes mode-line-misc-info mode-line-end-spaces)))
;; then then then
;; then then then
;; change the name of the title bar and alt-tab by by change adding invocation-name to variable frame-title-format like this 
(setq frame-title-format
  '(:eval
  (concat invocation-name " ♥ " 
    (if buffer-file-name
        (replace-regexp-in-string
         "\\\\" "/"
         (replace-regexp-in-string
          (regexp-quote (getenv "HOME")) "~"
          (convert-standard-filename buffer-file-name)))
      (buffer-name))
    )
  ))
;; then then then
;; then then then , Numix theme
change the font size from
customize look and feel ==> window border tab ==> title bar ==> font for active window title 16 
                                              ==> title bar ==> font for inctive window title 16 
customize look and feel ==> misc tab ==> font for on-screen display 15 bold
                                     ==> font for  inactive  on-screen display 11  

  lrwxrwxrwx  1 root root       23 Mar  4  2019 emacs -> /etc/alternatives/emacs
  lrwxrwxrwx  1 root root       50 Oct  4 06:06 emacs2 -> /opt/emacs_webkit/emacs-26-1-second/bin/emacs-26.1
  lrwxrwxrwx  1 root root       49 Oct  4 06:06 emacs3 -> /opt/emacs_webkit/emacs-26-1-third/bin/emacs-26.1
  lrwxrwxrwx  1 root root       61 Oct  4 06:06 emacs4 -> /opt/emacs_webkit/emacs-26-2-fourth/emacs-26-2/bin/emacs-26.2
  lrwxrwxrwx  1 root root       60 Oct  4 06:06 emacs5 -> /opt/emacs_webkit/emacs-26-3-fifth/emacs-26-3/bin/emacs-26.3


so, emacs ==>  emacs-26.1
   emacs2 ==>  emacs-26.1
   emacs3 ==>  emacs-26.1
   emacs4 ==>  emacs-26.2
   emacs5 ==>  emacs-26.3


[not work]
;; change icon by command line
/root/.Xresources file put inside it, M-x man emacs 
emacs.background:green
emacs.bitmapIcon:on

;;then load it by command
xrdb ~/.Xresources

;; cat in mode-line
;; how nyan cat mode-line work
(setq mode-line-format
      (list
       '(:eval (list (nyan-create)))
       ))



;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;run more then one emacs and change icons ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;


;; how to insert special char in emacs ?
   c-x 8 enter tab ☻ ♥ ☺

;; ☻ ♥ ☺ ♛ ⨄ ↯ ⚓ ⌷ 🁢 🁨 ䷚





;;;;;;;;;;;;;;;;;;;;;;;;;;start of  old jdee ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;;;;;;;;;;;;;;;;;;;;;;;;;;start of  old jdee ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;;;;;;;;;;;;;;;;;;;;;;;;;;start of  old jdee ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;


C-c C-d c   ==> "delete build folder  then call jdee-compile", don't use C-c C-v C-c 
[dont use it]  C-c C-v C-c     jdee-compile
C-c C-v C-r     jdee-run
C-c C-v C-b     jdee-build by ant
C-c C-v C-k     jdee-bsh-run


C-c C-v C-l     jdee-gen-println, or just type pr tab
C-c C-v l       open prj.el,  jdee-open-project-file 


[[final jdee Debug]]

;; must be compiled first c-c c-v c-c or c-c c-d c
;; M-x  my-jdb-for-current-method then step)
[steps of debug]
# if you have problems in debug like stoped, the solution is removing this file .jdbrc then use the command " read /root/myjdb"
c-c c-a c-b ==> put one or more breakpoints / or remove breakpoint 
clear      ==> list breakpoints
                M-x jdee-debug-clear-breakpoints
                M-x jdee-debug-list-breakpoints
8jdb8       ==> filter packages or exclude packages  exclude com.sun.*,com.oracle.*,java.*,javax.*,jdk.*,micro.*,netscape.*,org.*,sun.*,
cont        ==> to Continue running to breakpoint c-c c-a c-c
c-c c-a c-n ==> step in    ==>(in jdb step)
c-c c-a c-o ==> step out   ==>(in jdb step up)
c-c c-a c-s ==> step over  ==>(in jdb next)
watch all package.class(M-x rc) ==> to watch fields (instance variables), or use (monitor dump this)
c-c c-a c-l ==> view locals 
c-c c-a c-e      ==> view locals (eval  help.help.help.help)
c-c c-a c-x     ==> view object of reference (dump help.help) 
c-c c-a c-d     ==> (where) list of stack methods, where all (list all stacks)
use /home/jdee_workspace/app2/src/  then list       ;;;  use (use jdb -sourcepath) ;;  use package:package:package ==> seperated by colon : 
list ==> to view the sourcecode, put the use command first 
monitor locals     ==>(view all local variable)   monitor [command] repeat command every time, local variables 
monitor dump this  ==>(view all instance variable) monitor [command] repeat command every time , dump <expr> , dump current executing object, will see all fields instance variables
unmonitor 1        ==> un monitor
20 step            ==> step 20 times 
eval this          ==> eval <expr>,
eval (counter == package.Help.NUMBER) => true or false
trace methods      ==> method enterd and exit, return value of method , i have problem when use this command when c-c c-a c-n i will go inside the java code, and jdb disapppers
untrace methods 

set <lvalue> = <expr>     ==> assign new value to field/variable/array element
read <filename>           ==> read and execute a command file
                          or or Startup commands can be placed in either "jdb.ini" or ".jdbrc" in user.home or user.dir
   [[thread]]
   [[thread]]
threads                   ==> list threads
threadlocks all
thread <thread id>        ==>  set default thread, thread 0x19c
where all                 ==>  dump a thread's stack
threadlocks               ==>  print lock info for a thread for the current 
lock this 
threadgroups              -- list threadgroups
suspend [thread id(s)]    ==>  suspend threads (default: all)
resume [thread id(s)]     ==> resume threads (default: all)
where [<thread id>  dump a thread's stack, with pc info
kill <thread id>          ==> kill a thread with the given exception object
interrupt <thread id>     ==> interrupt a thread
lock <expr>               ==> print lock info for an object


===================
# comment at .jdbrc ;; it is autorun when using jdb command 
# in .jdbrc put  commands,
# if you have problems in debug like stoped, the solution is comment  this file .jdbrc by hash # <command> or or or  use the command " read /root/myjdb"
exclude com.sun.*,com.oracle.*,java.*,javax.*,jdk.*,micro.*,netscape.*,org.*,sun.*,
use /home/jdee_workspace/app2/src/
monitor where
monitor locals
monitor dump this
monitor eval this
===================

or this is better 
===================
# in .jdbrc put  commands 
# if you have problems in debug like stoped, the solution is comment  this file .jdbrc by hash # <command> or or or  use the command " read /root/myjdb"
exclude com.sun.*,com.oracle.*,java.*,javax.*,jdk.*,micro.*,netscape.*,org.*,sun.*,
use /home/jdee_workspace/app2/src/
monitor where
monitor locals
monitor dump this
monitor eval this
===================

# how to jump directly to breakpoint in debug 
to jump directly to breakpoint (c-c c-a c-b put breakpoint)
1- comment .jdbrc by hash # like this
    ===================
    # in .jdbrc put  commands 
    # exclude com.sun.*,com.oracle.*,java.*,javax.*,jdk.*,micro.*,netscape.*,org.*,sun.*,
    # monitor where
    # monitor locals
    # monitor dump this
    # monitor eval this
    ===================
2- jump c-c c-a c-c (cont) ==> jump to breakpoint
3- load the command file by (read /root/myjdb)
    ===================
    # in /root/myjdb put  same  commands without # comment
     exclude com.sun.*,com.oracle.*,java.*,javax.*,jdk.*,micro.*,netscape.*,org.*,sun.*,
     monitor where
     monitor locals
     monitor dump this
     monitor eval this
    ===================



;; [wow] prj.el jdee can open (.jar or .zip  ) as  jdee-sourcepath, so dont change name from file.jar to file.zip, use sourcepath 
;; [wow debug] prj.el to debug put jdee-sourcepath  without .zip so it will be debug, but but but when search c-c c-v c-f will search inside jdee-sourcepath also,
in debug write : help
C-c C-a C- nosexl d(stack down)
C-c c-a c-s => step over

[when hang write next next next next ]
if hang when no class write next next next next three times 

M-x jdee-bug-watch-field-modification ==> watch all scjpThread.Thread1.y  ==> watch wow 
M-x jdee-bug ==> to see debug

class id => package.name
watch all scjpThread.Thread1.y  ==> watch wow , just use (dump this)
where all ==> print stack , or c-c c-a c-d(Move down the stack) print stack for current thread
trace methods 0x1 ==> trace methods in main

;; stop asking for sourcepath files in jdb  -sourcepath /home/jdee_workspace/app2/src/:/home/jdee_workspace/sourcePathx/sources/src_jdk_10.zip 
 '(jdee-db-query-missing-source-files nil);; it will apear in enum ==> M-x set-variable jdee-db-query-missing-source-files to nil 

;; no need 
;; pass sourcepath to jdb by 
M-x jdee-db-set-args  -sourcepath /home/jdee_workspace/app2/src/ ;; no need for this arg in jdee-debug
or use command use(put -sourcepath), the command is named use use use use use use
use /home/jdee_workspace/app2/src/  then  use package:package seperated by colon
list ==> to view the sourcecode, put the use command first 


C-c C-a C-b  Toggle Breakpoint
C-c C-v C-d  jdee-debug
C-c C-a C-n  step by step,divide in 
C-c C-a C-o  step over, continue to this method
C-c C-a C-s  dont divide in,step next in the current stack frame
C-c C-a C-e/p/x  evaluate expression, print values for array and list and variable 
C-c C-a C-l  print localize
C-c C-a C-d     "Move down the stack."Display stack in the current thread.
M-x jdee-thread

M-x jdee-debug then help , exclude means filter the packages 
;;  exclude  com.sun.*,com.oracle.*,java.*,javax.*,jdk.*,micro.*,netscape.*,org.*,sun.*,
;; just type ===>  step   next 

;; debug breakpoints 
stop in mySort.DVDTest.main
stop at mySort.DVDTest:22
stop at MyClass:80 when mystr.equals("abc")

use /home/jdee_workspace/app2/src/  then 
list ==> to view the sourcecode ,put the use command first 

;; M-x jdee-debug
;; error in process filter: Wrong type argument: stringp, #<buffer Reflection.java (src_jdk_10.zip)>
;; solution : 8jdb8
;; jdee jdb debug work
;; java debug db jdb 
;; remove word -launch by these steps 
;; root@zink:/home/jdee_workspace/app2/src/mySort# /home/jdee_workspace/sourcePathx/openJDK/jdk-10/bin/jdb  -classpath /home/jdee_workspace/app2/build/:/home/jdee_workspace/app2/src/resources/:/home/jdee_workspace/sourcePathx/jars/public_JAR/mariadb-java-client-2.3.0.jar:/home/jdee_workspace/sourcePathx/jars/public_JAR/spring/spring-framework-5.1.0.RELEASE/libs/spring-aop-5.1.0.RELEASE.jar:/home/jdee_workspace/sourcePathx/jars/public_JAR/spring/spring-framework-5.1.0.RELEASE/libs/spring-beans-5.1.0.RELEASE.jar:/home/jdee_workspace/sourcePathx/jars/public_JAR/spring/spring-framework-5.1.0.RELEASE/libs/spring-context-5.1.0.RELEASE.jar:/home/jdee_workspace/sourcePathx/jars/public_JAR/spring/spring-framework-5.1.0.RELEASE/libs/spring-core-5.1.0.RELEASE.jar:/home/jdee_workspace/sourcePathx/jars/public_JAR/spring/spring-framework-5.1.0.RELEASE/libs/spring-expression-5.1.0.RELEASE.jar:/home/jdee_workspace/sourcePathx/jars/public_JAR/spring/spring-framework-5.1.0.RELEASE/libs/spring-jcl-5.1.0.RELEASE.jar:/home/jdee_workspace/sourcePathx/jars/public_JAR/spring/spring-framework-5.1.0.RELEASE/libs/spring-jdbc-5.1.0.RELEASE.jar:/home/jdee_workspace/sourcePathx/jars/public_JAR/spring/spring-framework-5.1.0.RELEASE/libs/spring-tx-5.1.0.RELEASE.jar -Xms200m -Xmx1g mySort.DVDTest
;; 1- replace (list "-launch") by   (list "") in file  /root/.emacs.d/elpa/jdee-20190217.1029/jdee-jdb.el
;; 2- M-x jdee-debug
;; 3- stop in mySort.DVDTest.main
;; 4- run
;; 
;; jdb -sourcepath  package1:package2 so no query will ask for source code when debug 
;; /home/jdee_workspace/sourcePathx/openJDK/jdk-10/bin/jdb  -sourcepath /home/jdee_workspace/app2/src/:/home/jdee_workspace/sourcePathx/sources/src_jdk_10.zip   -launch -classpath /home/jdee_workspace/app2/build/:/home/jdee_workspace/app2/src/resources/:/home/jdee_workspace/sourcePathx/jars/public_JAR/mariadb-java-client-2.3.0.jar:/home/jdee_workspace/sourcePathx/jars/public_JAR/spring/spring-framework-5.1.0.RELEASE/libs/spring-aop-5.1.0.RELEASE.jar:/home/jdee_workspace/sourcePathx/jars/public_JAR/spring/spring-framework-5.1.0.RELEASE/libs/spring-beans-5.1.0.RELEASE.jar:/home/jdee_workspace/sourcePathx/jars/public_JAR/spring/spring-framework-5.1.0.RELEASE/libs/spring-context-5.1.0.RELEASE.jar:/home/jdee_workspace/sourcePathx/jars/public_JAR/spring/spring-framework-5.1.0.RELEASE/libs/spring-core-5.1.0.RELEASE.jar:/home/jdee_workspace/sourcePathx/jars/public_JAR/spring/spring-framework-5.1.0.RELEASE/libs/spring-expression-5.1.0.RELEASE.jar:/home/jdee_workspace/sourcePathx/jars/public_JAR/spring/spring-framework-5.1.0.RELEASE/libs/spring-jcl-5.1.0.RELEASE.jar:/home/jdee_workspace/sourcePathx/jars/public_JAR/spring/spring-framework-5.1.0.RELEASE/libs/spring-jdbc-5.1.0.RELEASE.jar:/home/jdee_workspace/sourcePathx/jars/public_JAR/spring/spring-framework-5.1.0.RELEASE/libs/spring-tx-5.1.0.RELEASE.jar -Xms200m -Xmx1g mySort.DVDTest
;; 
;; jdb tutorial 
;; jdb ==> next , list [to list code must -sourcepath exisit] , stop in package.class.main  , clear [to list breakpoint]
;; http://weibeld.net/java/debugging-with-jdb.html



C-. display instance variables


M-x ren-class
M-x jdee-checkstyle.  c-c c-f  then c-n/p

C-c C-v C-w     jdee-help-symbol (current cursor),or restart beanshell by c-c c-v c-i if not work
M-x jdee-help-class   ==> use it it not work (c-c c-v c-w) to  visit class html doc,or restart beanshell by c-c c-v c-i

C-c C-v C-x     jdee-show-superclass-source; 
C-c C-v x       jdee-show-interface-source  

c-c c-v a   jdee-xref-first-caller  c-c c-v c-b (build all) then c-c c-v a 
c-c c-v n   jdee-xref-next-caller   c-c c-v c-b (build all) then c-c c-v a   

C-c i     getter/setter jdee-wiz-get-set-methods
c-c t     jdee-gen-object-methods, Generates an equals(), a hashCode() and a toString method.
[not yet] C-c C-v e	jdee-wiz-extend-abstract-class,[need prj.el setting]


C-c C-v C-q       jdee-project-update-class-list


[old]
M-x jdee-find-dlg => find files in packages  by dialog 

M-x jdee-run-set-app-args, send argument to java application ==> java ClassName  args1 args2
M-x jdee-run-set-args,to send argument to java  machine      ==> java -ea -da -dsa  ClassName 


M-x rc => jdee-read-class,copy full class name , some times need space to make the flymake worksa

[old]
C-c g        jump to files in directory from anywhere, no need to type c-c c-v l to return to top prj.el
c-c c-v c-b  jdee-ant-build from java-files


[[[  old  ]]]
[[[  fix errors ]]]
M-x jdee-load-project-file, it is inside c-c c-d i (defun my-jdee-import-all ())

C-c C-v C-i     M-x my-jdee-wiz-implement-interface, must space before it
[C-c C-v i]    dont use it,c-c c-v c-q(rescan classes),use c-c c-v c-i  jdee-wiz-implement-interface, not show all interface method if i modify interface , so use my own C-c C-v C-i      my-jdee-wiz-implement-interface

C-c C-v C-o     M-x my-jdee-wiz-override-method, overrid exteds methods, ==>>if not work correct  M-x  jdee-complete-flush-classinfo-cache, but i create my own C-c C-v C-o my-jdee-wiz-override-method
[C-c C-v o]    dont use it,use c-c c-v c-o , when modify the abstract class, not show all abstract method, so use my own C-c C-v C-o my-jdee-wiz-override-method

C-c C-v k      my-jdee-bsh-restart, jumping between two project, must restart beanShell, dont run C-c c-v c-k 

;; fix errors, c-h a => jdee+update  and jdee+fluch
M-x (jdee-project-update-backend)
M-x (jdee-complete-flush-classinfo-cache) ==> included in c-. and c-c c-v c-o and c-c c-d t and c-c c-d i
M-x (jdee-project-update-class-list)      ==> included in  c-c c-v c-o and c-c c-d t and c-c c-d i 
M-x (jdee-bsh-exit)         ==> included in c-c c-v c-i  (gen interface)
M-x (jdee-bsh-run)          ==> included in C-c C-v k    (restart beanshell)



[old]
C-c C-d i  my-jdee-import-all,load-prj.el,update-package,rescan path, flush-class-info, remove extra-import


[old]
c-c j      ==> (visit method,variable) visit class, methods, and variables. but if i face slowly open class file then use c-c c-d t
C-c C-d t  ==> (search for class name in all packages) jdee-open-class-source, if i face slowly open class file 
c-c s      ==> return after c-c j   (pop-tag-mark)
M-x jtag   ==>  jtags-update-tags-files 
M-x jdee-help-class   ==> use it it not work (c-c c-v c-w) to  visit class html doc, or restart beanshell by c-c c-v c-i
c-c c-v c-w ==>    class or method  view doc without internet, by jdee, or restart beanshell by c-c c-v c-i


[old]
M-x  jdee-javadoc-checkdoc(fix,next,previos) => generate doc for all methods and fix docs, Check doc comments of tags in the current buffer.
C-c C-v  j  (add    doc) jdee-javadoc-autodoc-at-line 
c-c c-v  J  (remove doc) jdee-javadoc-remdoc-at-line  


[old]
M-x  jdee-toggle-project-switching  on/off (be carefull,no need to relad prj.el when changing project )  = Toggles project switching on or off.
     then load prj.el manually   '(jdee-project-context-switching-enabled-p nil)


[old]
c-.          complete after update methods (slow)
c-c c-.      complete without update       (fast)
c-c c-v .    complete in line, good with mc, macro
M-.          ==> list all methods/class/var name in TAGS files , xref-find-definitions in TAGS TAGS,

[old]
C-c C-d c   ==> jdee-compile but     delete the build folder (clean compile)
C-c C-v C-c ==> jdee-compile without delete the build folder (not clean compile)


[old]
M-x  my-jdb-for-current-method then step) ;; fast debug from current line
     ;; must be compiled first c-c c-v c-c or c-c c-d c


[old]
M-x my-jdee-javaDoc   ==> (class hierarchy in packag tree .html )generate javaDoc  for current package and subpackage, then visit it by c-c c-v c-w,
                          can use the command directly to generate doc for all folder and subfolder ===>  javadoc -subpackages (packages separated by space in src/) 
			       generate javaDoc html files by javadoc command javadoc  -d -classpath  package,
[old]
M-x jdee-help-class   ==> use it it not work (c-c c-v c-w class/or method) to  visit class html doc, or restart beanshell by c-c c-v c-i, or c-c c-v k to restart beanshell
c-c c-v k             ==> restart beanshell 
;;;;;;;;;;;;;;;;;;;;;;;;;;end of   old jdee ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;;;;;;;;;;;;;;;;;;;;;;;;;;end of   old jdee ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;;;;;;;;;;;;;;;;;;;;;;;;;;end of   old jdee ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;






;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; auto revert mode means auto refresh buffer 
[old]
(add-hook 'dired-mode-hook 'auto-revert-mode)

[new]
;; to stop it in the current dired type
   M-x set-variable
   global-auto-revert-non-file-buffers nil
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

 how to setup ecj.jar for flymake  ???
 all information found at ~/.emacs.d/elpa/jdee-20160728.1152/jdee-ecj-flymake.el and ~/.emacs.d/plugins/flymake.el

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;




the best solution is upate all packages from emacs -q ,
wow, wow, wow, crazy jdee problem in emacs 25.2
jdee debug emacs 25
Requires: emacs-24.3, flycheck-30, memoize-1.0.1, dash-2.13.0, s-1.12.0
remove flycheck from emacs-q then exit
then remove jdee from emacs -q then exit,
then M-x package-autoremove
then install flycheck from emacs -q then exit
then install jdee from emacs -q  then exit 
emacs -q 
(set 'package-archives
   (quote
     (
        ("gnu" . "https://elpa.gnu.org/packages/")
        ("melpa" . "https://melpa.org/packages/")
        ("marmalade" . "https://marmalade-repo.org/packages/")
	("marmalade" . "http://marmalade-repo.org/packages/")
     )
   )
)
or remove package one by one by
 '(package-selected-packages
   (quote
    (diredfl look-dired jdee ztree yasnippet widget-mvc wid-edit+ which-key web-mode web-completion-data web-beautify vlf thingatpt+ sx subr+ strings soundklaus sos smex smartparens simple-httpd runner restclient rainbow-mode rainbow-delimiters plantuml-mode pdf-tools naked multi-term move-dup monochrome-theme misc-fns misc-cmds menu-bar+ mark-multiple magit jtags info+ iedit ido-ubiquitous htmlize help-fns+ goto-chg google-translate google-maps golden-ratio fullscreen-mode frame-fns fiplr expand-region emms-soundcloud emms-mark-ext emms-info-mediainfo elmacro eimp dirtree direx-grep dired-toggle-sudo dired-toggle dired-subtree dired-sort-menu+ dired-sort dired-single dired-ranger dired-rainbow dired-open dired-narrow dired-k dired-imenu dired-filter dired-efap dired-dups dired-details+ dired-avfs dic-lookup-w3m deferred cmds-menu chm-view bookmark+ bash-completion autofit-frame auto-complete-nxml apt-utils-ido apropos-fn+var anzu ant ace-window ace-mc ac-html ac-emmet)))
then reinstall them  .



stop flycheck for jdee
'(jdee-flycheck-enable-p nil)

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;





---read all this please for emacs tutorial 
http://www.gnu.org/software/emacs/manual/html_mono/emacs.html
http://ergoemacs.org/emacs/
amazing  emacs mini tutorial 
http://tuhdo.github.io/emacs-tutor.html
-type f -exec grep -q -e sososo \{\} \;


;; make the C-x as C-c f
;; (global-set-key (kbd "C-c f") ctl-x-map)

;; [[[very importat ]]]
;; (global-set-key (kbd "C-c f") ctl-x-map);; may be better is C-j
;; [[[ very importat]]]

 M-x emms-play-url  8hayat
 M-x emms-play-url  8nashed
 M-x emms-play-url  8husary

;; all radios  in the world ==>>  https://www.shoutcast.com/

# list all open url and ip ESTABLISHED internet
lsof -i  ## husary will be in :port not https
lsof -i -P
lsof -i -P -n

husary will be in  https://www.shoutcast.com/

# list all open url and ip ESTABLISHED internet
lsof -i -r 


 husary     http://184.173.185.71:9958
 minshaway  http://184.173.185.71:9978
 hayat-FM   http://104.238.193.114:7048
 hayat-FM   http://104.238.193.114:7048
 ahmad-ajami  http://184.173.185.71:8008
 nashed1    http://69.12.70.159:8000


;; all radios  in the world ==>>  https://www.shoutcast.com/
;; download mplayer first
;; husary
 (defun husary()
   (interactive)
   (emms-play-url  "http://184.173.185.71:9958"))

;; hayat FM my-radio
 (defun hayatFM()
   (interactive)
   (emms-play-url  "http://104.238.193.114:7048"))


;; wow my-radio, choose channel form alist
 (defun my-radio()
   "Prompt user to choice from a my-radio list."
   (interactive)
   (let ((channels '(
                     "http://184.173.185.71:9958   husary"
		     "http://104.238.193.114:7048  hayatFM"
		     "http://69.12.70.159:8000     songs"
		     )))
    (emms-play-url   (ido-completing-read "my-radio:"  channels))     
))



==========power of emacs=====--macro + regex===============the real power of emacs M-x rx replace-regex  with macro----

M-x regexp-builder C-c t string not read  then use one \

;; sorry elisp
;; not work in elisp 
 not ali
^((?!ali).)*$

the solution is :- mark region  which containg the sam, then delete it ,then mark the othe region
M-x qr  ^.*sam.*$  => space 
that is it
  or or or
M-x rx sam =>  $        ;;; (replace sam by $, then negate $ by [^\$])
M-x rx [[:alpha:]]*[^\$]  
M-x rx \$  => sam      ;; must have \$
wow

;; it is work
;; work ahmad or ali
"\(ahmad\|ali\)*"


ahmad,ali
become 
hi ahmad ahmad,ali ali what  macro

first  :- \([a-z]+\)\,\([a-z]+\)
second :- hi \1 \,(progn (sit-for 1) (ss1) \&) \2 what macro
note   :- macro only type "macro"


note :- the  macro of regex => the position is the cursor in the ending of highlighted words then use (mymacro)\&
 C-M-s                   incremental forward search matching regexp
 C-M-r                   incremental backward search matching regexp 
 replace-regexp          replace string matching regexp
 query-replace-regexp    same, but query before each replacement
 align-regexp            align, using strings matching regexp as delimiters
 highlight-regexp        highlight strings matching regexp
 occur                   show lines containing a match
 multi-occur             show lines in all buffers containing a match
 how-many                count the number of strings matching regexp
(how-many "Click to select this command")c-x-e
(my-mycu 25 'bbb)c-x-e
(my-mycu (how-many "sososo") 'xx) c-x-e ;; this is usefull when using dried macro
 keep-lines              delete all lines except those containing matches
 flush-lines             delete lines containing matches
 grep                    call unix grep command and put result in a buffer
 lgrep                   user-friendly interface to the grep command
 rgrep                   recursive grep
 dired-do-copy-regexp    copy files with names matching regexp
 dired-do-rename-regexp  rename files matching regexp 
 find-grep-dired         display files containing matches for regexp with Dired
 list-matching-lines
  see the regex.txt
M-x rx   replace-rexgex   
hi
\,(progn (sit-for 3) "ahmad" ) 


first make a macro 
but must note the position of cursour is in the end of words
c-x c-k n => mymacro1
then 
M-x replace-regex or rx
hi
\,(progn (sit-for 3)(mymacro1) "or empty" ) 

-- the symbol \& => same matched string
\,(progn (sit-for 3)(mymacro1) \& ) 

note:- view the regex before replace it
M-x hlr or M-s hr => highlight  
M-x uhlr or M-s hu => unhihglight

suppose :- the word is ahmad ali 
\w   one char of word  => a from ahmad
\w+  all the word      => ahmad ali 
a\w+   a then word      => ahmad ali
a\w    a then char      => ah and ma
\w+\>  one  word       => ahmad only without ali
[[:space:]]ah\w+\>    => space ah then end of word
\< or \<(\                  => begin of word
\>    \)\>              => end of word
working with macro   \<a\w+\>           => one word begin with a 
\<a\w+\>            => one word begin with a
\<\(a\w+\)\>        => one word begin with a


===== capitalize fist last words with special condition

ahmad,sara
become
3:- ahmad:::SARA

anas,dar
become
2:- Anas:dar

M-x hlr 
M-x replace-regex 
first  \<\(a\w+\)\,\(\w+\)\>
second 
\,(1+ \#):-  
\,(progn (sit-for 1) 
    (if (equal "sara" \2)
          (concat \1 "::::SARA")(ss)\&))

note:- ss for make anas,dar 
note:- ss inside if condition
note:-  \,(1+ \#):- for numbering from 1:-
=====- Swap values in my youtube account  http://youtu.be/q0a14zTDbpI  ---
right
left
left
right
      become
left
right
right
left
  M-x replace-regexp
  Replace regexp: right\|left
  Replace regexp with: \,(if (equal "right" \&) "left" "right")

 \,(progn (sit-for 2) (if (equal "right" \&) "left" "right"))


===== replace all special char by spacea
note:- special char include (@#$%^&*(!~0123456789)){}
M-x rx  [^[:alpha:]]  replaced by space 
[[:alpha:]] ==> means [a-zA-Z] without numbers

===== caiptalize first char of word a

first  :- \<\(a\w+\)\>
second :- \,(progn (sit-for 2)(ss) \&)

ss = macro to make capitalized first char
=====--capitalize first cahr 
first :-  \<ah\w+\>
second:-  \,(progn (sit-for 2) (capitalize \&))
(capitalize "hiii") c-x-e or c-u c-x-e
=====--change the , by ; 
1,1
12,12
123,123
1234,1234

M-x rx
first :-  \([0-9]+\)\.\([0-9]\)
second:-  \1;\2

note:- 
\( \) => group number \1
\( \) => group number \2
so that is means 
\([0-9]+\)\. => group number \1
\([0-9]\)\. => group number \2
==============================-
a,b 
ab,ab
abc,abc
abcd,abcd

become 

x(a:b)x 
x(ab:ab)x
x(abc:abc)x
x(abcd:abcd)x
first  :- \([a-z]+\)\,\([a-z]+\)
second :- \,( progn (sit-for 2) (ss)\&)
note   :- ss is macro , the position of macro in the end of words then use (ss)\&
===================================
ahmad,ali
become 
mm ahmad ahmad,ali ali kk macro

first  :- \([a-z]+\)\,\([a-z]+\)
second :- mm \1 \,(progn (sit-for 1) (ss1) \&) \2 kk macro
note   :- macro only type "macro"


===================================

J=J-y(i)*log(h)-(1-y(i))*log(1-h)+(lambda/2)*sumtheta2;
become
J = J - y(i) * log(h) - (1 - y(i)) * log(1 - h) + (lambda / 2) * sumtheta2;

first :-   =\|+\|-\|*\|/
second:-     \& 
or
first :-   [=+-*/]
second:-     \&

================================================================================

Start file

foo = a
      ab
      abc

End file

foo = "a"
      "ab"
      "abc"

solution :- 
M-x rx
first :-  \([[:space:]]\{1\}\)\([a-z]+\)\([[:space:]]\{1\}\)
second:-   "\2"

================================================================================
Start file

J=J-y(i)*log(h)-(1-y(i))*log(1-h)+(lambda/2)*sumtheta2;

End file

J = J - y(i) * log(h) - (1 - y(i)) * log(1 - h) + (lambda / 2) * sumtheta2;

solution :- 
M-x rx
first :-  [-+=/*]
second:-    \& 
note that before \& and after it there is a space
================================================================================
abc
ABC

select only lower case

solution
(case-fold-search nil) c-x-e
then
[a-z]
===============================================================================
Start file

Leave only the
numbered lines.
HI
LINE 1
LINE 2
LINE 3
That's all.
Thank you
very much.

End file

LINE 1
LINE 2
LINE 3

M-x dnml or keep-lines
first :-  ^LINE [1-3]
second:-   space key
===============================================================================
add zeros  to numbers lile this
1   will be 0001
02  will be 0002
003 will be 0003

M-x qr  ^[0-9]$           000\&
M-x qr  ^[0-9][0-9]$       00\&
M-x qr  ^[0-9][0-9][0-9]$   0\&
===============================================================================











=====----end of power of emacs==========end of macro + regex =======================================================-

use this command :-  whereis emacs
emacs locations :- where is emacs 23 and 24 in linux
/usr/local/share/emacs/24.2
/usr/local/share/emacs/
/usr/share/emacs/23.4/

best website:- http://ergoemacs.org/ http://planet.emacsen.org/

==============================--- html pages best from ergo
wrap-urlwrap-url
elisp_examples.html
elisp_common_functions.html
elisp_editing_basics.html

==================================================---
emacs motion
M-- negative 
m-k       kill paragraph
M-- m-k kill pre paragraph 
c-v   next scr 
m-v  pre scr    
M-<  beggining page 
M->  ending page
M-{}  pre/next paragraph	
M-a/e  pre/next sentances 
c-m-b/f  sexp 
c-m-a/e function
c-x [  previous page 
c-x ]  next page
M-g g  go to line
c-x [] like c-v or m-v
c-c c-v RET         refresh 
M-x revert-buffer   refresh
=============================================-
http://emacsrocks.com/
http://www.youtube.com/watch?v=16Rd46SE-20
http://www.youtube.com/results?search_query=emacs+RT&oq=emacs+RT&gs_l=youtube-reduced.3...24307.26016.0.26383.3.3.0.0.0.0.478.966.0j1j0j1j1.3.0...0.0...1ac.1.jG4Dc7MIfGA
http://vislab-ccom.unh.edu/~schwehr/rt/video/
http://emacswiki.org/emacs/EmacsScreencasts
not installed yet
nRT 2011_ Lecture 09 - Emacs Org Babel
Emacs Org-mode - a system for note-taking and project planning
Writing (La)TeX documents with AUCTeX in Emacs
The GNU emacs Editor
Working withn OS X and Emacs by Ryan McGeary
http://www.mobileheart.com/set-downloads/set_cat_software.asp?catname=Dictionary&catid=67&SID=167&setname_link=HTC-Touch-Viva&setid=1851&SETNAME_ALT=HTC%20Touch%20Viva&SETDOWN_PNAME=1851-HTC-Touch-Viva-Software.aspx
http://batsov.com/articles/2011/11/30/the-ultimate-collection-of-emacs-resources/

emacs+eclipse from http://www.mulgasoft.com/emacsplus/update-site
==================================================--
M-x epa-encrypt-file   to ecrypt file in emacs
c-x r t   to replace rectangle
c-x r y   to yank rectangle
c-x r k   to cut  rectangle
c-x r d   delete rect
C-x r N   rectangle-number-lines(new in 24) 1 2 3 4 5.....

[[hahahahiiiiiii]]
C-x r r   copy rectangle then C-x r i (paste it )

c-t       to transpose char
M-t       to transpose words
c-x c-t    to transpose lines
M-x   transpose-paragraph
c-/     undo 
c-?     redo
c-g c-/ redo

c-d         delete next char
alt+d		delete next word
alt or ctrl+backspace   delete previous word
c-x c-o   delete-blank-line  , use it with macro to delete all line spaces
c-k        delete to end of line
M-0 c-k    delete to begining of line or  Esc 0 c-k
M-k        delete to end of sentense in emacs
c-x bspace delete to begin of senetence in emacs
nctrl+shift+bspace delete the line
c-x a backward history or M-left
c-x p forward history or M-right

M-|  shell-command-on-region
M-x shell   run the shell command 
M-x eshell  run the eshell command
vlc in terminal will run the vlc player video and audio
M-x rename-buffer  will rename the buffer name
M-p view the last command the eshell 
M-n/p  next/previous command
c-c c-k  break			
M-h  mark the paragraph
c-x c-x mark
alt+@ foword marking word by word(selection) or   C-;
c-x h mark all buffer
M-%   query-replace  

M-s h r highlight regex
C-M-%  = qr query-replcae-regexp   space=yes , n ,! all     one by one because the word query 
M-x rx   replace-rexgex   convert all matching directly without query but u can use the function sit-for to automate replace
aaa
\,(progn (sit-for 3) "ahmad") 

M-x regexp-builder  to view the matching string 
c-x k  close this window or buffer
M-x rename-buffer 
===================================--
emacs    M-x flyspell-mode  c-, find c-. fix or M-shift-4 M-$
eclipse  ctrl+, next error  ctrl+.  previous error  ctrl+1 fix error 
===================================--
alt+space   delete all tabs and keep one space
alt+\  delete all spacess between words

alt+/    word completion
alt+shift+/ content assist 
nc-x c  copy lines means duplicate lines
c-s-back c-y  copy line
M-;    comment 
c-o  new  above line  
c-x c-o delete  blank linesssss
M-shift-6 M-^  join lines in one
C-M-O          split-line like this
===
   =======----
              =====--
                     =====--
			   =====--


==================================================

--To edit file as hex code:
M-x hexl-mode

--To execute an external shell command:

M-!

--When negatively prefixed will insert result of command into current buffer:

M-- M-!

--To display all lines matching a regexp,

M-x occur [enter] regexp

--To set coding system of current buffer:

C-x C-m f



-- format the paragraph

M-h mark the paragraph then
c-x f set fill column to paraphraph then in emacs but in eclipse open plantUML 
M-q fill paragraph then in emacs  but in eclipse select c-shift-up
c-x tab to shift the pragraph to the right

====================---
M-z zap to char or del to char
c-x =  position of the point
====================----registers  ==========-
c-f to fixed point in clipse
c-b to movement point in emacs 
move emacs <-.-> fixed eclipse

C-x r r   copy rectangle then C-x r i (paste it )
C-x r r   copy rectangle then C-x r i (paste it )

c-x r space  put the rigister point
c-x r j      jump to saved register point
M-x view-register view the saved registers
but in eclipse c-x r v 

c-u c-x r v  => view all rigistered 
 
c-x r space => register to point
c-x r j     => jump to point

c-x r s or x => copy region to register
c-x r r      => copy rectangle to register
c-x r g or i => insert/paste from register
but             
c-x r k kill region
c-x r y yank-paste rectangle from c-x r k

c-x r m    set bookmark 
c-x r b    jump  to bookmark
c-x r l    list all bookmarks
[old ]c-x ps     save bookmarks 
[new] M-x bookmark-save

M-x bookmark-save 
M-x bookmark-delete



C-x r SPC	point-to-register
C-x r j		jump-to-register

c-x r s or x => copy region to register
c-x r r      => copy rectangle to register
c-x r g or i => insert/paste from register
but             
c-x r k kill region
c-x r y yank-paste rectangle
also
C-x r t		string-rectangle replace rectangle by this string 

C-x r +		increment-register
C-x r N		rectangle-number-lines
C-x r c		clear-rectangle 
C-x r o		open-rectangle open space of rectangle 

C-x r f		save frame to register,if use it in dired then must use return(enter) instead of a



==============================--

M-x icomplete-mode  it is very important .

M-x autofill-mode like wordwrap
M-x toggle-truncate-lines disable
(icomplete-mode 1)
(set-background-color "black") c-x-e
(set-background-color "yellow") c-x-e
(set-foreground-color "white") c-x-e
(auto-image-file-mode 1)
then c-x c-e or put it in the .emacs file
(set-background-color "#A7CAFF") c-x-e  it it the blue
(set-background-color "white") c-x-e  

==========- macros c ( i ; a=1 + number ) /en ===============-
formula  c(i  a+)    ;; a=1 

c   = init value
(   = start macro
i   = print value or tab
a+number = increment ;; but a=1 by default
)   = end macro

c-u c-x (     append to the last macro
c-x c-k q  add query to macro
c-/          undo to undo the errors instead of c-g 
c-x c-k c-f %c format characters 
c-x c-k c-c    init value
c-x c-k c-i or tab   print value
c-x c-k c-a    increment value-1
c-x c-k c-e    edit macro

c-x c-k n    give a  name for macro ==> save as
M-x insert-kbd-macro    insert kb macro as lisp code
M-x edit-kbd-macro  M-x the name

c-x c-k c-f %c char format 
c-x c-k c-f %d decimal format 
c-x c-k c-f %x hex format 
c-x c-k c-f %e floating-point format 
c-x c-k c-f %f decimal-point format 
c-x c-k c-f %g floating-point format 

c-x ( 
c-x )
c-x e 
c-u 10 c-x e run macro 10 times
c-x c-k then select from list command for macro
c-h a macro
m-x view-kbd-macro  or c-x c-k c-e

c-x c-k n name-last-kbd macro like soso
then call it by M-x soso or for all files like
c-u 0 M-x soso
m-x save-kbd-macro
m-x load-kbd-macro

c-x q ==> macro query to continue or not use y n

c-u 33 c-x e  run macro 33 times
c-u 0 c-x e run untill the ring bell 

repeat last command is c-x z z z z z in emacs 
M-x list-command-history
  
important note for saving macro :- 
make macro
c-x c-k n  mymacro  // named macro
edit-named-kbd-macro // edit mymacro 
M-x mymacro         // call macro
c-u 0 M-x mymacro   // call macro
M-x insert-kbd-macro // open new file or .emacs then save the macro in it 

Q;- how to generate a b c d e f g h i ....z 
remeber this formula c(i a-1)
c-x c-k c-f %c 
c-x c-k c-c 97
c-x (
c-x c-k c-i or TAB  then space
c-x )
c-u 25 c-x e
;; this is called Formatting Strings in elisp %c %d %s ...
(format "The value of fill-column is %c" 90) ==> Z
(format "The value of fill-column is %c" 65) ==> A
(format "The value of fill-column is %c" 1576) ==> b in arabic 
a b c d e f g h i j k l m n o p q r s t u v w x y z 
A B C D E F G H I J K L M N O P Q R S T U V W X Y Z
ا ب ة ت ث ج ح خ د ذ ر ز س ش ص ض ط ظ ع غ ػ ؼ ؽ ؾ ؿ ـ ف ق ك ل م ن ه و ى ي



Q:- how to generate 1 2 3 4 5 6 7 8 9 10 
remeber this formula c(i a+ ) ;; a by default =1
or 
remeber this formula c(i a+0);; a=1
c-x c-k c-f %d
c-x c-k c-c 1
c-x (
c-x c-k c-i or tab then space
c-x c-k c-a 0
c-x )
c-u 9 c-x e

Q:- how to generate 5 10 15 20 ...50
remeber this formula c(i a+4) ;; a=1
c-x c-k c-f %c 
c-x c-k c-c 5
c-x (
c-x c-k c-i or tab then space
c-x c-k c-a 4
c-x )
c-u 9 c-x e



C-x (
C-x )         => no need to close macro if you type c-x e
C-x e         => run macro 
wow   c-x c-k space => edit macro step by step as debug macro
C-x C-k e     => edit macro
C-x C-k n     => name macro
C-u 0         => repeat infinity 
M-x insert-kbd-macro  ==> insert macro as code
C-x C-k l  => edit lossage macro
M-x find-library
c-x q => query y/n
================= all macro ========================

apply-macro-to-region-lines   C-x C-k r
bmkp-wrap-bookmark-with-last-kbd-macro C-x p c C-k
c-macro-expand		     
call-last-kbd-macro	     
defining-kbd-macro	     
edit-kbd-macro		      C-x C-k e
edit-last-kbd-macro	      
edit-named-kbd-macro	      
edmacro-finish-edit	      
edmacro-insert-key	      
edmacro-mode		      
elmacro-clear-recorded-commands	
elmacro-mode		      
elmacro-show-last-commands    
elmacro-show-last-macro	      
end-kbd-macro		      
insert-kbd-macro	      
kbd-macro-query		      C-x C-k q, C-x q
kmacro-add-counter	      C-x C-k C-a
kmacro-bind-to-key	      C-x C-k b
kmacro-call-macro	      
kmacro-call-ring-2nd	      
kmacro-call-ring-2nd-repeat   C-x C-k C-l
kmacro-cycle-ring-next	      C-x C-k C-n
kmacro-cycle-ring-previous    C-x C-k C-p
kmacro-delete-ring-head	      C-x C-k C-d
kmacro-edit-lossage	      C-x C-k l
kmacro-edit-macro	      C-x C-k RET
kmacro-edit-macro-repeat      C-x C-k C-e
kmacro-end-and-call-macro     C-x e
kmacro-end-call-mouse	      S-mouse-3
kmacro-end-macro	      C-x )
kmacro-end-or-call-macro      f4
kmacro-end-or-call-macro-repeat	C-x C-k C-k
kmacro-insert-counter	      C-x C-k TAB
kmacro-keymap					       C-x C-k		
kmacro-name-last-macro	      C-x C-k n
kmacro-set-counter	      C-x C-k C-c
kmacro-set-format	      C-x C-k C-f
kmacro-start-macro	      C-x C-k s, C-x C-k C-s, C-x (
kmacro-start-macro-or-insert-counter f3
kmacro-step-edit-macro	      C-x C-k SPC
kmacro-swap-ring	      C-x C-k C-t
 kmacro-to-register	      C-x C-k x to excute it call it c-x rj 
kmacro-view-macro	      
kmacro-view-macro-repeat      C-x C-k C-v
kmacro-view-ring-2nd	      
naked-read-kbd-macro	      
name-last-kbd-macro	      
pp-macroexpand-expression     
pp-macroexpand-last-sexp      
read-kbd-macro		      
=====-- searc h ==========-

M-s        :- search the project in eclipse
Ctrl-U M-S :- Search in Working Set S
Ctrl-U Ctrl-U Alt-S :search in Workspace 

M-s        :- search the project in eclipse
Ctrl-U M-S :- Search in Working Set

Narrow to Region (Ctrl-X N N): Restrict editing of the buffer to the selected region
Widen (Ctrl-X N W): Remove the narrowing restriction from the buffer

=====---editing=====---

c-shift-n    new
step-into (Ctrl-C Ctrl-S
step-over (Ctrl-C Ctrl-N
resume     (Ctrl-C Ctrl-R
run-to-line (Ctrl-C Ctrl-U
step-return (Ctrl-C Ctrl-F
c-shift-F  format ,
c-x left = forward history   c-x a
c-x left = backward history c-x p

( + 1 2 3 4 5 6 ) c-x-e evalute  or 
c-u c-x-e   to print inside buffer not inside minibuffer

==========-- org mode ==========----
<tab> expand 
shift-<tab> global expand
*bold*
/italic/
_underLine_
list  -
image [[./images/image.jpg]]

table 
c-c | convert region to table

|-  tab  to create table

|   |   | 
|-tab

C-c | => create table from string 

:= set the formula 
:= @2$3  row 2 and column 3


==========----MiniBuffer==========
M-x M-n fetch later minibuffer input
M-x M-p fetch previous minibuffer input
==================================
m-x info-apropos search emacs help
xxxopen in emacs run-last-launched-external-tool  c-x ; e  
c-c / RET   google-search
c-h a  list command matching in eclipse
M-x appropos  help
esc-x  == M-x

== eclipse keys =========================================================================================================--

C-shift-n    = new 
alt+shift+G  = AG =  getter /setter for field
alt+shift+m  = AM =  extract methods 
alt+shift+L  = AL =  extract variables 
Alt+Shift+R  = AR =  rename members  or ctrl+2

alt+shift+S  = AS =  source
Alt+Shift+T  = AT =  refactor

ctrl+shift+T = CT = open type
ctrl+shift+/ = C/ = add comment    or M-;
ctrl+shift+\ = C\ = remove comment or M-;

c-x c-f open source
c-x  f view plantUML
c-3   quick access
c-[   show hierarchy 
c-]   show outlines memberes
c-x b     switch widows
c-x c-b    switch windows
c-x o      switch between windows
c-s  search next
c-r, search previous
M-C-s  regex search
$ cat scjp.txt | text2gif   > hi2.gif

Alt+/        complet
alt+shift+/  assent 
ctrl+Q =last edit location 
[old] M-.   open decleration in TAGS files

===================================
find next  find previous    correct
ctrl+.         ctrl+,       ctrl+1 
===================================
ctrl +2 or Alt+shift+R rename variables 
c-x space   toggle break point

ctrl + - num,  
collapse expand 

ctrl+shift+f,s   // format and save 
c-x s save all or c-x c-s save 

activate editor    ctrl+0 
project exp         ctrl+9                          
remote sys          ctrl+7                            

===========================================================
for new emacs keybinding c-x ; abcdfghijklmnopqrstvwxyz   not e
c-c
===========================================================
q:- how to change the default directory for emacs : home directory ?
create new computer--> properties--> environment variables--> user var for ahmed 
 Home 
 c:\home
============================================================
Is there an emacs command which would apply a kbd macro to every file in dired?
  if you didnt close the buffer go by this way
 1- go to the top of your dired buffer
 2- Record Macro
 3- Press enter to visit the file
 4- M-x kmacro-call-ring-2nd
 5- C-x o (other buffer)
 6- Down a line
 7- Stop Recording
 8- C-u 0 C-x e (call-last-keyboard-macro till the end of the file)
 
 if you close the buffer no need for using M-x kmacro-call-ring-2nd 


this one is working 100% 
 1- go to the top of your dired buffer
 2- Record Macro
 3- Press enter to visit the file
 4- save then kill the buffer
 6- Down a line in dired to select the next file
 7- Stop Recording
 8- C-u 0 C-x e (call-last-keyboard-macro till the end of the file)

*note:- the proble "cant save macro in dired"=>two solution 1-divide all macros and and  use (my-mycu ) function instead of C-u 0 
*note:- macro mac1 is contains (my-mycu 55 mac2) and mac2=> (my-mycu 11 mac1)  
*note:- use toggle-truncate-lines in every buffer
*note:- save buffers many time to make the macro faster 
*note:- divide big macro in small macros then name it then call them
*note:- c-u 0 c-x e write this inside  dired 
*note:- dont use c-x e alone  .
*note:- use (my-mycu (how-many "sososo") 'mymacro) c-x-e
*note:- xx is macro or function if u dont know how many repeat because the bell ring will damage the dired macro



remember c-x c-k n            => name macro
         edit-named-kbd-macro => edit macro
         insert-kbd-macro     => create new file then save macro in it then relaod it by .emacs
         (my-mycu "ahmad" 'mymacro)=> always use it in dired macro 
         (my-mycu2 (how-many "sososo") 'mymacro)  or this one 
         (count-lines-page) // count line page 

== macro dired
working 100 dired with macro
1- open file
2- create macro
3- modify file
4- kill file
5- close macro  then name it  t2
then then 
6- in dired create new macro
7- open file
8- call t2
9- next file C-n
10- name macro t1
then then
in dired u can call macro t1 by
c-u 0 c-x e
or
c-x e
or
M-x t1
or
c-u 4 c-x e

===============----===============

---replace string in multi files by dired and regex

    Call dired to list files in dir, or call find-dired if you need all subdirectories.
    Mark the files you want. You can mark by regex by typing 【% m】.
    Type Q to call dired-do-query-replace-regexp.
    Type your find regex and replace string. 〔☛ common elisp regex pattern〕
    For each occurrence, type y to replace, n to skip. Type 【Ctrl+g】 to abort the whole operation.
    Type ! to replace all occurrences in current file without asking, N to skip all possible replacement for rest of the current file. (N is emacs 23 only)
    To do the replacement on all files without further asking, type Y. (Emacs 23 only)
    Call ibuffer to list all opened files.
    Type 【* u】 to mark all unsaved files, type S to save all marked files, type D to close them all.


=================================================================----
--- sort
sort-lines
sort-fields
sort-paragraphs
sort-columns
sort-regex-fields 
and more

-change the frame name by this 
M-x set-frame-name    ==============================---
--- edit binary files
M-x hexl-mode

----setting for w3m
editor           '/cygdrive/emacs/bin/runemacs'    not emacs
external browser'/cygdrive/c/program files/Mozilla Firefox/firefox'

use external background    no
use lessopen               no
enable mouse
enable style line editing ok

S c:\a1   not /      and dont save it as html    
V c:\a1   not /
E 

M
esc M



copy all configuration from emacs to c:/cygwin/home/emacs.d and .emacs

===================================--

=====--installing for emacs-w3m 
from cygwin first download it by cvs
1- cvs -d :pserver:anonymous@cvs.namazu.org:/storage/cvsroot co emacs-w3m
2 Build and Install

    $ cd emacs-w3m
    $ autoconf
    $ ./configure
    $ make
    $ make install (as root)
3-in  .emacs
(add-to-list 'load-path "/usr/pbi/emacs-i386/share/emacs/site-lisp/w3m")(autoload 'w3m "w3m" "Interface for w3m on Emacs." t)(require 'w3m-load)

4- in .emacs 
 ;;Enable Cookies(setq w3m-use-cookies t);;Follow links in W3M(setq browse-url-browser-function 'w3m-browse-urlbrowse-url-new-window-flag t)(autoload 'w3m-browse-url "w3m" "Ask a WWW browser to show a URL." t)(global-set-key "\C-xm" 'browse-url-at-point)(autoload 'browse-url-interactive-arg "browse-url");;Set default download directory(let ((d "~/downloads/"))(setq w3m-default-save-directory(or(and(file-directory-p d)d)w3m-default-directory)));;W3M doesn't name buffers very intelligently. Let's fix that:(add-hook 'w3m-display-hook(lambda (url)(rename-buffer(format "*w3m: %s*" (or w3m-current-titlew3m-current-url)) t)))
 
then copy files from cygwin/usr/share/images/w3m to c:/emacs/images
then copy files from cygein/usr/share/site-lisp/w3m  to c:/emacs/site-lisp

===============---setting for w3m-emacs              view the menu to see the most options
c-x m   display any file insde w3m , 
c-x m   display current url inside w3m
c-x m   display current dired inside w3m

c-c c-v  M-x my-w3m-copy-url-at-point
(global-set-key (kbd "C-c C-v") 'my-w3m-copy-url-at-point)


M-x go   google-suggest
c-x-w    save as page as buffer as text 
/ c-x-w  save as page as buffer as html

w3m mode
M-x w3m 	Start browsing web with emacs-w3m.

^       up in url => means https://www.yahoo.com/hi1/hi2 become  https://www.yahoo.com/hi1/  w3m-view-parent-page &optional COUNT
	it is like c-x c-j in dired 

A	Display the report of changes in web pages.
s 	Display the history of pages you have visited in the session.
S 	Prompt for a search query and submit it to google.
R 	Reload the current page.
B 	Move back to the previous page in the history.
U 	Visit the web page.
M-d 	Download the URL.
d 	Download the URL under point.
\ 	Display the html source of the current page.
=       display the response headers 
b 	Scroll down the current window, or go to the previous page.
[ ]     next/previous form 
{ }     next/previoud image
G		new session(tab) 
E       edit the local file
u	Display the url under point and put it into `kill-ring'.
c	Display the url of the current page and put it into `kill-ring'.
M-k	Display cookies and enable you to manage them.
I	Display the image under point in the external viewer.
M-i	Save the image under point to a file.
t	Toggle the visibility of an image under point.
T	Toggle the visibility of all images.
M-T	Turn off to display all images.
M-[	Zoom in an image on the point.
M-]	Zoom out an image on the point.

E	Edit the local file displayed as the current page.
e	Edit the local file which is pointed to by URL under point.

D	Display a directory tree.

C-c C-t	Create a copy of the current page as a new session.
C-c C-n	Turn the page of emacs-w3m buffers ahead.
C-c C-p	Turn the page of emacs-w3m buffers behind.
C-c C-w	Delete the current emacs-w3m buffer.
C-c C-k	Try to stop internal processes of a page.

in emacs can find the cookies  here
/root/.w3m/.cookie
M-k	Display cookies and enable you to manage them.

command proxy when visity w3m
;; net cat ncat as proxy (it is work convert 8080 to 4444  )
http://localhost:4444/first/first.html
cd /tmp 
mknod backpipe p
nc -lk -p 4444 < backpipe | tee -i -a  my_request.txt | nc -k   localhost 8080 | tee  -i -a my_response.txt > backpipe
break the a bove command then w3m will work 
================================================================






--add to .emacs to activate c-x m to browse any file inside w3m 
http://www.emacswiki.org/emacs/WThreeMHintsAndTips

 (setq browse-url-browser-function 'w3m-browse-url)
 (autoload 'w3m-browse-url "w3m" "Ask a WWW browser to show a URL." t)
 (global-set-key "\C-xm" 'browse-url-at-point)

 (autoload 'browse-url-interactive-arg "browse-url")


(setq browse-url-browser-function 'w3m-browse-url
          browse-url-new-window-flag t)

 (add-hook 'dired-mode-hook
	   (lambda ()
	       (define-key dired-mode-map "\C-xm" 'my-dired-w3m-find-file)))
---
 (defun my-dired-w3m-find-file ()
   (interactive)
   (require 'w3m)
   (let ((file (dired-get-filename)))
     (if (y-or-n-p (format "Open 'w3m' %s " (file-name-nondirectory file)))
	 (w3m-find-file file))))


but i modify it to 


 (defun my-dired-w3m-find-file ()
   (interactive)
   (let ((file (dired-get-filename)))
     (progn (format "Open 'w3m' %s " (file-name-nondirectory file)) (w3m-find-file file))
))

====================---


(defun my-w3m-copy-url-at-point ()
    (interactive)
    (let ((filename (concat (make-temp-file "w3m-") ".html")))
      (unwind-protect
          (progn
            (write-region (point-min) (point-max) filename)
            (w3m-find-file filename))
        (delete-file filename))))


  (defun my-w3m-copy-url-at-point ()
    (interactive)
    (let ((url (w3m-anchor)))
      (if (w3m-url-valid url)
  	  (kill-new (w3m-anchor))
        (message "No URL at point!"))))

   (add-hook 'w3m-mode-hook
	  (lambda ()
	    (local-set-key "\M-W" 'my-w3m-copy-url-at-point)))

  (defun google-suggest ()
     "Search `w3m-search-default-engine' with google completion canditates."
     (interactive)
     (w3m-search w3m-search-default-engine
		 (completing-read  "Google search: "
				   (dynamic-completion-table
				   'google-suggest-aux))))


(defun google-suggest-aux (input)
     (with-temp-buffer
       (insert
	(shell-command-to-string
	 (format "w3m -dump_source %s"
		 (shell-quote-argument
		  (format
		   "http://www.google.com/complete/search?hl=en&js=true&qu=%s"
		   input)))))
       (read
	(replace-regexp-in-string "," ""
				  (progn
				    (goto-char (point-min))
				    (re-search-forward "\(" (point-max) t 2)
				    (backward-char 1)
				    (forward-sexp)
				    (buffer-substring-no-properties
				     (1- (match-end 0)) (point)))))))




--browse by external web browser 
(defalias 'oww  'oww3 )
(defalias 'owf  'owfox)
;; use c-c c-v
(defun oww3()
(interactive)
(setq browse-url-browser-function 'w3m-browse-url)
)
;; use c-c c-v 
(defun owfox()
(interactive)
(setq browse-url-browser-function 'browse-url-firefox)
)

================================================================
note :-   set firefox  default my brwoser
(setq browse-url-firefox-program   "C:/Program Files (x86)/Mozilla Firefox/firefox.exe")
(setq browse-url-generic-program "google-chrome")
(setq browse-url-browser-function 'browse-url-generic)
================================================================

or  only this --browse the external web browser 
(defalias 'ext 'w3m-external-view-current-url) ;; open w3m-emacs with external brwoser
======================================================================----
=========================----
eshell mode
C-c C-c   kill the process in eshell (break)
c-c c-k   break process  like ping 			
C-c C-c 	Submit the form at point.

M-x proced  view system process
f tab => filter for all process or just emacs processes
F tab => format view columns , view all data for process  

==========-
emacs-font size
c-x c--  decrease font size
c-x c-+ increase font size 
(set-default-font "Monospace-15")
or change the font to Monospace to work perfect with mysql
=========================--
;; modify or change keybinding 
;; c-S-q nevigator

;; m-x list-packages  then istall go-last
(global-set-key (kbd "C-q")   'goto-last-change) 
(global-set-key (kbd "C-S-q") 'next-buffer) 

C-u negate the command so => C-u C-q => goto-last-change-reverse command
==============================-
load .emacs 
M-x load-file ~/.emacs
=========================----
emacs openwith extesions in dired 
download openwith.el 
;;    (require 'openwith)
;;    (openwith-mode t)
;;    M-x customize-group RET openwith RET

or u can use

C-enter => open in windows
M-enter => open by windows programs

==============================-
M-x occur          to match the regular exp in the one buffer
M-x mul-occur-in   to match the regular exp in the multi  buffer so first is the file and the second is the regexp
                   so first is      .*    the second is the string regexp 
==============================-
c-x c-f           find specific  file
M-x find-dired    find file in folders
M-x locate        find in the system database
c-u M-x locate    find in the specific directory 
c-u M-x locate  emacs |  grep /home/dir

==========----final grep and find ===============--
important command for search files and inside files M-x
M-x find-grep-dired
M-x find-dired
(defalias 'g  'grep)
(defalias 'fg 'find-grep) 
(defalias 'fd 'find-dired)
(defalias 'fgd 'find-grep-dired)
use it with 8fd0    abbreviation
use it with -iname \*emacs\*.txt   -iregex ".*/e[a-zA-Z0-9].*\.pdf"   -regextype sed -iregex ".*[t]\{1,2\}"  -iname \*.txt -or -iname \*.pdf  -and -iname \*emacs\*.\*   -cmin -60  -mmin +60 -amin -20 -size +50M -size -100M

use it with 8fg1 abbreviation 
use it with find . -iname \*note\*.txt   -type f -exec egrep -nHi -e  emacs  {} +    



M-x g
M-x g grep -Hnri -e "ahmad"  "/media/D/LEARN/books/test/" space   *.txt  
// find -i ignorecase -e pattern  -n line number -H print file name  -r recursive to work with directory and sub


M-x fd
M-x find-dired then    ===>  find -iname *live\*.pdf
M-x fd  /home -iregex ".*n[iu]x.*\.pdf"


note:- find -regex will search for relative path remember it 
must begin with=>  find -regex ".*"
must begin with=>  find -regextype sed -regex ".*[a]\{2,3\}"

//find files names contains live word -iname => ignorecase


M-x fg  find-grep or grep-find 
//wow ,  mix find with grep in one command
find . -iname *sD\*.txt -type f -exec grep -nHi -e ahmad  {} +
find . -iname \*edit\*.el  -type f -exec grep -nHi -e  "c-;" {} +
next    c-x `
previos m-g p

// in windows emacs 
find . -iname *note\*.txt   -type f -exec grep -n -e  emacs  {} +

--find or grep with regex 
grep -E 
find -regex 
^a[h]+.[ae]?[^i]d$ => ahmad or ahmed ahmad ahhhhhhhhmad not ahmd 
? => 0 or 1
+ => 1 or *

M-x fgd
hi   //this word used by grep search not in find search
c-;
=====-end-of----final grep and find ===============--

==========---find and grep===================================

****** please see [final grep and find ] above

[find] search in files , [grep] search in content file 

find command example will search subdirectories also 
please see linux notes for find conmmand

=====grep=========================-
grep examples : search inside files
see linux-note.txt for grep command
============================================================-

==========--find file contents (A occur rgrep)  ==========---
buffer        M-x occur or multi-occur-in-buffer .*  regexp
dired         C-x d */t A      next regex :-   M-,

files         M-x rgrep  recursice grep  for all dir and sub
              M-x lgrep  local grep for dir 
              M-x egrep  regexp file search

List All Files of a Folder that Contain a Text Pattern "body" in html files
grep -nH -e "body" *html
===================================

occur-edit-mode: Edit Search Output in list matching lines

When using list-matching-lines (aka occur) or multi-occur, you can edit the output, so that the change will happen in the original file. In the output buffer, call occur-edit-mode 【e】. Example:

    Open a file, then call occur or multi-occur.
    Switch cursor to the output pane.
    Call occur-edit-mode 【e】.
    Edit. When done, call occur-cease-edit 【Ctrl+c Ctrl+c】.
    Your changes are made in original file(s) too. You still need to save the file(s).

Thanks to Darren ha for the tip on occur-edit-mode.

---- find and replace text in folder and subfolders 

1-   Call dired to list files in dir, or call find-dired if you need all subdirectories.
2-   Mark the files you want. You can mark by regex by typing 【% m】.
3-   Type Q to call dired-do-query-replace-regexp.
4-   Type your find regex and replace string.
5-   For each occurrence, type y to replace, n to skip. Type 【Ctrl+g】 to abort the whole operation.
6-   Type ! to replace all occurrences in current file without asking, N to skip all possible replacement for rest of the current file. (N is emacs 23 only)
7-   To do the replacement on all files without further asking, type Y. (Emacs 23 only)
8-   Call ibuffer to list all opened files.
9-   Type 【* u】 to mark all unsaved files, type S to save all marked files, type D to close them all.

==============================--
----mysql completion mysql.el and 'sql-completion.el

(require 'sql-completion)
(setq sql-interactive-mode-hook
(lambda ()
(define-key sql-interactive-mode-map "\t" 'comint-dynamic-complete)
(sql-mysql-completion-init)))

note:- i changed the mysql.el file by adding password "mypassword"
==============================--

-- start the servicemy sql 
(win)   net start mysql  
(kali)   service mysql start 
         mysql -u root -pahmadjar 

-- start the mysql command but change the path first m
mysql -u root -p -h 127.0.0.1 


-- emacs cygwin mysql 
net start mysql 
i can connect mysql client from cygwin with mysqld server from c:/program files /mysql server/ from windows by cygwin 

sql-mysql
user:- root
pass:- ahmadjar
data:- test
server:- 127.0.0.1

then open hi.sql 
M-x ssp or   sql-set-product Mysql
M-x ssb sql-set-sqli-buffer-generally *SQL*

then type sql command then precss
send pragraph  C-c C-c 
send buffer    C-c C-b
send string    C-c C-s

frameset-to-register      c-x r f a   save frame to register,if use it in dired then must use return(enter) instead of a
jump to the frameset a    c-x r j a 

---mysql data stored in the 
c:\programData\data
 not into c:\program files 

in linux 
Usually /var/lib/mysql or /var/db/mysql
==================================================---
save region to file 
M-x write-region 
but use with name c-x c-k c-i or tab 
==================================================---
use ido with yasnipeet templates
 '(yas-prompt-functions (quote (yas-ido-prompt yas-dropdown-prompt yas-completing-prompt yas-x-prompt yas-no-prompt))))
or use customize and rerange the function
==================================================--
install new packages in emacs
customize-group   packages
packages archive
ins

melpa   http://melpa.milkbox.net/packages/
marmalade http://marmalade-repo.org/packages/

in .emacs write
(package-init)

M-x list-packages 
==================================================
emacs tranparent
(set-frame-parameter (selected-frame) 'alpha 90)
==================================================-
 save history in  (`~/.emacs-history' by default).
 (savehist-mode 1)
==================================================-
lisp programming

(search-forward  "line")
(goto-line 5)

(defun hi()
 "hiiiii"
)

(hi)

(+ 3 5 5)


(mkdir "/home/ahmad5")
(beep)

(goto-line 2)
(goto-char 4)

----load the file by M-x load-file or eval-buffer or file or region
(progn  
      (find-file "/home/hi.txt")
      (with-current-buffer (window-buffer))
      (if 
          (fboundp 'eclipse-goto-offset)
          (eclipse-goto-offset 2 )
          (goto-line 3)
          (goto-char ( 1 ))
      )
      (recenter)
)

----

====================--mark=========================--
C-;      expand mark
C-:      unexpand mark

C->      mark next like this
C-c C-<  mark all like this

;;;;;;;;;;;;;;;;;;;;;;;;;;;; mark ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;


;; expand region package
(global-set-key (kbd "C-;") 'er/expand-region)

;; mc multi-cursors   M-j new line  
(global-set-key (kbd "C->") 'mc/mark-next-like-this)
(global-set-key (kbd "C-<") 'mc/skip-to-next-like-this)
(global-set-key (kbd "C-:") 'mc/unmark-next-like-this)
(global-set-key (kbd "C-c C->") 'mc/mark-all-like-this)
;; to skip next => mark next then skip it u cant select cut copy  part of line , M-j for new line
;; M-x flyspell use c-, and c-. without shift
or from tarek
mark the region  M-$ then choose  then write the number 0 or 2 or 3 

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
(defalias 'yes-or-no-p 'y-or-n-p) ; y or n is enough
(defalias 'list-buffers 'ibuffer) ; always use ibuffer
(defalias 'perl-mode 'cperl-mode) ; always use cperl-mode

(defalias '&    'replace-html-chars)
(defalias '8d 'xwe-add-definition)
(defalias '8s 'xwe-add-source)
(defalias '8w 'xwe-new-word-entry)
(defalias '\"   'replace-straight-quotes)
(defalias '\[   'remove-square-brackets)
(defalias '\\   'escape-quotes-region)
(defalias 'acm 'auto-complete-mode)
(defalias 'ahk-mode 'xahk-mode)
(defalias 'bbcode-mode 'xbbcode-mode)
(defalias 'c 'xah-cite)
(defalias 'cc 'calc)
(defalias 'cs   'customize)
(defalias 'dml 'delete-matching-lines)
(defalias 'dnml 'delete-non-matching-lines)
(defalias 'dsm 'desktop-save-mode)
(defalias 'dtw 'delete-trailing-whitespace)
(defalias 'eb 'eval-buffer)
(defalias 'ed 'eval-defun)
(defalias 'eis 'elisp-index-search)
(defalias 'elm 'emacs-lisp-mode)
(defalias 'er 'eval-region)
(defalias 'fb 'flyspell-buffer)
(defalias 'fs 'fullscreen-mode-fullscreen-toggle)
(defalias 'g 'grep)
(defalias 'fg 'find-grep)
(defalias 'fd 'find-dired)
(defalias 'fgd 'find-grep-dired)
(defalias 'glm 'global-linum-mode)
(defalias 'go    'w3m-search)
(defalias 'gwsm 'global-whitespace-mode)
(defalias 'hlr  'highlight-regexp)
(defalias 'hm 'html-mode)
(defalias 'html6-mode 'xah-html6-mode)
(defalias 'lcd 'list-colors-display)
(defalias 'lch  'list-command-history)
(defalias 'lf 'load-file)
(defalias 'lml 'list-matching-lines)
(defalias 'lo   'locate)
(defalias 'lsl-mode 'xlsl-mode)
(defalias 'math-symbol-input-mode 'xmsi-mode)
(defalias 'mb 'menu-bar-mode)
(defalias 'moc  'multi-occur-in-matching-buffers)
(defalias 'oc   'occur)
(defalias 'ocaml-mode 'tuareg-mode)
(defalias 'om 'org-mode)
(defalias 'ps  'proced)
;;(defalias 'psh 'powershell)
(defalias 'qr 'query-replace-regexp)
(defalias 'rb   'rename-buffer)
(defalias 'rf 'recentf-open-files)
(defalias 'rr 'reverse-region)
(defalias 'rs 'replace-string)
(defalias 'rvb 'revert-buffer)
(defalias 'sbc 'set-background-color)
(defalias 'sh 'shell)
(defalias 'shh 'multi-term)
(defalias 'sl 'sort-lines)
(defalias 'ssb  'sql-set-sqli-buffer-generally)
(defalias 'ssm 'shell-script-mode)
(defalias 'ssp  'sql-set-product )
(defalias 'tm 'text-mode)
(defalias 'vlm 'visual-line-mode)
(defalias 'w   'w3m)
(defalias 'wsm 'whitespace-mode)
(defalias 'z 'amazon-linkify)
(defalias 'ul 'uniq-lines)
(defalias '~    'make-backup)


;;;;========= end of aliases =========================================

;;;wow keys  http://ergoemacs.org/emacs/emacs_alias.html
================================================================================----
open recent files
M-x recentf-mode 
M-x recentf-open-files  or m-x rf
(recentf-mode 1) ; keep a list of recently opened files
;; no need for (global-set-key (kbd "M-s h o") 'recentf-open-files) ;; use M-s ho to remeber M-s hr  highligh regex
==========================================================================================-
empty key M-s .....



=======================================================-
fix .emacs
(defalias 'hlr  'highlight-regex)  must be regexp

=======================================================--
emacs arabic 

lsb_release -a
uname -a 

(setq locale-coding-system 'utf-8)
(set-terminal-coding-system 'utf-8)
(set-keyboard-coding-system 'utf-8)
(set-selection-coding-system 'utf-8)
(prefer-coding-system 'utf-8)

 http://www.persoarabic.org/answers

kali is  Debian Wheezy. 7

Monospace font
m17n-db
libm17n-dev
libotf-dev 

============================================================
    c-x c-e to eval inside minibuffer
c-u c-x c-e to eval inside buffer

function to replce regex by the result 

(defun replace-last-sexp ()
  (interactive)
  (let ((value (eval (preceding-sexp))))
    (kill-sexp -1)
    (insert (format "%s" value))))

==========================================================================================--
M-x ediff  show differance between two files 
M-x ruler mode 
========================================--
for debug stack trace for errors
(setq debug-on-error t)

=======================================================--
not done yet
  auto-display document-string from menu from lisp 
  M-x ielm to interactive Elisp
  menu options match ()
  modify colors menu-edit-text-colors faces
 (require 'w32-browser) must delete it in emacs-kali 
========================================----

;; walk slowlly 
(defun walk ()
    (interactive)
    (while (= 1 1)
    (progn
    (next-line)
    (sit-for 2))))

;; (sit-for 2)   not not not working in macro, but it is      working in elisp
;; (sleep-for 2)             working in macro, but not not not working in elisp

call function by emacs 
alt + shift + : ==>> eval-expression 
M: (sit-for 3) ;; eval elisp
(message "hi")
M-x eval-expression eval-region eval-defun 



=============================================--
--fix shell-color and best shell  by 
M-x 
or in .emacs
(ansi-color-for-comint-mode-filter)
and  multi-term package 

the terminal color not good and now show every thing so fix it . 
=============================================--
emacs in android 
http://quoderat.megginson.com/2014/02/17/how-to-install-a-usable-emacs-in-android-feb-2014/

Installing Emacs for Terminal IDE

    Install the Terminal IDE app on your Android device.

    In your Android browser, go to http://emacs.zielm.com/data/ and download the files emacs.lzma, etc.tlzma, and lisp.tlzma, then copy them to your Terminal IDE home directory.

    Launch a shell in Terminal IDE and run the following commands:

    $ unlzma emacs.lzma
    $ chmod 755 emacs

    At this point, you should already be able to run emacs by typing

    $ ./emacs

    (though it will fail because it can’t find its etc directory). If you want, just put it somewhere on your executable path, like you would in any Linux installation.

    Create a directory /sdcard/emacs/ (or make it somewhere different, if you’re willing to set environment variables to tell Emacs to look somewhere else).

    Copy the downloaded files etc.tlzma and lisp.tlzma to /sdcard/emacs/etc.tar.lzma and /sdcard/emacs/lisp.tar.tzlma

    Change to the /sdcard/emacs/ directory and run the following commands:

    $ unlzma etc.tar.lzma
    $ tar xvf etc.tar
    $ unlzma lisp.tar.lzma
    $ tar xvf lisp.tar

    Test that emacs starts up OK now (run from wherever you installed the binary):

    $ ~/emacs

    If all is well, you can optionally delete the tar files to save space:

    $ rm /sdcard/emacs/etc.tar /sdcard/emacs/lisp.tar

    Enjoy Emacs in Android! You might consider doing an C-u 0 M-x byte-recompile-directory on /sdcard/emacs/lisp/ (and any other lisp directories) to make sure you’re up to date.


=============================================-
emacs in android remap 

I did a few things. I'm not sure how much of this is necessary but it worked for me:
1. Enable the Terminal IDE keyboard in Android's settings
2. Enable the keyboard remapping in Options -> External Keyboard Mappings -> Keyboard Mappings
3. Run the shell from the "Terminal IDE" button
4. Hit Android's Menu button
5. Select "Toggle Options" -> Toggle Key Logger
6. Don't forget to toggle the key logger off later!
7. Follow the directions and run "tail -f ~/.keylog"
8. Hit a key a few times -- try something bening like right ctrl
9. You should see a whole number repeat
10. Toggle that key logger off
11. Back out to the first menu
12. Select Options -> External Keyboard Mappings
13. Find the Left Alt field and enter the whole number
14. You should be able to return to the terminal (without restarting) and it should work
=============================================--
--ps as tree
pstree 
=============================================-
--info about file
sta filte.txt
=============================================
Output the last part of files.

tail -2 lorem.txt
========================================----

add this to .eamacs 

;; c-- c-+ for font size
(global-set-key [C-kp-add] 'text-scale-increase)
(global-set-key [C-kp-subtract] 'text-scale-decrease)

----delete duplicate lines ==========----

(defun uniq-lines (beg end)
  "Unique lines in region.
Called from a program, there are two arguments:
BEG and END (region to sort)."
  (interactive "r")
  (save-excursion
    (save-restriction
      (narrow-to-region beg end)
      (goto-char (point-min))
      (while (not (eobp))
        (kill-line 1)
        (yank)
        (let ((next-line (point)))
          (while
              (re-search-forward
               (format "^%s" (regexp-quote (car kill-ring))) nil t)
            (replace-match "" nil nil))
          (goto-char next-line))))))

n---
put it in .emacs then
select area 
M-x uniq-lines
install multi-term package for shell
M-x ssh orM-x mult-term 
========================================
-- compare 2 files buffer and files
m-x diff-buffer-with-file

--not done yet 
and read this page 
http://www.masteringemacs.org/articles/2013/03/11/whats-new-emacs-24-3/
install multi-term package for shell

--webkit for web browser for emacs better than w3m
https://github.com/linuxdeepin/deepin-emacs

--search procject and files faster than ...
list-packages  esk 

=========================---
--wirte new function in elisp then c-x-e 
//http://www.youtube.com/watch?v=B6jfrrwR10k

(defun my/hii (times)
(interactive "p")
(save-excursion
(move-beginning-of-line 1)
(newline times)))  ---> c-x-e

(global-set-key (kbd "C-S-o")  'my/hii) --> c-x-e


hi ahmad ali
what is that ? 

c-5 c-s-o

==============================----
full screen 
(fullscreen-mode-fullscreen)
(fullscreen-mode-fullscreen-toggle) c-x-e

m-x fs //full-screen
m-x mb // menu-bar
==============================----
show date time system-load 
 '(display-time-day-and-date t)
 '(display-time-default-load-average 1)
 '(display-time-mode t)

M-x customize-group  display-time then select 5 minute for system-load
===================================-
find dired 
z =>compress file /uncompress

--
  ==========---
	       =====---- c-m-o
			----

===============-edge and negate the image===============----
on dired press ! only without c-! to run the shell command to file
select the image and press !
display -edge 8 -negate 
M-x eimp-mode  // list-packages
select image the press N for negate
or
M-x eimp-...... to image processing effict
============================================================
----insert images intot text 
M-x iimage-mode
(insert-image (create-image "/tmp/test.png")) c-x-e
M-x eimp-mode 
select the image then 
N   = negate
+   = zoom in but but but M-x then M-x image-transform-fit-width  M-x image-transform-scale 1.5 is the best zoom in better thant + -
-   = zoom out
<   =rotate
F < =flip

[zoom in, zoom out for image]
M-x image-transform-scale 1.5  ;; scale image 1.5 zoom in, 0.5 zoom-out
M-x then M-x image-transform-fit-width  ;; for fit image as width 
M-x image-transform-reset ;; small size as original 
the best zoom in better thant + -


eimp image the best solution for zoom in and zoom out in image is 
zoom in but but but 
M-x then M-x image-transform-fit-width  then 
M-x image-transform-scale 1.5 is 
the best zoom in better thant + -


--or  use org mode [[./folde/file.jpg]]

in windows must install imageMagick to work with eimp-mode from here
http://www.imagemagick.org/script/binary-releases.php
then put in inside the c:/emacs/gnuwin32/bin/

     (eimp-mode 1)
     (autoload 'eimp-mode "eimp" "Emacs Image Manipulation Package." t)
     (add-hook 'image-mode-hook 'eimp-mode)

============================================================-
-- enhance shell command
pcmpl-args	      installed  Enhanced shell command completion

============================================================---

M-x list-packages  package list installed  press U to update
  ant                20131227.... installed             helpers for compiling with ant
  apropos-fn+var     20140506.608 installed             Apropos for functions and variables
  apt-utils          20140713.... installed             Emacs interface to APT (Debian package management)
  apt-utils-ido      20130527.... installed             Ido commands for apt-utils
  autofit-frame      20140514.... installed             Automatically resize one-window frames to fit
  bookmark+          20141217.... installed             Bookmark+: extensions to standard library `bookmark.el'.
  chm-view           20110616.... installed             View CHM file.
  cmds-menu          20131226.... installed             `Recent Commands' submenu for the menu-bar `Tools' menu.
  dash               20141220.... installed             A modern list library for Emacs
  deferred           20141208.... installed             Simple asynchronous functions for emacs lisp
  dired+             20141025.... installed             Extensions to Dired.
  dired-avfs         20141203.732 installed             AVFS support for dired
  dired-details      20130824.... installed             make file details hide-able in dired
  dired-details+     20131226.... installed             Enhancements to library `dired-details+.el'.
  dired-dups         20130527.... installed             Find duplicate files and display them in a dired buffer
  dired-efap         20140122.856 installed             Edit Filename At Point in a dired buffer
  dired-filter       20141221.604 installed             Ibuffer-like filtering for dired
  dired-hacks-utils  20140711.... installed             Utilities and helpers for dired-hacks collection
  dired-imenu        20140109.810 installed             imenu binding for dired mode
  dired-k            20141110.... installed             highlight dired buffer by file size, modified time, git status
  dired-narrow       20140711.... installed             Live-narrowing of search results for dired
  dired-open         20140319.508 installed             Open files from dired using using custom actions
  dired-rainbow      20141214.543 installed             Extended file highlighting according to its type
  dired-ranger       20141012.927 installed             Implementation of useful ranger features for dired
  dired-single       20130824.... installed             Reuse the current dired buffer to visit another directory
  dired-sort         20090209.438 installed             Sort files in dired.
  dired-sort-menu    20130824.... installed             provide menu/dialogue for dired sort options
  dired-sort-menu+   20131226.... installed             Extensions to `dired-sort-menu.el'
  dired-subtree      20141221.... installed             Insert subdirectories in a tree-like fashion
  dired-toggle       20140907.... installed             provide a simple way to toggle dired buffer for current directory
  dired-toggle-sudo  20131022.626 installed             Browse directory with sudo privileges.
  direx              20141214.... installed             Simple Directory Explorer
  direx-grep         20140515.806 installed             Grep node of direx.el using incremental search like anything.el/helm.el
  dirtree            20140129.832 installed             Directory tree views
  eimp               20140630.... installed             Emacs Image Manipulation Package
  elmacro            20141109.724 installed             Convert keyboard macros to elisp
  emms               20141202.... installed             The Emacs Multimedia System
  emms-info-media... 20131223.500 installed             Info-method for EMMS using medianfo
  emms-mark-ext      20130528.... installed             Extra functions for emms-mark-mode and emms-tag-edit-mode
  emms-soundcloud    20131221.345 installed             EMMS source for Soundcloud audio sharing platform
  epl                20140823.609 installed             Emacs Package Library
  expand-region      20141223.... installed             Increase selected region by semantic units.
  fit-frame          20131226.... installed             Resize a frame.  In particular, fit a frame to its buffers.
  frame-fns          20131226.... installed             Non-interactive frame and window functions.
  fullscreen-mode    20130524.956 installed             fullscreen window support for Emacs
  google-maps        20130412.230 installed             Access Google Maps from Emacs
  google-translate   20141110.... installed             Emacs interface to Google Translate.
  goto-chg           20131228.... installed             goto last change
  help-fns+          20141129.... installed             Extensions to `help-fns.el'.
  info+              20140504.... installed             Extensions to `info.el'.
  mark-multiple      20121118.754 installed             Sorta lets you mark several regions at once.
  menu-bar+          20141210.... installed             Extensions to `menu-bar.el'.
  misc-cmds          20141129.513 installed             Miscellaneous commands (interactive functions).
  misc-fns           20141014.... installed             Miscellaneous non-interactive functions.
  multi-term         20141203.... installed             Managing multiple terminal buffers in Emacs.
  multiple-cursors   20141226.... installed             Multiple cursors for Emacs.
  naked              20131227.142 installed             Provide for naked key descriptions: no angle brackets.
  org                20141222     installed             Outline-based notes management and organizer
  pkg-info           20140610.630 installed             Information about packages
  runner             20140106.758 installed             Improved "open with" suggestions for dired
  s                  20140910.334 installed             The long lost Emacs string manipulation library.
  second-sel         20131227.151 installed             Secondary selection commands
  sos                20141214.... installed             StackOverflow Search
  soundklaus         20141225.954 installed             Play SoundCloud music in Emacs via EMMS
  strings            20131227.158 installed             Miscellaneous string functions.
  subr+              20140714.... installed             Extensions to standard library `subr.el'.
  thingatpt+         20140822.... installed             Extensions to `thingatpt.el'.
  tree-mode          20121207.... installed             A mode to manage tree widgets
  vlf                20141216.... installed             View Large Files
  w3m                20141125.... installed             an Emacs interface to w3m
  wid-edit+          20131227.210 installed             Extensions to standard library `wid-edit.el'.
  widget-mvc         20141223.... installed             MVC framework for the emacs widgets
  windata            20080412.... installed             convert window configuration to list

==============================================================
===============--
in dired press i to view subdirectory in same page
===============-
--new line for qr
just M-j to new line 
or
query replace M-x qr 
c-q c-j  
u need first to stop c-q from .emacs
=====-
c-x-q  toggle-read only or writeable for the buffer such as w3m buffers
=====--
(browse-url-firefox "http://google.com/")
(browse-url "http://google.com/")
=====--
view keys for last 100 
c-h l
==========--
convert any text to html tag by htmlize package
text to html by Mx htmlize-
==========-
amazing  emacs mini tutorial 
http://tuhdo.github.io/emacs-tutor.html
==========--
open one buffer in dired by select directory then press a
make this the default by put this in the .emacs
(put 'dired-find-alternate-file 'disabled nil)
==========----
put it in .emacs file to make toogle  truncate lines is true
(setq-default truncate-lines t)
===============
(count-lines-page) // count line page 
==========----
=====--how to open more than one shell in emacs 
c-u  M-x shell 
or 
M-x rb rename-buffer name 
or put this in .emacs 

;; this will make pc hang so forget it
(defadvice shell (around always-new-shell)
  "Always start a new shell."
  (let ((buffer (generate-new-buffer-name "*shell*"))) ad-do-it))
(ad-activate 'shell)
=========================--	
emacs --daemon

You are likely to start the daemon at startup time and to connect a window to the daemon. Besides, it is possible to connect both graphical and console clients to the daemon at the same time and make the GUI to start quickly. 
=========================---
;;;;;;;;;M-s-x to solve it use one of these  ;;;;;;;;;;;;;;;;;;;;;;;
;;(setq x-alt-keysym 'meta)
(setq x-super-keysym 'meta)
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
--doc-view -- dont use it, use pdf-view-mode because if is without images and it is full-featured
change pdf size by
c-x-q remove read only or  c-x c-q enable/disable 
M-x doc-view-scale-adjust 
=  bigger
-  make it smaller

high resolution of doc-view  better than 100 => the default resolution is 100 
M-x cs => doc-view => resolution 200 then press H W P
H means M-x doc-view-fit to high
W means M-x doc-view-fit to width  
P means M-x doc-view-fit to page 

press w only to resize pdf files 

stop doc-view images from 
change pdf view background and foreground colors by
M-x list-packages pdf tools
M-x pdf-tools-install to install it
M-x pdf-tools-install   i change it to M-x pdf
M-x pdf only
M-x doc-view-mode
M-x pdf-view-midnight-minor-mode i change it to M-x pdfp
M-x cs pdf-view  => then midnight colors
black  //foreground
gray   // bg

// no more image in pdf i stop it 
dov-view convert pdf file to image, all images here   /tmp/docview0 .
images converted with selected resolution .wow
or
you can change the path for convertin files => customize doc-view
so i change it to /home/doc-view
;;;;;;;; doc-view mode can display many docs pdf postscript microsoft office 
;;("\\.pdf\\'" "evince" (file))
(add-hook 'doc-view-mode-hook
  (lambda ()
    (linum-mode -1)
  ))
;;(doc-view-mode 1)


use pdf-view mode it is better than doc-view
== to install it by
M-x list-packages
pdf-tools
M-x pdf-tools-install

if you face this problem
  sudo apt-get install gtklp
remove the pdf-tools from alpa then reinstall it by M-x list-packages


== to run every time by 
M-x pdf-tools-install

https://github.com/politza/pdf-tools
http://www.dailymotion.com/video/x2bc1is_pdf-tools-tourdeforce_tech?forcedQuality%3Dhd720
pdf-doc stop images from M-x cs
pdf-tools install
pdf-isearch then C-s
pdf-annot-maner-mode
mark by mouse then c-c c-a m then click it then comment then c-c c-c
change color by c-c c-r m
view all marks C-c c-a l then space 
or or or
M-x pdf-misc-menu-bar-minor-mode


=============================================---
=============================================--
;;;;;M-x p  to play any sound video file
;;;or  emms-play-file ;;;;; put first aptitude install mplayer and  it will be directly  /usr/bin 
;;;;; paly many files mp3 mp4 wav .... 


(setq exec-path (append exec-path '("/usr/bin/")))
(add-to-list 'load-path "~/.emacs.d/elpa/emms-20140820.1251") ;; always check the number may be changed 201408
 (require 'emms-setup)
 (emms-all)
 (emms-default-players)

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
opocity trasnperancy kali by dconf 
org-> gnome -> metacity 
then in emacs 
 (set-frame-parameter (selected-frame) 'alpha '(30 50))
 (add-to-list 'default-frame-alist '(alpha 29 50))



;; M-x tran      
;; but first in kali  dconf org->gnome->metacity
(defun my-transparency-ring (arg)
  (interactive "P")
  (let* ((ring '(100 50 30 0))
         (current (frame-parameter nil 'alpha))
         (last (car (last ring)))
         (next (if arg
                   (if (equal current (car ring)) last (car ring))
                 (or (cadr (member current ring)) (car ring)))))
    (set-frame-parameter nil 'alpha next)))

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
--emacs as script better than shell script

http://ergoemacs.org/emacs/elisp_idioms_batch.html
http://ergoemacs.org/emacs/elisp.html

#!/usr/bin/env emacs --script

#!/bin/sh
exec /usr/bin/emacs --no-site-file "$@"

you can convert macro to elsip by elmacro
# M-x elmacro-mode
# make macro and save it 
# then elmacro-show-last-macro

=====---emacs24.4====================--
build emacs24.4

aptitude install    autoconf		 
aptitude install   automake		 
aptitude install   autotools-dev	 
aptitude install   bsd-mailx		 
aptitude install   diffstat		 
aptitude install   imagemagick		 
aptitude install   libasound2-dev	 
aptitude install   libdatrie-dev	 
aptitude install   libdbus-1-dev	 
aptitude install   libgconf2-dev	 
aptitude install   libgpm-dev		 
aptitude install   libgtk2.0-dev	 
aptitude install   liblockfile-dev	 
aptitude install   liblqr-1-0		 
aptitude install   libm17n-dev		 
aptitude install   libmagickcore5	 
aptitude install   libmagickwand5	 
aptitude install   libncurses5-dev	 
aptitude install   libotf-dev		 
aptitude install   librsvg2-dev		 
aptitude install   libthai-dev		 
aptitude install   libtinfo-dev		 
aptitude install   libxml2-dev		 
aptitude install   postfix		 
aptitude install   quilt		 
aptitude install   sharutils		 
aptitude install   texinfo		 
aptitude install   xaw3dg		 
aptitude install   xaw3dg-dev		 
aptitude install   xutils-dev 


aptitude install above libarary
tar xvfz emacs-24.4.tar.gz 
   cd emacs-24.4/
   ls
   ./autogen.sh 
   ./configure 
   make bootstrap
   make 
   make install

http://ergoemacs.org/emacs/building_emacs_from_git_repository.html

emacs24.4 features
http://ergoemacs.org/emacs/emacs24.4_features.html

=========================--elisp using grep by 
http://ergoemacs.org/emacs/elisp_grep_script.html

---read all this please for emacs tutorial 
http://www.gnu.org/software/emacs/manual/html_mono/emacs.html
http://ergoemacs.org/emacs/
amazing  emacs mini tutorial 
http://tuhdo.github.io/emacs-tutor.html

================== Notes from ergo emacs ================================

extract usefull dcoument from ergo :-

c-h n    what is new
c-h m    inline doc fro the current mode
c-h a    show all the whose name contains the string 
c-h k    show the command name for the key
c-h f    show the key of the commandx
c-x c-b  ibuffer show with process with paths
C M      the old keyboard ctrl beside space and the Meta is far 
f1 M-k => keymap for mode

for linux :- alt/win/behavior -->  C is mapped to alt, alt is mapped to win
            ctrl key position -->  Ralt as R ctrl
	    	     	      -->  Rctrl as Ralt
DejaVu Sans Mono is the best font 
select a region, then type Alt+| wc -w 

======= parenthesis pair
eval-defun    Ctrl+Alt+x
(electric-pair-mode 1)  ;; pair () [] {} add to .emacs
C-M-n  Move forward over a parenthetical group                                                  
C-M-p  Move backward over a parenthetical group 

website :- http://ergoemacs.org/emacs/emacs.html
Open File in External App
ibuffer   http://ergoemacs.org/emacs/effective_emacs.html
wow keys  http://ergoemacs.org/emacs/emacs_alias.html
last command   http://ergoemacs.org/emacs/emacs_repeat_command.html
() pairs       http://ergoemacs.org/emacs/emacs_insert_brackets_by_pair.html
path           http://ergoemacs.org/emacs/emacs_env_var_paths.html

--- write html in emacs 
http://ergoemacs.org/emacs/emacs_html.html

--set the correct path in emacs inside windows not linux
http://ergoemacs.org/emacs/emacs_env_var_paths.html

--shell abbrev wow wow wow , please convert all kalishortcut to this and load it 
http://ergoemacs.org/misc/emacs_abbrev_shell_elisp.html

but look it list of ibuffer in the this webpage , this is the solution
http://ergoemacs.org/emacs/emacs_buffer_switching.html

;; set ido-separator for minibuffer is \n instead of |
(setq ido-separator "\n")
;; display any item that contains the chars you typed
(setq ido-enable-flex-matching t)


==========>>>> these notes from ergobook1.pdf ==========>>>> 

==0==
c-x r m => mark
c-x r b => show mark 
c-j     => c-x-e eval elsip

==7==
==8==
==10== 
==13== 
(message "hi")
(expt 2 3)
(sqrt 100)

==18=== 
==29=== 
==136== 
==137== 
==139== 
==== 
==== 
==== 
==== 
==== 
========= emacs help ============
obwk adB
c-h w :- yank => c-y
c-h k :- c-y  => yank
c-h o :- options
c-h b :- bindings
C-h a :- apropos-command
C-h d :- apropos-documentation
c-h m :- describe current mode
c-h l :- last 100 command
C-h l :- view-lossage
c-h P :- discribe package
c-h r :- emacs doc
C-h B :- describe-buffer
C-h e :- view-echo-area-messages
c-h c :- describe-command
C-h f :- describe-function
C-h v :- describe-variable
===================================
 

========= emacs help ============
obwk adB
c-h w :- yank => c-y
c-h k :- c-y  => yank
c-h o :- options
c-h b :- bindings
C-h a :- apropos-command
C-h d :- apropos-documentation
c-h m :- describe current mode
c-h l :- last 100 command
C-h l :- view-lossage
c-h P :- discribe package
c-h r :- emacs doc
C-h B :- describe-buffer
C-h e :- view-echo-area-messages
c-h c :- describe-command
C-h f :- describe-function
C-h v :- describe-variable
===================================

====== emacs 24.4=====
superword-mode => jumping over what_is_your_name is one word
(global-subword-mode 1) => jumping over camelCase in one word
M-x global-subword-mode => jumping over camelCase in one word
=======================
==diff between two files
grep -F -x -v -f aa.txt bb.txt 
diff <(sort file1) <(sort file2)
=============f==========

=====================================
best themes for emacs: -
espresso -- Espresso Tutti Colori. (wow blue)
monochrome -- Gray on black for your focused hacking sessions.(black)

firebelly -- (no documentation available)
phoenix-dark-mono -- Phoenix Dark Mono color theme

soft-charcoal
soft-charcoal
soft-charcoal

ritchie
django 
slime 

junio

black are :-
reverse
grandshell
sea-before-storm 
wheatgrass
monochrome -- Gray on black for your focused hacking sessions.(black)
=====================================

backage list install these packages

 '(isearch ((t (:background "yellow" :foreground "red"))))
 '(isearch-lazy-highlight-face ((t (:background "dark green" :foreground "white"))) t)
 '(lazy-highlight ((t (:background "dark green" :foreground "white"))))

- elmacro convert keyboard macros to elisp
 # first M-x elmacro-mode
 # make the macro and save it 
 # then elmacro-show-last-macro

- apt-utils # for debian
- google-translate
- google-maps
- sos  # for stackoverflow search press A to show answer , and install two sos
- ant
- vlf
- all dired
- plantUML
+ pig-mode  //for big files like vlf
+ pig-snippets
+ seethru Easily change Emacs' transparency
+ setup-cygwin Set up Emacs for using Cygwin

- customize  font color change all colors to black or blue or red4  or white
- shell script with permission located in /usr/local/bin/ahmada  and com.anirudh.emacseclipse_1.2.0 with any eclipse 
and i put in the text field in elcipse just ==>  ahmada
http://comments.anirudhsasikumar.net/comments/2009.05.01.comments.html

#!/bin/sh
narg=`echo $* | sed -e 's.\\\\..g' | sed -e "s.-e.."`
/usr/local/bin/emacsclient -e "$narg"

================================================================
resize buffer by
c-x ^ => shrink horizontally
c-x + => default
c-x - =>  

c-x } => shrink vertically
c-u 8 c-x ^

================================================================
;; chm file open it by
aptitude install archmage

join extension chm by chm-view-dired 

;; use chm-view-file or
;; use chm-view-dired 
;; 
============================== run  youtube in emacs ============================


apt-get install smplayer
test it by copying url from youtube and run it
smplayer url
finish
   (concat "smplayer -fullscreen " url " &")))

;;;;;;;;;;;; M-x my-ytt => open youtube 
;;;;;;;;;;;; M-x my-yt or f9 to open youtube in w3m 

(defun my-ytt (url)  
  (interactive "sURL: ")  
  (shell-command
   (concat "youtube-dl -f 5  -o - " url " | vlc -f - &")))

(defun my-yt ()  
   (interactive)  
         (my-ytt
	  (w3m-print-this-url (point))))

(global-set-key (kbd "<f9> y") 'yt)

;;;;;;;;;;;;;;;;; or or or or or macro macro macro

(fset 'yout
   (lambda (&optional arg) "Keyboard macro." (interactive "p") (kmacro-exec-ring-item (quote ([117 134217761 121 111 117 tab 45 102 32 kp-5 32 45 111 32 45 32 25 32 124 32 118 108 99 32 45 102 32 kp-subtract 32 38 return] 0 "%d")) arg)))


====================================================================


================== Notes from ergo emacs book ================================

=========== page 2 Elisp =================
; commanet means semicolon
; set variable foo=bar
(setq foo "bar")

; call function foo-bar with two arguments flim and flam
(foo-bar "flim" "flam")
(+ 7 3)
(setq ab "hi \"can\" do this")
(?a) => 97 ascii char
(#b10010110)  binary =  150 decimal
(#o377)  octal =  255 decimal
(#o10)  octal =  8 decimal
(#xab) hex  =  171 decimal
(#x1000)

(+ 5 2 3 -2 -5 -3 -7 -8 9 8 7) ==> 9 
(logxor 5 7 7 1 5  6 1) ;; xor 5 5 ==> 0
(logxor 5 7 7 1 5  6 1) ;; xor 

(t) = true
(nil) = false
'(1 2 3 ) => list 
(quote (1 2 3 )) = list 
'(1 (+ 1 1) 3) = (1 2 3 ) list


(format "%d" #b10)
(format "%x" 10)

(string-to-number "11" 2)

(defun int-to-binary-string (i)
  "convert an integer into it's binary representation in string format"
  (let ((res ""))
    (while (not (= i 0))
      (setq res (concat (if (= 1 (logand i 1)) "1" "0") res))
      (setq i (lsh i -1)))
    (if (string= res "")
        (setq res "0"))
    res))

(int-to-binary-string  10)

'((apple . "red")
(banana . "yellow")
(orange . "orange"))

(= 2 (+ 1 1 )) t = true
(/= 2 3) t = not numerically equal 
(eq 'foo 2) ; like == in java
(equal '(1 2 (3 4))    (list 1 2 (list 3 (* 2 2 )))) ;true
(concat "hi " " Ahmed" " Ali")

;; string equals
(string= "foo" "baz") ; nil
(string= "foo" "foo") ; t
(((substring "foobar" 0 3) ;) foo)  ;; c-m-p c-m-n movement around parenthesis pairs
(upcase "foobar")
(- 6 2 3) = 1
(/ 10 3) = 3
(/ 10 3.0) = 3.33333
(#b101) = 5
(% 10 2) = 0 
(lsh 1 5)  1<<5 = 32

01 = 1
5 celles
(#b100000) = 32


(ash -32 -4)   -32 >> -4   = -2
(lsh 32  -4)    32 >>> -4  = 2

(incf x 6 ) =>  x+6
(decf x 5 ) =>  x-5
(if t 3 4)  =>   (true) ? 3 : 4  
(if (= 1 1) 3 4)   =>   (1 == 1) ? 3 : 4

(and t t nil)  => (true && true && false)
(or  t t nil)  => (true || true || false)

(lognot #b10) => ~(2) => -3
(logxor 5 3 ) =>  xor 6

(if (>= 3 2)
  (message "Hi Ahmed"))


(if (today-is-friday)
(message "yes, friday") ;; true
(message "no, not friday")) ;; else

;; more than one expression (statements) use progn

(if (zerop )
(progn
(message "hi")
(message "Ahmed")
(message "Ali")
))

;; while 
see page 11 



;; while

see page 13 for for-loop
# javascript

var result = [];
for (var i=10 , j=0 ; j<=10 ; i--, j+=2 ){
result.push(i+j);
}

;;elsip
(loop with result = '()
for i downfrom 10
for j from 0 by 2
while (< j 10)
do
(push (+ i j) result)
finally
return (nreverse result))

the result is  ===> (10 11 12 13 14)


(loop for i in '(1 2 3 4 5 6)
 collect (* i i ))

;;;; the result is (1 4 9 16 25 36)
 
===========page 15=================
;; function

(defun hello ()
"print hello to the minibuffer "
(message "hello"))

;;;;;;;;;;;;;;;;;;;; to evaluate fun c-x-e then call function c-x-e 
(defun foox () 
(let ((x 6)))   ; define a local (stack ) variable x initialized to 6
(barx)          ; call barx
(x)              ; return x

(defun barx ()
(setq x 7)
)
;;;cal function foox 
(foox)  => 7   ;; to evaluate fun c-x-e then call function c-x-e
(barx)  => 7   ;; to evaluate fun c-x-e then call function c-x-e


== 0 ==  using book mark 
c-x r m    set bookmark 
c-x r b    jump  to bookmark
c-x r l    list all bookmarks
M-x bookmark-save  or c-x p s
M-x bookmark-delete or c-x p d


== 10 == tips on long term emacs produvtivity
6-master find and emacs regex
M-x rx = replace-regexp
M-x rs = replace-string
M-x qr = query-replace-regexp
  
== 11  == emacs lisp

(forward-line -1) ;prev line
(forward-line  1) ;next line


; get current line as string
(let (p1 p2 myline)
(setq p1 (line-beginning-position))
(setq p2 (line-end-position))
(setq myline (buffer-substring-no-properties p1 p2))
)


== 12 13  ==  elsip power

(if (integerp 2.0) "intger" "not integer")
(if (floatp 2.0) "float" "not float")
(= 3 3 ) ; equal
(/= 3 3 ) ;not equal
(not (= 3 3)) ;not equal 
(equal 3 3 )
(equal '(3 4 5) '(3 4 5 )) ;true
(string-equal "hi" "hi") ; 
(progn (message "hi") (message "ali"))


(setq  c 4)
(while (< c 23)  ; while x is positive
(message "hhhh")
(setq c (+ c 1))
)

;; define function then M-x lf  then call it by (myFunx)c-x-e
(defun myFunx ()
"test 1"
(message "hi ahmad"))

;; M-x lf 
(myFunx)


== 14  15  16 processing html   ==
== 17 emacs lisp throw catch exit a loop  ==
== 18 browse-url ==
sending url to firefox brouwser

== 20 21  change brackets hyphen underscore  ==
== 22 check if a function variable is loaded ==
(fboundp 'yt) ;; truely loaded  youtube function

== 24 open last closed buffer ==
i think just open M-x rf recent files
and the  best is the mark  c-x r b

== 25 getting command line arguments  ==
;; and put this in the myarg.el

(message "argv 0: %s" (elt argv 0)) ;; %s is string 
(message "argv 1: %s" (elt argv 1)) 
(message "argv 2: %s" (elt argv 2)) 
(message "argv 3: %s" (elt argv 3)) 

root@zinko:/# emacs --script hii.el a1 b2 c3 d4 
argv 0: a1
argv 1: b2
argv 2: c3
argv 3: d4

== 26 function work on string or region  ==
== 28 comment handling in major mode    ==

== 29 common lisp functions ==
(point)             ;;current cusrsor position
(region-beginning)  ;; begin of region
(region-end)        ;; end of region
(point-max)         ;; end of buffer
(point-min)         ;; begin of buffer
(goto-char 392)     ;; go to char 392
(forward-char 3)    ;; forward 3 char
(backward-char 5)   ;; bachward 5char
(skip-chars-forward  "\n\t")   ;; move cursor to the first char that is not a newline or tab
(skip-chars-backward "\n\t")   ;; move cursor to the first char that is not a newline or tab
(search-forward  "abc")        ;; search forward to the abc string
(search-backward "abc")        ;; search backward to the abc string 
(search-forward-regexp "dd")   ;; 
(search-backward-regexp "dd")   ;;
(beginning-of-line)
(end-of-line)

(insert "i love u ")
(insert-file-contents "/home/hi.txt")
(delete-char 9)  ;; delete 9 char starting from pos
(delete-region fromPos toPos)
(erase-buffer)      ;; delete whole buffer 
(length "abc")
(concat "hi" " ahmad")
(find-file "/home/file.txt")

and more of functions

== 30 common lisp packages in emacs lisp  ==
== 31 delete trailing whitespace on save and compact empty lines   ==
== 33 converting dec & hex number  ==
M-x calc  10
type d6  for hex
type d0  for deciman 
type d8  for octal
type d2  for binary

== 36 single key to copy/paste from register   ==
it is important subject
== 37 count lines words chars  ==
== 38 css compressor  ==
== 40 cut/copy/paste from kill ring   ==
== 41 insert date/time   ==
== 63 write grep   ==
== 65 hash table   ==
== 70 shell command ==
(shell-command "cp /hi.txt sos.txt")

(shell-command "ls")
(shell-command-to-string "ls")  //get output
(start-process "ls")           // dont wait for finish , use only & for that 
(start-process-shell-command "ls") // same and start-process

== 72 elisp user input   ==
(defun getx (x)
"enter your name "
(interactive "sEnter yourname : ")
(message "Name : %s" x))
// c-x-e then M-x getx because you write the interactive  sEnter = string ,,, nEnte = number
//or 
(getx "ahmad")  //c-x-e

(defun person (x y)
"enter your name and  age"
(interactive "sEnter your name \nnEnter your age ")
(message "name is :%s, age is : %d" x y ))
// c-x-e then M-x person
//or or or 
(person "ahmad" 33)  // c-x-e

== 82     ==
delete-matching-lines
delete-non-matching-lines
delete-duplicate-lines
sort-lines
sort-numeric-fields

reverse-region

c-u c-u => 8

== 134 emacs 23.2 features   ==
CEDET IDE
javascript mode
nxml for mxl ===>>> M-x nxml
M+! => run command
M+& => run command in background
[old]
dired auto refresh by t  ==> dired-auto-revert-buffer

[new]
dired auto refresh by
(setq global-auto-revert-non-file-buffers t) (global-auto-revert-mode)
M-x global-auto-revert-mode disabled


== 135 emacs nxml-mode for xml   ==
== 136 new features in emacs 23  ==
wildcard in keyword completion
make whitespace visible by M-x  whitespace-mode
open multi files by c-x-d then *.jpg only
interface GNU privacy Guard by M-x epa-tab
:e encrypt
:d decrypt
:s	Sign marked or selected
:v	Signs the current buffer

[important] deleting files to trash folder 

[important] quick note taking by M-x remember or r then   C-c C-c , save to ~/.notes
but i change it to /home/importantDIR/EmacsBookmark/notes
by  '(remember-data-file "/home/importantDIR/EmacsBookmark/notes")
or customize  remember data file

[important] nxml mode for xml files

== 137 features in emacs 24.4  ==

[important] M-x superword-mode  ==> juming over hi_ahmad_ali
[important] isearch-forward-symbol-at-point
[important] C-x space => mark rectangle
[important] M-x just-one-space
[important] visual-order-cursor-movement t => move to right and move to left
[important] desktop-save-mode
[important] F10 invoke menu
[important] M-x count-
[important] C-x r N => insert vertical numbers
[important] in dired press F to open marked files
[important] C-s C-s => search last search and C-s C-w => search the word under cursor  
[important] copy to register => C-x rs , paste => C-x ri
[important] FTP page 421 , dired by type C for copy then /ftp:/jane@example.org/public_html also sftp or ssh
[important] M-x list-colors-display
[important] change file ending between win/unix/mac page 497 by M-x set-buffer-file-coding-system or C-x enter f

==139 new features in emacs 24.1   ==
[important] M-x occur-edit-mode => edit search output intlist matching lines
[important] unicode 6 support C-x 8 enter =>

== 140    abbrev mode ==


[important] define your abbrev then press space
(define-abbrev-table 'global-abbrev-table '(
("8go" "Google")
("8win" "windows")
("8url" "http://.com")
("8d" "\\([0-9]+?\\)")
("8str" "\\([^\"]+?\\)\"")
("find . -type f -size 0 -exe ls {} ';'	" "find . -type f -size 0 -exe ls {} ';'")
))
;; stop asking to save new abbrev
(setq save-abbrevs nil)
;; set abbrev mode globally
(setq-default abbrev-mode t)
(provide 'my_abbrev)
;; save at file then load it my_abbrev.el 

(add-to-list 'load-path
	     "/home/importantDIR/EmacsElisp")
 	(require 'my_abbrev) 

== 142 emacs advanced tips    ==

C-s C-s for research same word
[important] search text C-/ better than C-g  for cancel
[important] M-x global-subword-mode => move between CamelCaseWord
[important] emacs customization :- stop backup file( ~file ) and ( #auto-save#  )
 
==145 align text and sort   ==
[important] see the best align numbers and string by reading the solution
[important] sort-pages , sort-paragraphs, sort-fields, sort-.... many types of sorts

==146 bold underline text    ==
must use  M-x enriched-mode => to save the file with bold italic all colors

M-o d // default
M-o b // bold
M-o i // italic
M-o u // underline

M-o o other

ahmed Ali
	 
== 147 associate a file with a major mode ==
[important] associate by extension mode

==169 emacs dired    ==
F  => open multi files
*. => mark extension files

==177 set env PATH without set it in OS    ==
== 186 grep findx  ==
== 193 emacs html tips ==
use http://web-mode.org for web it is from melpa also.

== 276 emacs show key for teaching ====
[important] M-x list-packages => melpa => mwe-log-commands
mwe:log-keyboard-commands
mwe:open-command-log-buffer

== 277 how to always have spell checker on ==

(defun trun-spell-checking-on ()
"turn speck-mode or flyspell-mode on."
;;(speck-mode 1)
(flyspell-mode 1))
(add-hook 'text-mode-hook 'trun-spell-checking-on)

=== 280 supword-mode and superword-mode to jump over CamelCase and long_word_hi  ===

=== 283 creat tabel =======
M-x table insert

+-----+-----+-----+
|hi   |so   |what |
+-----+-----+-----+
|1    |     |     |
+-----+-----+-----+
|5    |     |     |
+-----+-----+-----+

M-x table-generate-source => html , latex, cals

==286 emacs how to trun on off  mode variable  ==
e(setq make-backup-files nil)
(global-linum-mode 1)

==294 multi clipboards ==
C-x rs => copy text to register
C-x ri => insert-register means  (paste from register)

== the best for web is web-mode.org it is on melpa (css, jsp ,php ,js) ==

== 302 manage split windows ==
[important] save split window for config current session
M-x winner-mode
C-c arrow left /right
(winner-mode 1)

== 316 find/replace string on multiple files ==

================== Notes from ergo emacs book ================================

==== remove empty lines or blank lines but not the last one =====
select region then
M-x flush-lines RET ^$ RET  ==> Delete lines containing matches for REGEXP.
M-x dml ^$                  ==> Delete lines containing matches for REGEXP.
look at ^$
= remove last  new line only   ========
go to the last line then select the previous line 
like this like this :- 

go to last line
C-space
C-backchar
M-x replace-string alt-j space

alt-j ==> new line or c-o 

Q:- how to remove the blank line at the end of the files of Mysql templates
A:- select last end line (alt-j)   or c-o 
    then M-x rs alt-j by space
done
to make it for all files , first macro named t2 which will open the file then modify it then close it 
and make another macro for open file then call t1 then select the next file => macro name is t1

======================================

(number-sequence 10 1 -2) c-u c-x-e
(number-sequence 40 1 -2)

======================== my repeater M-x my-cu1 ================
M-x my-cu0 for regexp
M-x my-cu1 for number

;; now you can write macros without errors because 
;; avoid this killer statement M-x macro2(C-u 0 M-x macro1)
;; avoid C-s then C-f/b the best solution is  press enter ,
;; c-u ^[a-zA-Z]  M-x  macro
;; c-u   regexp   M-x  macro

(defun my-cu1 (reg  macro)
  (interactive
   (list
    (read-regexp "reg: ")
    (read-command "macro: ")))
  (setq current-prefix-arg (how-many reg))
  (call-interactively  macro)
)
;; begin on line man =>       ^man
;; blank lines regex =>       ^C-j (means ctrl+j) ^ means begging of line

==========================================
rainbow colors parentheses
list-packages Rainbow Delimiters
then CS rainbow
M-x rnb
==========================================
ediff between two directory by :-  ztree
x to expand all ztree
http://tuhdo.github.io/emacs-tutor3.html
==========================================
superword-mode => jumping over what_is_your_name is one word
(global-subword-mode 1) => jumping over camelCase in one word
M-x  global-subword-mode
==========================================
change end line for unix and windows ???
M-x set-buffer-file-coding-system, then give a value of “mac”, “dos”, “unix
==========================================

== 146 bold underline text   for ergo emacs book ==
must use  M-x enriched-mode => to save the file with bold italic all colors

M-o d // default
M-o b // bold
M-o i // italic
M-o u // underline

M-o o othor

M-x enriched-mode 
ahmed Ali

Hi Ahmed                bmkp->-mark
Hi Ahmed                bmkp-X-mark
Hi Ahmed                bmkp-bad-bookmark
Hi Ahmed                bmkp-bookmark-list
Hi Ahmed                bmkp-desktop
Hi Ahmed                bmkp-function
Hi Ahmed                bmkp-heading
Hi Ahmed                bmkp-light-autonamed
Hi Ahmed                bmkp-light-fringe-non-autonamed
Hi Ahmed                bmkp-light-non-autonamed
Hi Ahmed                bmkp-local-file-with-region
Hi Ahmed                bmkp-man
Hi Ahmed                bmkp-no-local
Hi Ahmed                bmkp-remote-file
Hi Ahmed                bmkp-snippet
Hi Ahmed                bmkp-t-mark
Hi Ahmed                bmkp-variable-list
Hi Ahmed                bold-italic
Hi Ahmed                cursor
Hi Ahmed                describe-variable-value
Hi Ahmed                diredp-autofile-name
Hi Ahmed                diredp-date-time
Hi Ahmed                diredp-deletion-file-name
Hi Ahmed                diredp-dir-priv
Hi Ahmed                diredp-executable-tag
Hi Ahmed                diredp-file-suffix
Hi Ahmed                diredp-flag-mark-line
Hi Ahmed                diredp-link-priv
Hi Ahmed                diredp-mode-line-marked
Hi Ahmed                diredp-number
Hi Ahmed                diredp-rare-priv
Hi Ahmed                diredp-symlink
Hi Ahmed                diredp-write-priv
Hi Ahmed                edbi:face-ac-column-selection-face
Hi Ahmed                edbi:face-ac-table-selection-face
Hi Ahmed                edbi:face-ac-type-selection-face
Hi Ahmed                edbi:face-header
Hi Ahmed                emms-browser-album-face
Hi Ahmed                emms-browser-composer-face
Hi Ahmed                emms-browser-track-face
Hi Ahmed                emms-playlist-selected-face
Hi Ahmed                emms-stream-name-face
Hi Ahmed                epc:face-title
Hi Ahmed                font-lock-regexp-grouping-backslash
Hi Ahmed                font-lock-string-face
Hi Ahmed                font-lock-variable-name-face
Hi Ahmed                fringe
Hi Ahmed                header-line
Hi Ahmed                highlight
Hi Ahmed                info-constant-ref-item
Hi Ahmed                info-function-ref-item
Hi Ahmed                info-macro-ref-item
Hi Ahmed                info-reference-item
Hi Ahmed                info-special-form-ref-item
Hi Ahmed                info-syntax-class-item
Hi Ahmed                info-variable-ref-item
Hi Ahmed                info-xref-visited
Hi Ahmed                isearch-fail
Hi Ahmed                lazy-highlight
Hi Ahmed                link-visited
Hi Ahmed                menu
Hi Ahmed                mode-line
Hi Ahmed                mode-line-emphasis
Hi Ahmed                mode-line-inactive
Hi Ahmed                next-error
Hi Ahmed                notify-user-of-mode
Hi Ahmed                rainbow-delimiters-depth-1-face
Hi Ahmed                rainbow-delimiters-depth-3-face
Hi Ahmed                rainbow-delimiters-depth-5-face
Hi Ahmed                rainbow-delimiters-depth-7-face
Hi Ahmed                rainbow-delimiters-depth-9-face
Hi Ahmed                rainbow-delimiters-unmatched-face
Hi Ahmed                scroll-bar
Hi Ahmed                shadow
Hi Ahmed                show-paren-mismatch
Hi Ahmed                tool-bar
Hi Ahmed                trailing-whitespace
Hi Ahmed                tty-menu-enabled-face
Hi Ahmed                underline
Hi Ahmed                widget-documentation
Hi Ahmed                window-divider
Hi Ahmed                window-divider-last-pixel

============ margin color ==============================

(fringe ((t (:background "black" :foreground "white"))))

===================== Emacs view  images for windows ====================

download dll files from here for emacs images
http://vgoulet.act.ulaval.ca/en/emacs/windows/

5 packages to view images for emacs  only the binary files
http://sourceforge.net/projects/ezwinports/files/    
1-  libpng-1.6.12
2-  zlib-1.2.8-2)
3-  JPEG (jpeg-v9a)
4-  TIFF (tiff-4.0.3)
5-  GIF (giflib-5.1.0)
and more 
then copy all dll files to c:/emacs/bin

all packages in :-
D:\HOME\emacs\emacs software\emacs original only

===================== fit frame disabled  ====================
 '(autofit-frames-flag nil)

===================== Emacs mysql  for windows ====================

for emacs and mysql solution in windows
(setq sql-mysql-options '("-C" "-t" "-f" "-n"))

means from command line :- mysql -C -t -f -n  and and -H means output as html

===================== Emacs find-dired  for windows ====================
look at the path with .emacs , i will change it always
must use the find for /usr/bin from cygwin not find.exe from c:/windows/system32/find.exe so must modify the path in enviroment like this
put the cygwin first before the windows/system32

note :- this path is old
C:\Program Files\MySQL\MySQL Server 5.1\bin;C:\cygwin\bin;C:\cygwin\bin\svn-tools;C:\Program Files\Java\jre7\bin;C:\emacs\bin;C:\Program Files\Windows Resource Kits\Tools\;%SystemRoot%\system32;%SystemRoot%;%SystemRoot%\System32\Wbem;%SYSTEMROOT%\System32\WindowsPowerShell\v1.0\;C:\Program Files\Shield;C:\Program Files\Windows Resource Kits\Tools;C:\Program Files\VideoLAN\VLC\


===================== Emacs ediff  for windows ====================
must download diff.exe from package  DiffUtils for Windows
http://gnuwin32.sourceforge.net/packages/diffutils.htm
it is already in D:\HOME\emacs\emacs software\emacs original only
must but the files diff.exe with dll in => c:/emacs/GnuWin32/bin/  
then 
put  this in .emacs  
(add-to-list 'exec-path "c:/emacs/GnuWin32/bin/")
but must must must must must be this line the last line not the first line like this

;;;; wow the last one added  means the first one executed
(add-to-list 'exec-path "c:/cygwin/bin/svn-tools/")
(add-to-list 'exec-path "c:/cygwin/bin/")
(add-to-list 'exec-path "c:/emacs/GnuWin32/bin/")
;;;; wow the last one added  means the first one executed

M-x cs => eimp
Eimp Mogrify Program: C:/emacs/GnuWin32/bin/mogrify
the solution is ==>  sudo aptitude install imageMagick

path =

no need to add it to the PATH in environment 
 C:\Program Files\MySQL\MySQL Server 5.1\bin;C:\cygwin\bin;C:\cygwin\bin\svn-tools;C:\Program Files\Java\jre7\bin;C:\emacs\bin;C:\Program Files\Windows Resource Kits\Tools\;%SystemRoot%\system32;%SystemRoot%;%SystemRoot%\System32\Wbem;%SYSTEMROOT%\System32\WindowsPowerShell\v1.0\;C:\Program Files\Shield;C:\Program Files\Windows Resource Kits\Tools;C:\Program Files\VideoLAN\VLC\

new one is :-
.;C:\Program Files\MySQL\MySQL Server 5.1\bin;C:\cygwin\bin;C:\cygwin\bin\svn-tools;C:\emacs\GnuWin32\bin;C:\Program Files\Java\jre7\bin;C:\emacs\bin;C:\Program Files\Windows Resource Kits\Tools\;%SystemRoot%\system32;%SystemRoot%;%SystemRoot%\System32\Wbem;%SYSTEMROOT%\System32\WindowsPowerShell\v1.0\;C:\Program Files\Shield;C:\Program Files\Windows Resource Kits\Tools;C:\Program Files\VideoLAN\VLC\



===================== sensetive search and regex by  ====================
case sensetive for search and regexp
 (case-fold-search nil)


===================== read text and speach   ====================
http://www.eguidedog.net/doc/doc_build_win_festival.php
1-download a ready festival one
2- M-x cs festival then in the program command write
c:/festival/bin/festival

note:- must put the program in c:/festival/bin/ not in the other folders

open festival.el and modify it by
(defun festival-read-region-in-buffer (buffer start end)
  "Read region START to END from BUFFER."
  (when (festivalp)
    (let ((temp-file (make-temp-name "c:/Users/zinko/AppData/Roaming/.emacs.d/festivalTemp/emacs-festival-")))
      (with-current-buffer buffer
        (write-region start end temp-file nil 0)
        (festival-send "(progn (tts_file \"%s\") (delete-file \"%s\"))\n"
                       temp-file temp-file)))))

then at the folder festivalTemp right click and remove the read only option

=====================  unzip file by press z in ===================== 
create gunzip.bat
@echo off 
gzip -d %1

then add it to c:/emacs/gnuwin32/bin

===================== dired    ====================


I to open java without mode (dired-info)
j to jump to file

M chmod
O chown
G chgroup
S softlink
H hardlink
# dired chmod, change mode  , mode m
M 444  ==> r r r 
M 457  ==> r r-x rwx
chmod 444

change all sources and doc for java for read only rrr folders and files
find .  -type d -exec chmod 444 {} \;
find .  -type f -exec chmod 444 {} \;
or by

# immutable folder and subfolers for java , cant write or del, cant add new file in folder
chattr +i -R image/
lsattr 

# remove immutable
chattr -i -R image/
lsattr 

# immtable (read only ) for doc and src of java in jdee
chattr +i -R src_jdk_1.8/
chattr +i -R servlet-api-src
chattr +i -R struts1.3_org_src/
chattr +i -R  servlet-api-src/
chattr +i -R  src_jdk_1.8/
chattr +i -R  struts1.3_org_src/
# to see immutable use command lsattr will see
# ----i---------e--- ./jdk-8u161-docs-all
# to remove immtable use chattr -i -R folder/

========================================--
--immutable file => cant delete alter file -- file permission 
chattr +i  a.txt  => read only+cant del
chattr -i  a.txt  => remove attribute 

-- view attributes
lsattr  ==> must be ---i--- ==> immutable
--------------e--- ./index.html
----i---------e--- ./image
--------------e--- ./files

# immutable folder and subfolers , cant write or del, cant add new file in folder
chattr +i -R image/
lsattr 
========================================--



# dired chown, change own  , own O 
# dired chgroup, change group  , gourp G

;; in dired  compress and uncompress .zip file
;; Z uncompress
;; z compress, can compress multi dir 
;; _ file type like file *


 =====---dired==========---
 dired+ need also
      apropos', `apropos+', `autofit-frame', `avoid', `bookmark',
;;   `bookmark+', `bookmark+-1', `bookmark+-bmu', `bookmark+-key',
;;   `bookmark+-lit', `cl', `cmds-menu', `dired', `dired+',
;;   `dired-aux', `dired-x', `ffap', `fit-frame', `frame-fns',
;;   `help+20'==>help-fns+ `info', `info+', `menu-bar', `menu-bar+',
;;   `misc-cmds', `misc-fns', `naked', `pp', `pp+', `second-sel',
;;   `strings', `subr-21', `thingatpt', `thingatpt+', `unaccent',
;;   `w32-browser', `w32browser-dlgopen', `wid-edit', `wid-edit+',
;;   `widget

# cut files or move files to another dir by
R  
r like cut in windows
r means rename


# copy full path name for dired
c-u 0 w

# copy  name for current file
w
 
# view folders size
du -sh *

# view current folder size
! du -sh 

# sort in dired
M-x dired-sort-dialog or c-d or
M-x ds

c-h m  help 
 Ctrl+x Ctrl+j show current file in diredb
 Ctrl+x Ctrl+j parent dir in dired


;;dired-hide-details-mode 
M-x ls
 
;;play files images
put the cursor at the path and M-x ffap will be open directly 
ffap find file at the point /home/songs

;;dispaly images  or tumme
M-x im

 dired + auto-image-file-mode = to view image in dired
 c-x c-q to edit file name . wow wow wow and c-c c-c to save 
 c-c c-v to view html inside emacs 
 s   to sort them 
[old]
enter  animate gif images or press enter , a +		image-increase-speed

gif ===> press [f] only , frame by frame  forward
You can run the command ‘image-next-frame’ with f
gif ===> press [b] only , frame by frame  backword 
gif images  gif ==> f b 
;; for gif images f next frame, b back frame , ss for zoom in , S 0 for default size
f    ===> next frame
b    ===> pre  frame
ss 2 ===> zoom in 2
s 0  ===> default size


 t        mark all
 c-t c-t  open thumbnails images in dired 
 c-t i    open image in small size
 c-t x    open image in image magic software but press left button to show the menu
 c-t a    add image to group to view all later 
(buffer-file-name) then evalute it in emacs  because it is function or c-x c-e

[[dired]]
d delete then x
m       mark
U       unmark
t       mark all
   */      mark folders only
   */ t    mark files only
+       create folder + c-f 
c-x c-f mak file c-x c-f c-f
g       refresh 
!       run shell on file 
C       copy file
s       sort
M-x ds  sort by dialog
R       rename file or move
f       open markd file
F       open many maked files
j       jump to file
=====--
to search inside many files 
  */    mark dir only
  */ t  mark files only
  * C-n  next marked file

% g  mark files contains regex 
% m  mark files/folder names by regex

A    search inside files
M-,  forward search 
Q    query replace regexp on multi files by  M-x fd then t then Q

o    open  file in other window
C-o  open  file in new emacs 
=====-
important  1 2
1-  C-return ==> open file in explorer 
2-  M-return ==> open file by the assoc program or by mouse click


    * m   Mark the current region
   **    mark exe files
t     mark all
U     unmark all

* C-n  next marked file
M-}    next marked file

w      copy the name of file
/   ==> filter
/ n ==> filter by name
/ r ==> filter by regexp
/ d ==> filter by dir
/ f ==> filter by file
/ . ==> filter by extenstion
/ ! ==> nagate the filte means wow wow
//  ==> pop all filter means remove all filters
/p  ==> pop one filter 
/?  ==> help filter
/r  ==> filter by regex 8fr0 or 8fr1
c-h enter ==> describe file



===== dired+ ==================xrba=========================
in dired mode c-x d 
h  for help
the default time here is the modification time for each file

======>>>> look ==> c-u means more config about the command s,  s means sort in dired

M-x ds only hahahah hii
-R, --recursive   list subdirectories recursively
-S     sort by file size, largest first
-X     sort alphabetically by entry extension
-t     sort by modification time, newest first
-a, --all   do not ignore entries starting with .
-l     use a long listing format
-h, --human-readable              with -l and/or -s, print human readable sizes (e.g., 1K 234M 2G)

C-u s => -alh   // sort by name (the deafult )  
C-u s => -alhR   // sort by name (the deafult ), dir and sub dir

C-u s => -alht  // sort by modification  time mtime,when press s then switch between (name and modification time)
C-u s => -alhtR // sort by modification  time mtime,when press s then switch between (name and modification time) dir and sub dir

C-u s => -alhS  // sort files and view as kb and Mb  
C-u s => -alhSR  // sort files and view as kb and Mb, dir and sub dir

C-u s => -alhc  // sort by creation time ctime
C-u s => -alhcR  // sort by creation time ctime, dir and sub dir

C-u s => -alhX  // sort by extension
C-u s => -alhXR  // sort by extension, dir and subdir

C-u s => -alhu  // sort by access time (not work)
C-u s => -lutR  // sort by access time (work)



or use the
M-x ds

for help write
man ls 
ls --help [S sort by file size ,a all ,l list attributes ,h human readable ,t sort by modification time, c reation time , u access time]

notes :- -al is the same ls --help to see the other options
you can customize it by customize -> dired -> ow Value Dired Listing Switches -> select char form ls --help

in .emacs =>   '(dired-listing-switches "-alSh")

note :- c-u [] = it is mean customize like shell -> c-u shell


--view images thumbnails in directory 
M-x tumme
w = copy current name
w = copy current dir name

--- customize emacs for every thing ( setting)
M-x customize 

C-x R     ==> view current open directory  it is usefull than using c-x b for searching files and dir
C-x D     ==> merge many dir buffer , buffers not merege it in the hard disk but merge buffers only like vlc and mplayer buffers
c-h enter ==> in the dired  describe the file created modified size many info


========================== emms play list  ================================

M-x emms-play-url

holy-quran :-

low  quilty
http://www.quran-radio.com/live/windows.asx

high quality
http://www.quran-radio.com/live/windows1.asx

or
cvlc http://www.quran-radio.com/live/windows1.asx

--------------------

hayat fm
http://pallap.com/radio.php?i=hayat-fm

cairo fm
http://pallap.com/radio.php?i=Quran-Cairo

====================== facebook in emacs ==================
 (setq w3m-use-cookies t)
 open m.facebook.com
 that is it
============================================================
c-u M-!  inserting any output of a shell command to the current buffer
c-u M-! date or by template yasnippet just right time  Sun May 17 07:23:03 2015



M-= count-words-region
M-x list-processes,colors,fonts,command-history,packages
esc C-r => regex search
c-x z zzzzz  repeat the last command

c-x c-n :- goal column then when press c-n c-p will move as that column
first.second
first.second
first.second
first.second

Amman Jordan Latitude   31.956578300000000000
Amman Jordan Longitude  35.945695099999966000

M-x Delete Duplicate Lines in 24.4 is by default

M-x calendar
M-=  select from to days then count days
g i  islamic calendar goto
p i  islamic calendar current day
S    sunrise sunset 
.    go to today
M    Moon
A a		appt-add  alarm will stay for 999 second wow ;; in kali ,in title bar set always on top
A d		appt-delete alarm
gd              go to sepsific day

(diary-file "D:/HOME/importantDIR/EmacsBookmark/diary")
i d     add to the diary day
  d     display diary content
m       mark diary days by yellow color

M-x calender then select day then press A a
M-x cs appt  ==> appt-display duration 999
--
for alarm message for date use calendar
choose the day then press i d == means insert diary (means notes to date)
M-x cs  calendar
diary file in =>  ~/diary i change it to the bookmark folder d:/home/important/bookmarkfolder


==== calculate days of calendar ========
M-x       =====>>> open calendar
.         ====>>> current day
C space   =====>>> select a day
gd        =====>>> goto a specific day 
M =       =====>>> count-days-region
========================================

======== put the full  alias with command or external command or abbrev command


============================================================



===================Emacs with cygwin=======================
        
XWin -multiwindow
export DISPLAY=:0.0
emacs &

# Close shell keeping all subprocess running
disown -a && exit

just type 
aa.sh
bb.sh

============================================================


3.7 How do I associate files with Emacs? wow wow wow 
fileName => properties => open with => emacsclientw.exe  then start the M-x server-start
so you dont need to open new emacs progam
============================================================
emacs screen saver
ppM-x zone 
(setq zone-programs [zone-pgm-martini-swan-dive])

M: (sit-for 3) ;; eval elisp


========================================================================================================================
emacs power is :-
0- regexp
1- emacs = editor of macros , put your macros in macro file in d:/home/importantfiles/emacslisp or c-x r b macros
2- abbrev = make the complex statement as easy c-x r b abbrev
3- mark  = make list for every paths and files and folder and url and part of file c-x r m (bookmark)
4- template text and regexp
5- org mode
 
Make  macro  named koko
c-x c-k n =name macro
open .emacs file
M-x insert-kbd-macro
M-x edit-kbd-macro then press M-x koko
========================================================================================================================

http://www.emacswiki.org/emacs/init-w3m.el
http://www.emacswiki.org/emacs/w3m-extension.el


c-h i
----
shell ==>  grepjar: (fastjar)Invoking grepjar.           Search files in a jar file for 
----
M-x sort-numeric-fields
2
10
22
3
12
----

POIT
c-x r     space   set point to register
c-x r        j    jump to point

REGION
c-x r        s    copy region to register
c-x r        i    paste region from register

RECTANGLE
c-x r        r    save rectangle to register
c-x r        i    paste rectangle from register

FRAME
c-x r        w     save the window to register  
c-x r        f     save the frames to register wow wow save frame to register,if use it in dired then must use return(enter) instead of a
c-x r        j     restore frames from register

NUMBER
c-x r        n    store number to register
c-x r        i    paste number from register

MACRO
c-x c-k     x     store macro to register
c-x r       j     execute the macro

BOOKMARK
c-x r       m     mark to book mark
c-x r       b     book jumb
c-x r       l     list bookmarks

M-x bookmark-save  => to save all current book mark , so
if you close the emacs by error will keep the bookmarks

C-M-s         regex search (isearch-forward-regexp) ;; but it in .emacs like (defalias ' 'isearch-forward-regexp)
C-M-r         no need for this foolish , only use =>  esc C-s  or alt Ctrl s

c-x c-k space => edit macro step by step

yes that is it 
esc means M- so you can use it with 2 or 3 keys like M-o M-C-o 
==========================
always read the manual 24.5 always and emacs extra book
always read the manual 24.5 always use the sticky keys always
always read the manual 24.5 always wow , esc means Meta 
always read the manual 24.5 always
always read the manual 24.5 always

=== mastering emacs ====

https://www.masteringemacs.org/all-articles
m-x cs trash
(setq redisplay-dont-pause t) ;; no hang for emacs
M-x flush-lines RET ^$ RET   ;; remove blank lines

=== end of  mastering emscs ====

new line in regexp is
c-q c-j
but must stop the c-q and c-j also hahah hiii in the .emacs then restart emacs , load file will not work

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; improve  M-x  ;; first install smex

 '(smex-history-length 500)
 '(smex-save-file "D:/HOME/importantDIR/EmacsHistory/smex-items")
 
(require 'smex)
(smex-initialize)
(global-set-key (kbd "M-x") 'smex)
(global-set-key (kbd "M-X") 'smex-major-mode-commands)
;; This is your old M-x.
;;(global-set-key (kbd "C-c C-c M-x") 'execute-extended-command)
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

tar files :-
compress  to song.tar but with less comperss (just collect , dont compress)
tar cvf  song.tar /home/folder/song

compress  to song.tar but with z  comperss
tar zcvf  song.tar /home/folder/song

--decompress
tar xvfz file.tar.gz
tar xvf  file.tar


    -z: Compress archive using gzip program
    -c: Create archive
    -v: Verbose i.e display progress while creating archive
    -f: Archive File name
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
emacs as root
c-x d /su::/home
c-x c-f /su::/root/file.txt
c-x d /sudo::/home

== decrypt directly from mp4  to vlc 
M-&
gpg -o - -d file.flv.gpg | vlc -
then write the password

== encrypt many files at once by emacs
create macro
:e select ok 
close the gui password
paste the password dont write it .
c-u 0 c-x e
best way is using

;;;;;  use gpg password as argument ;;;;;;;;
my-gpg2 version is 
gpg --decrypt --batch --passphrase 'original passwd' example.gpg  | gpg --symmetric -o new_example.gpg

gpg1 version is 
gpg -d --no-use-agent --passphrase 'original passwd' example.gpg  | gpg -co new_example.gpg

;;;; encrypt then compress twice and use password as argument ;;;;;;;;;;

gpg --no-use-agent --passphrase 'aaabbbccc' -o - -c aa.flv | gzip -c   | gpg --no-use-agent --passphrase 'aaabbbccc'   -o - -c | gzip  > ax.gz
gzip -cd ax.gz | gpg --no-use-agent --passphrase 'aaabbbccc'  -o - -d  |  gzip -cd | gpg --no-use-agent --passphrase 'aaabbbccc'  -o - -d | vlc -

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
run emacs without configuration file .eamcs
emacs -q
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;


C-x C-w /su::/path/file      To save the current file using superuser privilege:
C-x C-m f     To set coding system of current buffer:
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
differentiation and integration solve
aptitude install maxima or wxmaxima
diff (2*x,x);
integrate (x+3-x^(2)+x+3-x^2,x);
see the tutorial :-
http://maxima.sourceforge.net/documentation.html

note :- wxmaxima is Gui for maxima
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
emacs maxima is =>>
sudo apt-get install maxima-emacs
M-x imaxima
M-x cs scale image to 3
M-x maxima-info
'integrate (1/(1+x+x^5), x);
integrate (1/(1+x+x^5), x);

'diff (x^3, x);
'integrate ((3*x^2), x);

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
loops if condition in emacs macro
https://www.gnu.org/software/emacs/manual/html_node/calc/Keyboard-Macros.html#Keyboard-Macros

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
add these to emacs
avy

disable ctrl+z  or use it to emmet complet 
(global-unset-key (kbd "C-z")) ;; to disable it like this, but better is use it as emmet complete

aptitude install archmage
to run chm files

html-mode c-c-o add tag wow

install also the festival, gt
install jdee for java
and web-mode and emmet


I ac-emmet           20131015.858 available  melpa      auto-complete sources for emmet-mode's snippets
I auto-complete      20151227.354 available  melpa      Auto Completion for GNU Emacs
xxxI company-web        20151219.317 available  melpa      Company version of ac-html, complete for web,html,emmet,jade,slim modes
I emmet-mode         20151213.738 available  melpa      Unofficial Emmet's support for emacs
I web-mode           20151218.... available  melpa      major mode for editing web templates


;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
auto-complete
M-x list-packages auto complet mode
M-x cs  '(global-auto-complete-mode t)
fix the time by 0.5 and delay 0.2

at the end .emacs put
;;; optional  (add-to-list 'ac-dictionary-directories "~/.emacs.d/dict")
;;; optional  (require 'auto-complete)

(global-auto-complete-mode t)
(require 'auto-complete-config)
(ac-config-default)
(define-key ac-complete-mode-map "\C-n" 'ac-next)      ;;  the way to modify any key for the mode only
(define-key ac-complete-mode-map "\C-p" 'ac-previous)  ;;  the way to modify any key for the mode only

;;;;;;; add auto-complete for any mode 
note :- html dict  not exist so add it by hand in emacs.d/ .. .. /dic then
M-x cs ==>   Ac Modes ==> add the mode here to auto complete 

https://math.berkeley.edu/~lowdanie/emacs_ac.html
modify M-n/p to C-n/p in the .emacs.d/autocomple.el keys, same as eclipse autocomplete keybindings
or use the only no need to modify keys in the autocomplete.el just add this to .emacs
(define-key ac-complete-mode-map "\C-n" 'ac-next)
(define-key ac-complete-mode-map "\C-p" 'ac-previous)


;;; text auto complete dictionary from /usr/share/dict/american-english 
add text mode to auto-complete by create text-mode file in emacs.d/ .. .. /dic then M-x cs ac-mode 

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

emmet-mode
ac-emmet
M-x ac-emmet-html-setup
menu = 0.11
help = 0.12
http://docs.emmet.io/cheat-sheet/
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

nxml-mode [already exist ]
http://ergoemacs.org/emacs/emacs_html.html

now i have

web-mode
html-mode
emmet-mode
ac-mode
ac-emmet
xml-mode

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
M-x cs ido-everywher on
xxx company-web

https://github.com/jdee-emacs/jdee-server
jdee
apt-get install maven
;; download jdee-server
git clone https://github.com/jdee-emacs/jdee-server.git
cd jdee-server
;; in jdee-server run this command
;; old mvn -DskipTests=true assembly:assembly
mvn -Dmaven.test.skip=true package
then in jdee-server/target/ to see the jdee-1.0-SNAPSHOT.jar and jdee-bundle-1.0-SNAPSHOT.jar-jar-with-dependencies.jar
in my case
'(jdee-server-dir "~/.emacs.d/jdee-server-master/target")  ;; in .emacs or in prj.el
(setq jdee-server-dir "~/.emacs.d/jdee-server-master/target" ) in 
or in M-x cs jdee server-dir 
then
M-x jdee-complie
M-x jdee-run
or in shell javac *.java then java package_name.main_class


https://github.com/jdee-emacs/jdee-server
http://selfsupport.com.pk/questions/32343617/cant-set-jdee-server-in-emacs


;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
showkey            20150527.848 available  melpa      Show keys as you use them.
then tooltip 
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

;;;;;;;;;;;;  .emacs    ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;;; avy package

(global-set-key (kbd "C-j") 'avy-goto-word-or-subword-1) ;; change it to c-j as eclipse 
(global-set-key (kbd "C-c f") 'avy-copy-line)
(global-set-key (kbd "C-c d") 'avy-move-line)
(global-set-key (kbd "C-c s") 'avy-copy-region) ;; very important note  c-c c first word then c-c c secnond word then c-x c-x 
(setq avy-all-windows 'all-frames)

;;; iedit package 
;;; C-'  edit file /root/.emacs.d/elpa/iedit-20150915.2022/iedit.el then recompile it instead of c-;
;;; change this (defcustom iedit-toggle-key-default (kbd "C-;")
;;; to this (defcustom iedit-toggle-key-default (kbd "C-'")
;;; 
;;; change  of this line ;;    (define-key map (kbd "C-'") 'iedit-toggle-unmatched-lines-visible) in file /root/.emacs.d/elpa/iedit-20150915.2022/iedit-lib.el and delete compiled file iedit-lib.elc
;;; by this one  (define-key map (kbd "C-c a") 'iedit-toggle-unmatched-lines-visible)
;;;
(require 'iedit)        ;; c-' iedit mode start always

(global-set-key (kbd "C-c z") 'emmet-expand-line)     ;;; run it by c-j complete emmet change it to c-z, and edit emmet.el also
;;; emmet-mode start with html css ,

;;; video http://docs.emmet.io/actions/wrap-with-abbreviation/
(add-hook 'sgml-mode-hook 'emmet-mode) ;; Auto-start on any markup modes
(add-hook 'css-mode-hook  'emmet-mode) ;; enable Emmet's css abbreviation.
;; (global-set-key (kbd "M-x") 'helm-M-x)

;;;;;;;;;;;;;;;;;;;;;;;; autocomplete in M-x shell ;;;;;;;;;;;;;;;;;;;;;;;
;;; package bash-completion

(autoload 'bash-completion-dynamic-complete 
  "bash-completion"
  "BASH completion hook")
(add-hook 'shell-dynamic-complete-functions
  'bash-completion-dynamic-complete)
  (require 'bash-completion)
  (bash-completion-setup)
  
;;; package rainbow-delimiters
;;;; this way to run mode in mode by hook or by (require 'without-mode word) like this (require 'move-dup)
(add-hook 'prog-mode-hook 'rainbow-delimiters-mode) ;; rainbow parentheses colors with prog modes
(add-hook 'jdee-mode-hook 'rainbow-delimiters-mode) ;; rainbow parentheses colors with java mode

;;;;;;;;;; m-x list-packages, install move-dup to move like eclipse ;;;;;;;;;;;;;;;;;;

(require 'move-dup)
(global-set-key (kbd "M-<up>") 'md/move-lines-up)
(global-set-key (kbd "M-<down>") 'md/move-lines-down)
;;(global-set-key (kbd "C-M-<up>") 'md/duplicate-up)
(global-set-key (kbd "C-x c") 'md/duplicate-down)
;;;; redo ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; M-x list-packages , install redo+ 

(require 'redo+) ;; i changed the name from redo+ to redo
(global-set-key (kbd "C-?") 'redo)   ;;; redo, but undo c-/
;; https://github.com/emacsmirror/redo-plus

;;;;;; fiplr ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
(global-set-key (kbd "C-c g") 'fiplr-find-file)  ;; find files 
;; ignore only backup files 
(setq fiplr-ignored-globs '((directories (".git" ".svn"))
                            (files ( "*~"))))
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; replace these lines also 
(require 'dired-filter)
(require 'eimp)

;;;;;;;;;;;;;;;.emacs end ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;


in emacs always jump, search  and develop

I have modes 
web-mode
emmet-mode
ac-emmet
paredit-mode
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

sql packages
sql completion
https://truongtx.me/2014/08/23/setup-emacs-as-an-sql-database-client/

http://www.emacswiki.org/emacs/SqlComplete
http://stackoverflow.com/questions/4910706/autocompletion-for-emacs-in-my-sql-mode
http://stackoverflow.com/questions/7587072/gnu-emacs-tab-completion-for-psql-running-within-sql-el-process

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
## extension open with modes  like this 
(add-to-list 'auto-mode-alist '("\\.html?\\'" . web-mode))
(add-to-list 'auto-mode-alist '("\\.pdf?\\'" . pdf-tools-install))


## mode hook with mode like this
(add-hook 'web-mode-hook 'emmet-mode)  ;; when open web-mode, open emmet-mode
(add-hook 'web-mode-hook 'ac-emmet-html-setup)  ;; when open web-mode, open ac-emmet

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
http://draketo.de/light/english/emacs/babcore
-save macro as fun directly
-add print for printer  to menu 

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
search in last opend directory by
c-x d then M-s c-s 

in future
done- delete  twice 2 2 2  '(ido-enable-flex-matching t) it is stupid match
done- dont do this, (kbd "C-c C-v") 'my-w3m-copy-url-at-point) ;; 
done- use this (defalias 'wb   'my-w3m-copy-url-at-pointm)

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;



in .emacs
c-w kill region between two points
;;; (global-set-key (kbd "C-c s") 'avy-copy-region) ;; very important note  c-j first word then c-j  secnond word then c-w
;;; i stop it this function for copy area by this keybinding , now c-c s is for sql-list-all

;; auto-complete-mode with text mode 
;;(add-hook 'text-mode-hook 'auto-complete-mode)  
;; the best way is using M-x cs customize then  add  ac-mode then add new mode in it 


;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
(global-set-key (kbd "C-S-j") 'avy-pop-mark) ;; pop mark means return to the original point

M-x paredit-mode
https://www.youtube.com/watch?v=D6h5dFyyUX0
c-k         kill
M-Shift-s   Split the list or string
M-s         removing its delimiters. like "" or () example  (foo (bar| baz) quux)   ---> (foo bar| baz quux)
M-r         raise word or ()
M-up        splice word or ()



M-x restclient-mode
POST http://192.168.3.1:2357/cgi-bin/login.cgi
{"login_id": "user", "login_pw": "password"}
C-c C-c 

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
what is means of * in dired ?
means the name of the marked file 

compress directory dired 
* ==>> means the name of the marked file (wow)

note :- whten extract will extract by the original name
note :- c create, z gzip, v verbose, f file_name

compress with verbose
& tar -czvf result.tar.gz 
& tar -xzvf 

or

compress without verbose
& tar -czf result.tar.gz 
& tar -xzf 

or

very fast without compress
& tar -cf result.tar 
& tar -xf 

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

;; edit-named-kbd-macro sql-table
;; select user. ==> auto complete from table in sql mysql 
(fset 'sql-table
[?\C-b ?\C-\; ?\C-c ?\C-l ?t return ?\C-x ?o ?\M-f ?\C-f ?\C- ])
;; keybinding in sql-mode only ;; tab for template  , C-tab for sql-table
   (define-key sql-mode-map [C-tab] 'sql-table) 
;;;; sql with auto complete mode 
(add-hook  'sql-mode-hook 'auto-complete-mode)

;;;; list all keywords in mysql 
;;;; SELECT * FROM mysql.help_keyword;
;;;; then add it to auto-complete dict in .emacs.d
;;;; then M-x cs ac-mode
;;;;
;;;; modify template for mysql make it upper case for keys :- alter ===>>> ALTER 
;;;; comment the c-c s in .emacs for area 
;;;; M-x cs  sql-product for mysql instead of ansi 
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
template snippet
reload all snippet ==>>>>  yas-reload-all 


==>> in the future 
create_table  put ,
describe change key from desc to describe
delete the second colTyep in the create column
# name: INSERT INTO TABLE VALUES 2 3
VALUES ( ${2:column1Value} , ${3:column2Value});
filx enum ('values','value')
reinstall youtube-dl 

.emacs 
(concat "smplayer -fullscreen " url " &")))

======  flycheck package ============

important note:- flymake is better than flycheck
important note:- flymake is better than flycheck
important note:- flymake is better than flycheck

[important note]
flycheck work by major-mode not file extension, change to right mode then it check errors directly(xml-mode,html-mode)

syntax languages check  like html-tidy css xml  js json php  shell-scripting sql xml  and more in M-x cs checkers
m-x list-packages flycheck
M-x cs checkers
M-x flycheck-select-checker  html-tidy
apt-get install tidy                => for html-tidy checker
apt-get install phpmd               => for php-phpmd checker
[dont install it ]apt-get install xmlstarlet or xmllint          => xml checker, just use xmlls from lsp

gem install sqlint                  => sql checher 
gem uninstall sqlint                => to remove it 


important note:- flycheck   is better than flymake
important note:- flycheck   is better than flymake
important note:- flycheck   is better than flymake


for any checker put the name of checker lin sqlint in google then read the gethub of it 
you can add new checker by
M-x cs checkers
apt-get install [checker for language]
M-x flycheck-set-checker-executable


important note:- flymake is better than flycheck
important note:- flymake is better than flycheck
important note:- flymake is better than flycheck

init file
(global-flycheck-mode)
;; tie html-tidy with html-mode 
(eval-after-load 'flycheck
   '(flycheck-add-mode 'html-tidy 'html-mode))


important note:- flymake is better than flycheck
important note:- flymake is better than flycheck
important note:- flymake is better than flycheck

============================================

===================== write html  ======================================
it is very important for write html inside emacs
emmet-mode, web-mode , sqml-mode, 

replace M-x wb to browse-url-of-buffer 
http://emacsrocks.com/e12.html

javascript js2 mode,  js2 refactor, ac-js2
every languse must have refactor
php refactor
js  refactor
c refactor
java refactor
refactor and semantic convert emacs to IDE 
============================================================
convert every buffer/file to html file as is by M-x htmlize
============================================================
packages installed 
htmlize  convert any file to html file

company mode same as  AC 
company-web  same as  Ac
https://github.com/company-mode/company-mode/issues/68


web-beautify - Format HTML, CSS and JavaScript/JSON by js-beautify.
apt-get install npm 
npm -g web-beautify
https://github.com/yasuyk/web-beautify


Skewer: live web development with Emacs
https://github.com/skeeto/skewer-mode

restclient.el - HTTP REST client tool for emacs
https://github.com/pashky/restclient.el



M-x ace-mc-add-multiple-cursors
mc-ace


auto-complete-nxml
https://github.com/aki2o/auto-complete-nxml

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
== fixing properties files

M-h selet region
M-x reverse region

we have 
name = value1
name = value2

macro

select name =
M-x dml => delete matching line (name =)
next line 

end macro

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
right to left direction layout arabic to english rtl ltr 

this is the another way to change layout of keyboard in emacs insteas of pressing two shit togather
just press c-\ will change the languate to arabic 
c-\ set input method for current language
m-x set input method 


when c-\ always with edit arabic because you cant del,forward,backword char words arabic easly 
put the first letter as arabic char then the area will be rtl
put the first letter as english  char then the area will be ltr


final editing  arabic text by :-
1- c-\
2- first char arabic in the area


M-x list-packages
format-sql

mysql syntax checker 
gem install sqlint

=============
#file# remove auto-save files 
auto save after one second after change the buffer 
(auto-save-timeout 1)
'(auto-save-visited-mode t)  ;; it is the new one, but the old is (auto-save-mode 1)
(auto-save-visited-file-name t) ;; in emacs 26

  [old]
 '(auto-save-visited-file-name t) ;; it is old, [obsolete as emacs 26]
 so no need for
c-u c-x c-s   save all buffers
c-u c-x s     save all buffers if you are in the w3m-buffer 

in emacs 26.1 
If you want auto-saving to be done in the (visited file) rather than in a (separate auto-save file),
enable the global minor mode
M-x ‘auto-save-visited-mode’.
In this mode, auto-saving is identical to explicit saving. 

 '(auto-save-default nil) ;; stop auto-save-mode
 '(auto-save-timeout 0)   ;; stop auto-save
 '(auto-save-visited-file-name t)  ;; visited file mean (the real file), save directly in visited file not in the #file#
 '(auto-save-visited-interval 2)   ;; vistited file after 2 seconds    
 '(auto-save-visited-mode t)       ;; auto-save-visisted-mode better than auto-save-mode, because it is save as c-x c-s, so jdee and lsp-java will be see it.



=============

 emacs -f start-fs   you can run function of emac from shell by this command  emacs -f (M-x function or command )
 emacs -f stop-fs

=============

;;; confirm for exit emacs because of using the c-x c for duplicate lines, and c-x c-c for exit emacs 
M-x cs confirm kill emacs 
dont paste this in the .emacs 
(setq confirm-kill-emacs 'y-or-n-p)


;;; support for ido-mode for searching for every thing 
M-x list-packages ido-ubiquitous
M-x cs ido-ubiquitous-mode
(ido-ubiquitous-mode t)



M-x list-packages 
;; Package: smartparens
M-x cs then  smartparens 
(require 'smartparens-config)

(setq sp-base-key-bindings 'paredit)
(setq sp-autoskip-closing-pair 'always)
(setq sp-hybrid-kill-entire-symbol nil)
(sp-use-paredit-bindings)

;;;;;;;;;;;;;  helm = ido-mode ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
   [[[ ido-mode equals helm ]]]
no need for edit it like this also
no need for helm, use only ido-mode 
If you want to use Ido, at replace Helm configuration with this sample configuration that you can place in setup-environment.el:
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; GROUP: Development -> Extensions -> Ido ;;
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
(require 'ido)

(setq ido-enable-prefix nil      ;; ( already )hidden files and buffers will match only if you type a dot at first char 
      ido-enable-flex-matching t ;; ( already )flexible string matching
      ido-create-new-buffer 'always ( no need  ) 
      ido-use-filename-at-point 'guess()      ( what )
      ido-max-prospects 10                      ;; (alread)
      ido-default-file-method 'selected-window  ;; no need for this 
      ido-auto-merge-work-directories-length -1) ;; put it 0 as default 
(ido-mode +1)
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

M-x list-packages golden-ratio
M-x golden-ratio-mode
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; PACKAGE: golden-ratio                         ;;
;;                                               ;;
;; GROUP: Environment -> Windows -> Golden Ratio ;;
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
M-x cs golden-ratio-mode
 '(golden-ratio-mode t)

M-x cs golden-ratio-mode
Golden Ratio Extra Commands:
add this command   ==>> avy-goto-word-1
then when you jump to window will be increase automatically ,
that is means c-x o ==> like c-j ==> increase window


;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
M-x list-packages rainbow-mode
;;  match color names

(add-hook 'html-mode-hook 'rainbow-mode)
(add-hook 'css-mode-hook 'rainbow-mode)
 
#ff0000;
#00ff00;
#0000ff;


[ it is very slow, so dont use it ]
install package flx-ido  and flx
https://github.com/lewang/flx
M-x cs   flx-ido-mode t
M-x cs   Flx Highlight Face   ==>  foreground = white1 

install it  anzu 
https://github.com/syohex/emacs-anzu ==>> show number of matching search words 
and change the color to white2
M-x cs  Global Anzu Mode => t
M-x cs  Anzu Mode Line = white2 

avy 
'(autofit-frames-flag nil)
'(avy-all-windows (quote all-frames) t)
'(avy-all-windows (quote all-frames))
 (setq avy-all-windows 'all-frames)
M-x cs  avy-background to on
M-x cs  avy-leading to yellow all 
M-x cs  org table face  white2
(must be require 'org) to work 
(define-key org-mode-map (kbd "C-j") 'avy-goto-word-1)   ;; c-j for org-mode to jumping 


very very very imprtant melpa packages for the range of mepla [mepla range]
https://github.com/magnars/dash.el		==>> a fantastic library for elisp instead of cl, modern and tidy function
https://github.com/rejeep/f.el			==>> a fantastic library for elisp for files i/o , modern and tidy function
https://github.com/jrblevin/markdown-mode	==>> for web 
https://github.com/myrjola/diminish.el		==>> idont know what is this 
https://melpa.org/#/goto-chg
https://github.com/mooz/js2-mode                ==>> js mode
https://github.com/purcell/elisp-slime-nav      ==>> Slime-style navigation for Emacs Lisp
https://github.com/m2ym/popwin-el               ==>> clean help complete buffers 
https://github.com/dgutov/diff-hl               ==>> ediff last changes on the file or dir or files 
https://github.com/magnars/tagedit
https://melpa.org/#/web                         ==>> http get post 


[error] :- copy .emacs.d with .emacs as packup will gave me an error and missing .emacs.d folders 

[very important] 
http://emacs.stackexchange.com/tags?page=7&tab=popular



;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Sx Question Mode Content Face
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

convert from mysql to diagram by
/media/D/HOME/notes_files/schemaSpyGUI20090302

nots :-
for database mysql use this command line 
java -jar schemaSpy.jar -dp mysql-connector-java-5.0.4-bin.jar -t mysql -db mysql -all  -host localhost -port 3306 -u root -p ahmadjar  -o /home/test11  -ahic  -hq 

for schemaspyGUI 
see image file called look.jpg 


;;;;;;;;;;;;;;;;;;;;;;;;; sql ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; sql-list-table ==>  c-c c-l t ==> c-tab
;; sql-list-all  tables  ==> c-c c-l a  ==> c-c s 
;; edit-named-kbd-macro sql-table
;; select user. ==> auto complete from table in sql mysql 

;; sql-table   list column tables by calling M-x sql-list-table
;; keybinding in sql-mode only ;; tab for template  , use C-c o or dot 
;(define-key sql-mode-map [C-tab] 'sql-table)     ;;  the way to modify any key for the mode only but must call  (require ) before map key

;; use elmacro to write elisp code
;; use elmacro to write elisp code 

(defun my-sql_all_tables ()
  "show all mysql tables"
  (interactive)
  (sql-list-all nil)
  (other-window 1))  ;; jump to the other window 

;; key work only in the sql-mode 
(define-key sql-mode-map  (kbd "C-c s") 'sql_all_tables)

;; sql-all  list all tables by calling  M-x sql-list-all 
;; sql- sql-mode for list all tables
;; Saved macro , use abbrevaition 8dott  ==> .

;; use elmacro to write elisp code
;; use elmacro to write elisp code 

very important i prefer to use c-. instead of . 

(defun my-sql-columns ()
  "show all colms for my sql table "
  (interactive)
  (sql-list-table (thing-at-point 'symbol)  nil)  ;; put the (thing-at-point 'symbol ) to read the word like this word or like this word_hi_then 
  (other-window 1)  ;; jump to the other window
  (insert "."))     ;; print . in the buffer
;; if you need the dot in the sql ==> .
;; dot work only in the sql mode to display columns 
(define-key sql-mode-map (kbd ".")     'sql-columns)
;;(define-key sql-mode-map (kbd "C-c o") 'sql-columns)

please please please please please please please please please
please please to see the code of ER-diagram 

see the elisp.el 

please please please please please please please please please
please please 

tototo
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;







;;;;;;;;;;;;;;;;;;;;;;;;;;;; multiple cursours  ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

multiple cursours saved command run one and run more in this file
~/.emacs.d/.mc-lists.el

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

=> do this
-  M-x cs ido match => first and only to yellow2  without bold 

- remove chord key, it is very bad 
- comment (load-theme  'monochrome t) ;; because it is already done 	    
;; (load-theme 'monochrome t)


;;;;;;;;;;;;;;;; jdee colors  the original one ;;;;;;;;;;;;;;;;;;;;;;;;

(custom-set-faces
'(emms-playlist-selected-face       ((t(:foreground "red"     :bold nil ))))
'(jdee-db-active-breakpoint-face      ((t(:foreground "red"   :bold nil ))))          
'(jdee-db-requested-breakpoint-face   ((t(:foreground "red"   :bold nil ))))          
'(jdee-db-spec-breakpoint-face        ((t(:foreground "red"   :bold nil ))))          
'(jdee-font-lock-operator-face        ((t(:foreground "red"   :bold nil ))))          
'(jdee-font-lock-link-face            ((t(:foreground "red"   :bold nil ))))          
'(jdee-font-lock-pre-face             ((t(:foreground "red"   :bold nil ))))          
'(jdee-font-lock-api-face             ((t(:foreground "red"   :bold nil ))))          
'(jdee-font-lock-bold-face            ((t(:foreground "red"   :bold nil ))))          
'(jdee-font-lock-code-face            ((t(:foreground "red"   :bold nil ))))          
'(jdee-font-lock-italic-face          ((t(:foreground "red"   :bold nil :italic nil ))))          
'(jdee-font-lock-constant-face        ((t(:foreground "#E68AE6"   :bold nil ))))          
'(c-annotation-face                 ((t(:foreground "#D9D9D9" :bold nil ))))
'(font-lock-comment-delimiter-face  ((t(:foreground "#878787" :bold nil ))))
'(font-lock-comment-face            ((t(:foreground "#878787" :bold nil ))))
'(font-lock-constant-face           ((t(:foreground "#06CACA" :bold nil ))))
'(font-lock-function-name-face      ((t(:foreground "#8AB8E6" :bold nil ))))
'(font-lock-keyword-face            ((t(:foreground "#BFBFBF" :bold nil ))))
'(font-lock-string-face             ((t(:foreground "#BFBFBF" :bold nil ))))
'(font-lock-type-face               ((t(:foreground "#06CACA" :bold nil ))))
'(font-lock-variable-name-face        ((t(:foreground "#E6E48A"   :bold nil ))))
'(jdee-bug-breakpoint-cursor          ((t(:foreground "#ff00ff"  :bold nil ))))          
'(jdee-font-lock-constructor-face     ((t(:foreground "#8AE68A"   :bold nil ))))          
'(jdee-font-lock-doc-tag-face         ((t(:foreground "#878787"   :bold nil ))))          
'(jdee-font-lock-javadoc-face         ((t(:foreground "#878787"  :bold nil ))))          
'(jdee-font-lock-modifier-face        ((t(:foreground "#BFBFBF"   :bold nil ))))          
'(jdee-font-lock-number-face          ((t(:foreground "#E6E48A"   :bold nil ))))          
'(jdee-font-lock-package-face         ((t(:foreground "#BFBFBF"   :bold nil ))))          
'(jdee-font-lock-private-face         ((t(:foreground "#BFBFBF"   :bold nil ))))          
'(jdee-font-lock-protected-face       ((t(:foreground "#BFBFBF"   :bold nil ))))          
'(jdee-font-lock-public-face          ((t(:foreground "#BFBFBF"   :bold nil ))))          
'(jdee-font-lock-underline-face       ((t(:foreground "#BFBFBF"   :bold nil :underline nil))))          
)

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;


what hi ha what hi 
what hi ho what hi 
what hi he what hi 
what hi se what hi 
what hi de what hi 

what sam de what ho
what samsam de what ho

what sma de what ho
what sm de what ho
what sa de what ho
what hi in what hi 
what hi ha what hi 
what hi ho what hi 
what hi he what hi 
what hi se what hi 
what hi de what hi 

[[[[ important ]]]]
[[[[ important ]]]]
[[[[ important ]]]]

note :- find not matching word "sam"
M-x regexp-builder
M-x occur 
M-x qr
^[^s]+[^a]+[^m]+$

[[[[ important ]]]]
[[[[ important ]]]]
[[[[ important ]]]]
[[[[ important ]]]]

amazing regex examples for emacs
https://www.emacswiki.org/emacs/RegularExpression#regexp

1- Search for trailing whitespace: C-M-s SPC+$

2- Highlight all trailing whitespace: M-x highlight-regexp RET SPC+$ RET RET

3- Delete trailing whitespace: M-x replace-regexp RET SPC+$ RET RET (same as ‘M-x delete-trailing-whitespace’)

4- Search for open delimiters: C-M-s \s(

5- Search for duplicated words (works across lines): C-M-s \(\<\w+\>\)\s-+\1

6- Count number of words in buffer: M-x how-many RET \< RET

7- Align words beginning with an uppercase letter followed by a lowercase letter: M-: (setq case-fold-search nil) RET then M-x align-regexp RET \<[[:upper:]][[:lower:]] RET

8- Replace word foo by bar (won’t replace fool by barl): M-x replace-regexp RET \<foo\> RET bar

9- Keep only the first two words on each line: M-x replace-regexp RET ^\(\W*\w+\W+\w+\).* RET \1 RET

10- Suppress lines beginning with ;;: M-x flush-lines RET ^;; RET

11- Remove the text after the first ; on each line: M-x replace-regexp RET \([^;]*\);.* RET \1 RET

12- Keep only lines that contain an email address: M-x keep-lines RET \w+\(\.\w+\)?@\(\w\|\.\)+ RET

13- Keep only one instance of consecutive empty lines: M-x replace-regexp RET ^C-q C-j\{2,\} RET C-q C-j RET

14- Keep words or letters in uppercase, one per line: M-x replace-regexp RET [^[:upper:]]+ RET C-o RET

15- List lines beginning with Chapter or Section: M-x occur RET ^\(Chapter\|Section\) RET

16- List lines with more than 80 characters: M-x occur RET ^.\{81,\} RET

;;;;;;;;;;;;;;;;;;;; wow ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

how to add delay to macro ?
M-: sleep-for 5
(sleep-for 5)
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
youtube regex by smplayer 
very important elisp function
(replace-regexp-in-string myRegex myReplacement myStr)
(replace-regexp-in-string "&.*i"    "m "     "hi hi hi &b  sirx")
(replace-regexp-in-string "&.*"   " "     "https://www.youtube.com/watch?v=dq2qGJB64TI&list=PLmxJ-xO1TBymbl49bDq70bCT5IPcXPm_e&index=1")

(defun my-yt ()  
   (interactive)  
         (my-ytt (replace-regexp-in-string  "&.*"   " "   (w3m-print-this-url (point)))))

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
[[emacs book]]
10.7 keyboard macro register => put many macros in registers so it is easy to run instead of save it c-x c-k x a ==>    c-x rja
make new directory by c-x d then M-m  or by + in dired

23.10 page 277 ->  semantic java html javascript,
c-c,j find members/funciton in local file
c-c,J find members/funciton in global Dir 
c-c,n

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

to remember
to remember
to remember

M-p  Go to previous directory in work directory history.
C-c d == M-x smex ;; recent command used 
C-c D == M-x smex-major-mode-commands ;; relevant commands  used 

C-c o == copy line/area if no selection 
Alt-w == copy line/area if no selection 

C-S-e ==> select to the end 
C-S-a ==> select to the begining 

use (macro,template,auto-complete) togather by 
tab   ==> template
C-tab ==> expand
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;




;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;;;;;;;;;;;;;;;;;;;;;;;;;;; new keybinding ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;


================================================================
==============================  JDEE ===========================
================================================================

(jdee-project-file-version "1.0")
(jdee-set-variables
 '(jdee-compile-option-classpath (quote ("/home/jdee_workspace/first/classes")))
 '(jdee-run-option-classpath (quote ("/home/jdee_workspace/first/classes")))
 '(jdee-db-option-classpath (quote ("/home/jdee_workspace/first/classes")))
 '(jdee-compile-option-directory "/home/jdee_workspace/first/classes")
 '(jdee-built-class-path (quote ("/home/jdee_workspace/first/classes")))
 '(jdee-run-working-directory ".")
 '(jdee-sourcepath (quote ("/home/jdee_workspace/first/src"))))


'(jdee-checkstyle-classpath (quote ("/home/jdee/checkstyle-all.jar")))
 '(jdee-checkstyle-style "/home/jdee/checkstyle-all/sun_checks.xml")
 '(jdee-help-browser-function "w3m-browse-url")
 '(jdee-server-dir "~/.emacs.d/jdee-server-master/target")
 '(jdee-sourcepath (quote ("/home/jdee/src_jdk_1.7.zip")))


;;(jdee-set-variables
;;'(jdee-built-class-path (quote ("/home/jdee_workspace/first/classes")))
;;'(jdee-checkstyle-classpath (quote ("/home/jdee/checkstyle-all.jar")))
;;'(jdee-checkstyle-style "/home/jdee/checkstyle-all/sun_checks.xml")
;;'(jdee-compile-option-classpath (quote ("/home/jdee_workspace/first/classes")))
;;'(jdee-compile-option-directory "/home/jdee_workspace/first/classes") ;; dee-compile-option-directory ;; compiled classes directory
;;'(jdee-db-option-classpath (quote ("/home/jdee_workspace/first/classes")))
;;'(jdee-help-browser-function "w3m-browse-url")
;;'(jdee-run-option-classpath (quote ("/home/jdee_workspace/first/classes")))
;;'(jdee-run-working-directory ".")
;; '(jdee-server-dir "~/.emacs.d/jdee-server-master/target")
;; '(jdee-global-classpath (quote ("/home/jdee_workspace/first/src/" "." "/home/jdee_workspace/first/classes/")))
;; '(jdee-sourcepath (quote ("/home/jdee_workspace/first/src" "." "/home/jdee/src_jdk_1.7.zip" "/home/jdee_workspace/first/classes/" ))))
;; '(jdee-run-working-directory "/home/jdee_workspace/first/")

;;'(jdee-compile-option-directory "/home/jdee_workspace/first/classes") ;; dee-compile-option-directory ;; compiled classes directory

;; these three equals global  ;; '(jdee-global-classpath (quote ("/home/jdee_workspace/first/src/" "." "/home/jdee_workspace/first/classes/")))
;; '(jdee-compile-option-classpath (quote ("."  "/home/jdee_workspace/first/classes"  "/home/jdee_workspace/first/src"))) ;;local  classpath
;; '(jdee-run-option-classpath (quote ("/home/jdee_workspace/first/classes" )))
;; '(jdee-db-option-classpath (quote ("/home/jdee_workspace/first/classes"  )))  ;; classpath for interpreter 


 '(jdee-checkstyle-classpath (quote ("/home/jdee/checkstyle-all.jar")))
 '(jdee-checkstyle-style "/home/jdee/checkstyle-all/sun_checks.xml")
 '(jdee-help-browser-function "w3m-browse-url")
 '(jdee-server-dir "~/.emacs.d/jdee-server-master/target")
 '(jdee-sourcepath (quote ("/home/jdee/src_jdk_1.7.zip")))

 '(jdee-server-dir "~/.emacs.d/jdee-server-master/target")
 '(jdee-jdk-doc-url "/home/jdee/jdk-7u79-docs-all.zip")
 '(jdee-global-classpath (quote ("/home/jdee_workspace/first/classes/" "/home/jdee_workspace/first/src"   "/home/jdee/src_jdk_1.7.zip")))
 '(jdee-sourcepath (quote ("./src")))
 '(jdee-ant-enable-find t)
 '(jdee-built-class-path (quote ("./bin"))) 

(jdee-set-variables
 '(jdee-jdk-registry (quote (("1.7" . "/usr/lib/jvm/java-7-openjdk"))))
 '(jdee-jdk (quote ("1.8")))
 '(jdee-jdk-doc-url "http://docs.oracle.com/javase/8/docs/api")
 '(jdee-help-docsets (quote ((nil "http://docs.oracle.com/javase/7/docs/api" "1.7"))))
 '(jdee-enable-abbrev-mode nil)
 '(jdee-gen-k&r t)
 '(jdee-gen-cflow-enable nil)
 '(jdee-complete-function (quote jdee-complete-minibuf))
 '(jdee-electric-return-p t)
 '(jdee-import-auto-collapse-imports nil)
 '(jdee-import-auto-sort t)
 '(jdee-import-sorted-groups (quote gor))
 '(jdee-project-context-switching-enabled-p t)

 ;; '(jdee-expand-classpath-p t)
 ;; '(jdee-lib-directory-names (quote ("/lib$" "/jar$")))
 '(jdee-server-dir "~/workspaces/forks/jdee-server/target/")

 ;; JDE Compile Option Group
 '(jdee-compiler (quote ("javac-server" "")))
 '(jdee-compile-option-command-line-args nil)
 '(jdee-read-compile-args nil)
 '(jdee-compile-option-directory "./target/classes")
 '(jdee-compile-option-deprecation t)
 '(jdee-compile-option-debug (quote ("all" (t t t))))
 '(jdee-compile-option-optimize nil)
 '(jdee-compile-option-depend nil)
 '(jdee-compile-option-vm-args nil)
 '(jdee-compile-option-verbose t)
 '(jdee-compile-option-nowarn nil)
 '(jdee-compile-option-bootclasspath nil)
 '(jdee-compile-enable-kill-buffer nil)

 ;; JDEE Build Option Group

 '(jdee-build-function (quote jdee-ant-build))
 '(jdee-ant-invocation-method (quote ("Script")))
 '(jdee-ant-home "$ANT_HOME")
 '(jdee-ant-user-jar-files "$ANT_CONTRIB_HOME/ant-contrib-1.0b3.jar")
 '(jdee-ant-program "ant")
 '(jdee-ant-args "-emacs")
 '(jdee-ant-buildfile "build.xml")
 '(jdee-ant-read-buildfile nil)
 '(jdee-ant-read-target t)
 '(jdee-ant-interactive-buildfile "build.xml")
 '(jdee-ant-read-args nil)
 '(jdee-ant-enable-find t)
 '(jdee-ant-complete-target t)

 ;; JDEE Run Option Group

 '(jdee-run-working-directory ".")
 '(jdee-run-application-class "com.example.Main")
 '(jdee-run-read-vm-args nil)
 '(jdee-run-read-app-args nil)
 '(jdee-run-option-verbose (quote (t t t)))
 '(jdee-run-option-properties nil)
 ;; '(jdee-run-option-heap-size (quote ((1 . "megabytes") (16 . "megabytes"))))
 ;; '(jdee-run-option-stack-size (quote ((128 . "kilobytes") (400 . "kilobytes"))))
 ;; '(jdee-run-option-garbage-collection (quote (t t)))
 ;; '(jdee-run-option-java-profile (quote (t . "./java.prof")))
 ;; '(jdee-run-option-heap-profile (quote (t "./java.hprof" 5 20 "Allocation objects")))
 '(jdee-run-option-verify (quote (nil t)))
 ;; '(jdee-run-option-vm-args (quote ("-Xdebug" "-Xrunjdwp:transport=dt_socket,address=6001,server=y,suspend=n"
 ;;               "-Xnoagent" "-Djava.compiler=NONE")))
 ;; '(jdee-run-option-debug (quote ("Server" "Socket" "javadebug" "localhost" "6001" "Yes")))
 '(jdee-run-option-application-args nil)

 ;; JDEE Debug Option Group

 '(jdee-debugger (quote ("jdb")))
 '(jdee-db-read-vm-args nil)
 '(jdee-db-read-app-args nil)
 '(jdee-db-option-vm-args nil)
 '(jdee-db-option-application-args nil)

 ;; (jdee-db-option-connect-socket '(nil "6001"))
 ;; (jdee-db-option-connect-shared-memory-name "javadebug")

 ;; JDEE JUnit Option Group

 '(jdee-junit-working-directory jdee-run-working-directory)
 ;; '(jdee-junit-testrunner-type "junit.textui.TestRunner")
 '(jdee-junit-testrunner-type "org.junit.runner.JUnitCore")
 '(jdee-junit-tester-name-tag '("Test" . "Suffix"))

 ;; JDEE Cross-Reference Database
 ;; '(jdee-xref-db-base-directory "./xrefdb")
 ;; '(jdee-xref-store-prefixes (quote ("com.example")))
 ;; '(jdee-xref-cache-size 3))
 )

;; JDEE Abbreviation Templates
(jdee-gen-define-abbrev-template "melse"  '('> "else {" '> 'n '> 'r 'n "}"))
(jdee-gen-define-abbrev-template "sysin"  '("System.in.readline();"))
(jdee-gen-define-abbrev-template "sysout" '("System.out.println(\"" (p "x:") "\");"))
(jdee-gen-define-abbrev-template "syserr" '("System.err.println(\"" (p "x:") "\");"))
(jdee-gen-define-abbrev-template "trace"  '("logger.trace(\"" (p "Message:") "\");"))
(jdee-gen-define-abbrev-template "debug"  '("logger.debug(\"" (p "Message:") "\");"))
(jdee-gen-define-abbrev-template "info"   '("logger.info(\"" (p "Message:") "\");"))
(jdee-gen-define-abbrev-template "warn"   '("logger.warn(\"" (p "Message:") "\");"))
(jdee-gen-define-abbrev-template "error"  '("logger.error(\"" (p "Message:") "\");"))
(jdee-gen-define-abbrev-template "fatal"  '("logger.fatal(\"" (p "Message:") "\");"))

(jdee-sourcepath (quote ("./src/main/java" "./src/test/java" "$JAVA_HOME/src.zip")))

;;;; this is not jdee variables but elisp environment 
(setenv "ANT_HOME" "/usr/local/oss/apache-ant-1.9.6")
(setenv "JAVA_HOME"  "/usr/local/oss/jdk1.8.0_60")
(setenv "MAVEN_HOME" "/usr/local/oss/apache-maven-3.3.3")


jdee-bsh-run					=    C-c C-v C-k	    *Starts the JDEE version of the BeanShell.
    jdee-build					=    C-c C-v C-b	    Rebuild the entire project.
jdee-compile					=    C-c C-v C-c	    Compile the Java program in the current buffer.
jdee-complete					=    C-c C-v C-.	    Displays completions for the Java symbol at point.  This command
jdee-complete-in-line				=    C-c C-v .	            Completes the method or field name at point.  Repeating the command
jdee-debug					=    C-c C-v C-d	    Run the debugger specified by `jdee-debugger' on the Java   application
jdee-debug-cont					=    C-c C-a C-c	    Continues the current debuggee application from its current
jdee-debug-down					=    C-c C-a C-d	    Move down the stack.
jdee-debug-run					=    C-c C-a C-r	    Start the current debuggee application.
jdee-debug-step-into				=    C-c C-a C-n	    Step to the next line in the current program.
jdee-debug-step-out				=    C-c C-a C-o	    Continue execution to the end of the current method.
jdee-debug-step-over				=    C-c C-a C-s	    Step to the next line in the current stack frame.
jdee-debug-toggle-breakpoint			=    C-c C-a C-b	    Sets or clears a breakpoint at the current line.
jdee-debug-up					=    C-c C-a C-u	    Move up the stack.
                jdee-find					=    C-c C-v C-f	    Find a regular expression REGEXP in all of the files in the
jdee-gen-println				=    C-c C-v C-l	    Insert println statement.
jdee-gen-try-catch-wrapper			=    C-c C-v t	    Wrap the region from BEG to END into a try/catch block.
jdee-gen-try-finally-wrapper			=    C-c C-v f	    Wrap the region from BEG to END into a try/finally block.
jdee-help-browse-jdk-doc			=    C-c C-v C-n	    Displays the JDK doc in a web browser.
jdee-help-symbol				=    C-c C-v C-w	    Displays help for a symbol. The symbol may reference an object, a
          jdee-import-all				=    C-c C-v z	    Imports all classes that need to be imported into the current   buffer.
          jdee-import-find-and-import			=    C-c C-v C-z	    *Insert an import statement for a class in the current buffer.
jdee-javadoc-autodoc-at-line			=    C-c C-v j	    Update javadoc comment block for declaration at current line.
jdee-jdb-eval					=    C-c C-a C-e	    (not documented)
jdee-jdb-dump					=    C-c C-a C-x	    (not documented)
jdee-jdb-locals					=    C-c C-a C-l	    (not documented)
jdee-jdb-menu-debug-applet			=    C-c C-v C-t	    Toggle Jdee-Jdb minor mode on or off.
jdee-jdb-print					=    C-c C-a C-p	    (not documented)
jdee-jdb-set					=    C-c C-a C-v	    (not documented)
        jdee-open-class-at-point			=    C-c C-v C-g	    C-c C-v C-y	    Opens the source file that defines the class of the symbol at point   and
jdee-run					=    C-c C-v C-r	    Run the Java application specified by `jdee-run-executable', if
jdee-run-etrace-next				=    C-c C-v C-]	    Jump to the next stack position (next line).
jdee-run-etrace-prev				=    C-c C-v ESC	    Jump to the previous stack position (previous line).
jdee-run-menu-run-applet			=    C-c C-v C-a	    (not documented)
jdee-save-project				=    C-c C-v C-p	    Save source file buffer options in one or more project files.
        jdee-show-superclass-source			=    C-c C-v C-x	    Show the source for the parent of the class at point.
        jdee-wiz-extend-abstract-class			=    C-c C-v e	    *Generate a skeleton implementation of the abstract methods of the
        jdee-wiz-implement-interface			=    C-c C-v i	    *Generate a skeleton implementation of a specified interface. [C-c C-v i]    dont use it,  jdee-wiz-implement-interface, not show all interface method if i modify interface , so use my own C-c C-v C-i      my-jdee-wiz-implement-interface
  jdee-wiz-override-method			=    C-c C-v o	    Overrides a method whose name you specify, [C-c C-v o]  dont use it, when modify the abstract class, not show all abstract method, so use my own C-c C-v C-o  my-jdee-wiz-override-method
  jdee-wiz-update-class-list			=    C-c C-v C-q	    Update the class list used to resolve class names.
jdee-abbrev-mode				=    *Toggle abbreviation mode in JDEE without altering project settings.
  jdee-ant-build					=    Build the current project using Ant.  If interactive, we try to   prompt the
  jdee-ant-projecthelp				=    Display Ant project help for the current project.
  jdee-ant-show-options				=    Show the JDE Ant Options panel.
jdee-backward-camel-tok				=    Go back a reverse camel case token.
jdee-backward-kill-camel-tok			=    <M-backspace>	
jdee-backward-kill-camel-tok			=    Go back a reverse camel case token and kill.
jdee-beginning-of-camel-tok			=    Go to the beginning of a reverese camel case token.
jdee-bookmark-add				=    Add the current visited class as a bookmark.
jdee-bookmark-list				=    List bookmarks.
jdee-bookmark-visit				=    Visit a class by bookmark name.
     jdee-browse-class				=    Browse class in the beanshell class browser
     jdee-browse-class-at-point			=    Displays the class of the object at point in the BeanShell Class
jdee-bsh-exit					=    Closes the existing beanshell process
jdee-bsh-quote-expr				=    Add necessary syntax for a beanshell string (parameter) in the   current
jdee-bug-attach-local-host			=    Attaches the debugger to a process running on local host. This   command connects
jdee-bug-attach-remote-host			=    Attaches the debugger to a process running on a remote host. This   command connects
jdee-bug-attach-via-shared-memory		=    Attaches the debugger to a process running on the same machine via   shared
jdee-bug-break-on-exception			=    (not documented)
jdee-bug-cancel-trace				=    Cancels method and class trace requests for the target process.
jdee-bug-cancel-watch				=    Cancels watch requests for the target process.
jdee-bug-clear-breakpoint			=    Clear the breakpoint at the current line in the current buffer.
jdee-bug-clear-watchpoint			=    (not documented)
jdee-bug-continue				=    Runs the target process. Execution continues from the current   breakpoint.
jdee-bug-debug-app				=    Runs the debugger on the application in the current source buffer.
jdee-bug-detach-process				=    Detaches the debugger from the target process. The target process   continues
jdee-bug-display-loaded-classes			=    Displays the classes currently loaded by the target process.
jdee-bug-display-path-info			=    Displays the base directory, boot classpath, and classpath of the   target process.
jdee-bug-display-variable			=    (not documented)
jdee-bug-down-stack				=    Moves the source cursor down one frame in the call stack and   displays the local
jdee-bug-evaluate-expression			=    Evaluates a Java expression. The Java expression may include
jdee-bug-exit					=    (not documented)
jdee-bug-finish-process				=    Terminates the target process.
jdee-bug-help					=    Displays the JDEbug User's Guide.
jdee-bug-interrupt-thread			=    Interrupts the thread specified by THREAD-ID. The thread cannot be
jdee-bug-jpda-installed-p			=    Returns t if the jpda is installed.
jdee-bug-keys					=    Displays JDEbug keybindings. Use `jdee-keys' to display JDE   keybindings.
jdee-bug-launch-process				=    Starts a virtual machine to run the application
jdee-bug-listen-shmem				=    Listens on shared memory for a vm requiring debugging services.
jdee-bug-listen-socket				=    Listens on socket for a vm requiring debugging services.
jdee-bug-menu					=    JDEbug Minor Mode Menu
jdee-bug-minor-mode				=    Toggle Jdee-Bug minor mode on or off.
jdee-bug-remove-dead-processes			=    Remove dead processes and their associated buffers from the Emacs   environment.
jdee-bug-resume-process				=    Resumes the target process. To resume a particular thread or thread   group,
jdee-bug-resume-thread				=    Resumes the previously suspended thread or group of threads   specified
jdee-bug-save-breakpoints			=    Save breakpoints in project file.
jdee-bug-set-breakpoint				=    Sets a breakpoint at the current line in the current buffer.
jdee-bug-set-conditional-breakpoint		=    (not documented)
jdee-bug-set-target-process			=    Sets the process whose process-id is PROCESS-ID to be
jdee-bug-show-cli-buf				=    Show the command-line interface (CLI) buffer of the target process.
jdee-bug-show-debug-frame			=    Show or open a new frame with the locals, thread, and CLI buffer.
jdee-bug-show-locals-buf			=    Show the local variables buffer of the target process.
jdee-bug-show-object-monitors			=    Shows the threads that are monitoring a specified object, including   the thread
jdee-bug-show-preferences			=    (not documented)
jdee-bug-show-processes				=    (not documented)
    jdee-bug-show-threads			=    Shows all threads and thread-groups running in the target process.
jdee-bug-show-threads-buf			=    Show the threads buffer of the target process.
jdee-bug-start-debugger				=    Starts the debugger.
jdee-bug-step-into				=    Advances to the next step in the method at point except if the method
jdee-bug-step-into-all				=    Advances the process into the function invoked at point.
jdee-bug-step-out				=    Advances the process to the next line in the invoking method.
jdee-bug-step-over				=    Advances the process to the next line in the current method.
jdee-bug-stop-thread				=    Stops a thread and throws an exception. THREAD-ID is the id of the   thread you want
jdee-bug-suspend-process			=    Suspends the target process. To suspend a particular thread or   thread group,
jdee-bug-suspend-thread				=    Suspends the thread or group of threads specified by THREAD-ID.
jdee-bug-thread-show-thread-info		=    (not documented)
jdee-bug-toggle-breakpoint			=    Toggles the breakpoint on the current line.
jdee-bug-toggle-local-variables			=    Enables and disables the retrieval of the local variables. It   toggles
jdee-bug-toggle-stack-info			=    Enables and disables the retrieval of stack info. It toggles the   value
jdee-bug-trace-class-prep			=    Displays the trace class preparation dialog.
jdee-bug-trace-class-unload			=    Displays the trace class unloading dialog.
jdee-bug-trace-exceptions			=    Displays the trace exceptions dialog.
jdee-bug-trace-method-entry			=    Displays the trace method entry dialog.
jdee-bug-trace-method-exit			=    Displays the trace method exit dialog.
jdee-bug-up-stack				=    Moves the source cursor up one frame in the call stack and displays   the local
jdee-bug-watch-field-access			=    Request that the debugger watch for access of a
jdee-bug-watch-field-modification		=    Request that the debugger watch for modifiction of a
    jdee-camel-to-c-const				=    Convert from reverse camel notation to the C constant convention.
    jdee-camel-to-java-property			=    Convert from reverse camel notation to the Java properties   convention.
    jdee-camel-to-lisp				=    Convert from reverse camel notation to the lisp symbol convention.
    jdee-camel-to-sql				=    Convert from reverse camel notation to the SQL underscore   convention.
    jdee-checkstyle					=    Checks the Java program in the current buffer.
    jdee-checkstyle-customize			=    Set Java style checking options.
  jdee-compile-show-options-buffer		=    Show the JDE Compile Options panel.
jdee-complete-display-current-signature		=    Displays the current signature:
jdee-complete-flush-classinfo-cache		=    Flushes all entries in the completion cache
jdee-complete-menu				=    Completes the method or field name at point.  This command displays
jdee-complete-minibuf				=    Completes the method or field name at point.  This command displays
jdee-complete-popup-message			=    Split up the current window horizontally, the new buffer is exactly
jdee-convert-cygwin-path			=    Convert cygwin style PATH to a form acceptable to java vm, using
     jdee-create-new-project				=    Create a new JDEE project file in directory NEW-DIR, saving any
jdee-customize-option				=    Customize SYMBOL, which must be a JDEE option variable.
jdee-customize-variable				=    Customize SYMBOL, which must be a JDEE option variable.
jdee-cygpath					=    If `system-type' is cygwin or cygwin32, converts PATH from cygwin
jdee-cygwin-path-converter-cygpath		=    (not documented)
jdee-cygwin-path-converter-internal		=    Convert cygwin style PATH to a form acceptable to java vm.   Basically
jdee-db-get-class				=    Lookups and return fully qualified class
jdee-db-set-app-args				=    Specify the arguments to be passed to the Java application class.
jdee-db-set-args				=    Specify the arguments (except -classpath) to be passed to the   debugger.
jdee-dbs-target-process-runnable-p		=    (not documented)
jdee-dbs-target-process-steppable-p		=    (not documented)
jdee-debug-applet				=    Runs an applet in the jdb debugger. This function prompts you to   enter
jdee-debug-clear-breakpoint			=    Clear the breakpoint at the current line in the current buffer.
jdee-debug-clear-breakpoints			=    Clear all existing breakpoints.
jdee-debug-list-breakpoints			=    Brings a list of all set breakpoints. It allows the user to jump to   a
jdee-debug-quit					=    Quit debugging the current application.
jdee-debug-set-breakpoint			=    Ask debugger to set a breakpoint at the current line
jdee-debug-where				=    Show current stopping point.
   jdee-describe-map				=    Display binding for MAP which must be a quoted keymap variable
   jdee-describe-path				=    Prints and gives file existance for each path.
   jdee-ejb-entity-bean-buffer			=    <menu-bar> <file> <jdee-new> <EJB> <Entity Bean>     Create a new Java buffer containing an EJB entity bean class of the   same name.
   jdee-ejb-session-bean-buffer			=    <menu-bar> <file> <jdee-new> <EJB> <Session Bean>     Create a new Java buffer containing an EJB session bean class of   the same name.
   jdee-electric-return				=    Invokes `jdee-gen-embrace' to close an open brace at the end of a   line.
   jdee-electric-return-mode			=    Toggles the JDEE's electric return mode. In electric
jdee-end-of-camel-tok				=    Go to the beginning of a reverese camel case token.
   jdee-exception-goto				=    Go to the Java source file and line indicated by an exception stack  trace.
   jdee-find-class-source				=    *Find the source file for a specified fully qualified class.
   jdee-find-dlg					=    Displays a dialog buffer that allows you to set all search options
jdee-font-lock-setup-keywords			=    Setup font lock keywords in `java-font-lock-keywords-4'.
jdee-forward-camel-tok				=    Go forward a reverse camel case token.
  jdee-gen-action-listener			=    Insert skeleton action listener.
  jdee-gen-ant-buildfile				=    insert ant buildfile buffer.
  jdee-gen-ant-buildfile-buffer			=    <menu-bar> <file> <jdee-new> <Build file...> <Ant buildfile>     Create a new Makefile buffer.
  jdee-gen-bean					=    Create a Java bean.
  jdee-gen-bean-buffer				=    <menu-bar> <file> <jdee-new> <Bean...>     Create a new Java buffer containing a Java bean of the same name.
  jdee-gen-beep					=    Insert beep statement.
  jdee-gen-blank-lines				=    Ensure exactly N blank lines.
  jdee-gen-buffer					=    <menu-bar> <file> <jdee-new> <Other...>     Create a new Java buffer containing a code template.
  jdee-gen-case					=    JDE template for case control flow abbreviation.
  jdee-gen-catch					=    JDE template for catch control flow abbreviation.
  jdee-gen-change-listener			=    Insert skeleton change listener.
  jdee-gen-class					=    (not documented)
  jdee-gen-class-buffer				=    <menu-bar> <file> <jdee-new> <Class...>     Create a new Java buffer containing a class of the same name.
  jdee-gen-code					=    Insert the code template specified by NAME at point.
  jdee-gen-console				=    Insert skeleton for a new Java console buffer
  jdee-gen-console-buffer				=    <menu-bar> <file> <jdee-new> <Console...>     Create a new Java buffer containing a console class of the same   name.
  jdee-gen-deep-clone				=    Create a deep clone method at the current point.
  jdee-gen-eif					=    JDE template for eif control flow abbreviation.
  jdee-gen-else					=    JDE template for else control flow abbreviation.
  jdee-gen-embrace				=    Match an open brace at the end of a line
  jdee-gen-entity-bean				=    Adds an implementation of the EJB Entity Bean interface to the
     jdee-gen-equals-method				=    Create an equals method at the current point.
     jdee-gen-equals-return				=    Generate a body of an appropriate override for the
  jdee-gen-event-source-fire-method		=    Insert event source fire method template.
    jdee-gen-exception				=    (not documented)
    jdee-gen-exception-buffer			=    Create a new Java buffer containing an exception class of the same   name.
  jdee-gen-finally				=    JDE template for finally control flow abbreviation.
  jdee-gen-for					=    JDE template for for control flow abbreviation.
  jdee-gen-fori					=    JDE template for fori control flow abbreviation.
  jdee-gen-foriter				=    JDE template for foriter control flow abbreviation.
  jdee-gen-get-set				=    Insert variable at the top of the class and get-set method pair at   point.
  jdee-gen-get-set-methods			=    Generate variables at the top of the class and get and set methods   for
    jdee-gen-hashcode-body				=    Generate a body of a hashCode function.
    jdee-gen-hashcode-method			=    Create a hashCode method at the current point.
    jdee-gen-hibernate-pojo				=    Create an equals method at the current point.
    jdee-gen-hibernate-pojo-equals-method		=    Create an equals method at the current point.
  jdee-gen-if					=    JDE template for if control flow abbreviation.
  jdee-gen-if-else-wrapper			=    Wraps the region from beg to end into an if block.
  jdee-gen-if-wrapper				=    Wraps the region from beg to end into an if block.
  jdee-gen-ife					=    JDE template for ife control flow abbreviation.
  jdee-gen-inner-class				=    (not documented)
  jdee-gen-interface				=    (not documented)
  jdee-gen-interface-buffer			=    <menu-bar> <file> <jdee-new> <Interface...>     Create a new Java buffer containing an interface of the same name.
  jdee-gen-jfc-app				=    Insert skeleton for a JFC app buffer
  jdee-gen-jfc-app-buffer				=    Create a new Java buffer containing a JFC application class.
  jdee-gen-listener-registry			=    Insert listener registry template.
     jdee-gen-log-member				=    Create a log member at the current point.
    jdee-gen-log-statement				=    Create an log statement method at the current point.
jdee-gen-main-method				=    Insert skeleton main method.
jdee-gen-makefile				=    insert makefile buffer.
jdee-gen-makefile-buffer			=    <menu-bar> <file> <jdee-new> <Build file...> <Makefile>     Create a new Makefile buffer.
  jdee-gen-method					=    Insert skeleton method.
jdee-gen-mouse-listener				=    Insert skeleton mouse listener.
jdee-gen-mouse-motion-listener			=    Insert skeleton mouse motion listener.
  jdee-gen-object-methods				=    Generates an equals(), a hashCode() and a toString method.
  jdee-gen-property				=    Insert variable at the top of the class and get-set method pair at  point.
  jdee-gen-property-change-support		=    Insert property change support template.
jdee-gen-section-comment			=    Insert section comment.
  jdee-gen-session-bean				=    Adds an implementation of the EJB Session Bean interface to the
  jdee-gen-switch					=    JDE template for switch control flow abbreviation.
jdee-gen-test-cflow-templates			=    (not documented)
 jdee-gen-tostring-method			=    Create an toString method at the current point.
 jdee-gen-tostring-return			=    Generate a body of an appropriate override for the
jdee-gen-try					=    JDE template for try control flow abbreviation.
jdee-gen-tryf					=    JDE template for tryf control flow abbreviation.
jdee-gen-while					=    JDE template for while control flow abbreviation.
 jdee-gen-window-listener			=    Insert skeleton window listener.
   jdee-get-jdk-dir				=    Get the root directory of the JDK currently being used by the
  jdee-goto-exception				=    Go to the Java source file and line indicated by an exception stack   trace.
  jdee-help-beanshell				=    Displays the BeanShell documentation.
  jdee-help-class					=    Return help for fully qualified CLASS.
jdee-help-class-member				=    Pop up a menu of the fields and methods of CLASS.
jdee-help-describe-docsets			=    (not documented)
  jdee-help-show-jdee-doc				=    Opens the JDEE User's Guide info pages.
  jdee-htmlize-code				=    Write the current code region as an HTML document.
jdee-hungarian-to-reverse-camel-notation	=    Converts Hungarian (i.e. m_sMyApp) to reverse camel notation   (i.e. myApp).
jdee-import-all-show				=    Display a list of the class names referenced in this
jdee-import-all-unique				=    Import all classes uniquely referenced by unqualified class
    jdee-import-at-point				=    Import a class at the current point.
jdee-import-collapse-imports			=    Function that collapse multiple class imports from the same package
    jdee-import-expand-imports			=    Delete all package imports and replace them by their respective
    jdee-import-import				=    *Insert an import statement for a class in the current buffer.
    jdee-import-kill-extra-imports			=    Delete extra Java import statements.
jdee-import-one-class				=    Insert an import into the buffer if not already there.
  jdee-import-organize				=    Organize import statements of the current Java source buffer.
  jdee-import-sort				=    Sort Java import statements alphabetically. In reverse order  or  '(jdee-import-auto-sort t)
jdee-init-abbrev-table				=    Load the abbrev table.
  jdee-java-properties-mode			=    Major mode for Java properties files buffer.
  jdee-java-properties-validate			=    Determine whether or not the properties file conforms to the Sun
  jdee-java-version				=    Get the version of Java used by the JDEE.
  jdee-javadoc-checkdoc				=    Check doc comments of tags in the current buffer.
  jdee-javadoc-checkdoc-at-line			=    Check javadoc comment block of declaration at current line.
  jdee-javadoc-checker-fix			=    Fix documentation of checked tag.
  jdee-javadoc-checker-next			=    Goto the next tag with doc errors.
  jdee-javadoc-checker-previous			=    Go to the previous tag with doc errors.
  jdee-javadoc-checker-quit			=    Quit the `jdee-javadoc-checker' report buffer.
  jdee-javadoc-customize			=    Show the jdee-javadoc options panel.
  jdee-javadoc-make				=    Generates javadoc for the current project. This command runs the
  jdee-javadoc-make-buffer			=    Generates javadoc for the current buffer. This command runs the
  jdee-javadoc-remdoc-at-line			=    Remove javadoc comment block for declaration at current line.
  jdee-javadoc-remove				=    Remove all Javadoc from the region (if one is active) or the   buffer.
jdee-jdb-attach-via-shared-memory		=    Launch jdb in attach mode. In this mode, jdb connects itself to an
jdee-jdb-attach-via-socket			=    Launch jdb in attach mode. In this mode, jdb connects itself to an
jdee-jdb-display				=    Print expression at point.
jdee-jdb-help					=    (not documented)
jdee-jdb-listen-via-shared-memory		=    Launch jdb in listen mode. In this mode, a subsequently
jdee-jdb-listen-via-socket			=    Launch jdb in listen mode. In this mode, jdb launches itself and
jdee-jdb-menu					=    Jdb Minor Mode Menu
  jdee-jeval					=    Uses the JDEE's instance of the BeanShell
jdee-junit-add-test-to-suite			=    Instantiate an addTest method.
  jdee-junit-run					=    Starts junit testrunner with buffer corresponding class name.
jdee-junit-show-options				=    Show the JDE JUnit Options panel.
jdee-junit-test-class				=    Instantiate a test class template.
jdee-junit-test-class-buffer			=    <menu-bar> <file> <jdee-new> <Unit Test...>     Create a buffer containing a skeleton unit test class having the   same name as the
jdee-junit4-test-class				=    Instantiate a test class template.
jdee-junit4-test-class-buffer			=    Create a buffer containing a skeleton unit test class having
    jdee-keys					=    Displays JDEE key bindings. Use `jdee-bug-keys' to display JDEbug
jdee-kill-camel-tok				=    M-d		    Kill a reverse camel case token.
jdee-load-all-project-files			=    Load the project file associated with each Java source buffer.
jdee-load-project-file				=    Load the project file(s) for the Java source file in the current
jdee-make					=    Run the make program specified by `jdee-make-program' with the
jdee-make-show-options				=    Show the JDE Make Options panel.
    jdee-member-to-attribute			=    Convert Java member to a getter or setter syntax.
jdee-menu					=    Menu for JDEE.
jdee-mode					=    Major mode for developing Java applications and applets.
    jdee-open-class-at-event			=    Like `jdee-open-class-at-point', but is mouse-bindable.
    jdee-open-class-source				=    Displays source of the class whose name appears at point in the   current
    jdee-open-project-file				=    Open the project file for the Java source file in the current   buffer.
    jdee-package-update				=    Create or update the package statement in the current Java source
       jdee-parse					=    *Parses the Java source file displayed in the current buffer.
   jdee-parse-get-buffer-class			=    Get the fully qualified name of the class of this buffer.
   jdee-parse-get-classes-at-point			=    (not documented)
   jdee-parse-get-nth-member			=    Return the point at the Nth class member (field) with given   criteria.  The
   jdee-parse-get-top-of-class			=    Return the position and optionally go to where the class prototype   ends and its
  jdee-pi-install-plugins				=    This command installs any plugin distributables that it
  jdee-pi-load-plugins				=    Loads the plugins in the JDEE's plugins directory.
  jdee-project-create-project			=    Creates a JDE project.
jdee-read-class					=    Select a class interactively.  PROMPT is used to prompt the user   for the
  jdee-rename-class				=    Rename the current class to another class name.  This does a class   name
  jdee-replace-fully-qualified-class-at-point	=    Replace the unqualified class at the current point with the fully   qualified
jdee-run-applet					=    Runs an applet. This function prompts you to enter the path of an
jdee-run-etrace-show-at-mouse			=    Jump to the stack position at the mouse click.
jdee-run-etrace-show-at-point			=    Jump to the stack position on this current line.
  jdee-run-main-class				=    Runs the Java program named by `jdee-run-application-class' in
jdee-run-mode					=    Major mode for running Java applications and applets.
jdee-run-set-app				=    Specify the name of the application class to run.
jdee-run-set-app-args				=    Specify the arguments to be passed to the Java application class.
jdee-run-set-applet-doc				=    Specify the doc to be used to view an applet.
jdee-run-set-applet-viewer			=    Sets the viewer to be used to view an applet. The default is
     jdee-run-set-args				=    Specify arguments to be passed to the Java vm.
  jdee-set-compile-options			=    Sets the compile options.
  jdee-set-global-classpath			=    Set the value of `jdee-global-classpath'.
  jdee-set-variables-init-value			=    Set each JDEE variable that has a project-specific customization
jdee-show-abbrevs				=    *Shows a popup menu containing all available expansions.
  jdee-show-autocode-options			=    Show the JDEE Autocode panel.
  jdee-show-class-source				=    Displays source of the class whose name appears at point in the   current
jdee-show-complete-options			=    Show the JDEE Complete Options panel.
jdee-show-debug-options				=    Show the JDEE Debug Options panel.
  jdee-show-interface-source			=    Show the source for the interface implemented by the class at   point.
  jdee-show-project-options			=    Show the JDEE Debug Options panel.
  jdee-show-run-options				=    Show the JDEE Run Options panel.
jdee-show-speedbar				=    Show the speedbar after first checking whether the correct
  jdee-show-wiz-options				=    Show the JDEE Wizards Options panel.
jdee-stat-loc-report				=    Generates a report showing the number of code, comment,
jdee-stat-loc-report-directory			=    Generates a report showing the number of code, comment,
jdee-stat-loc-report-project			=    Generates a report showing the number of code, comment,
jdee-submit-problem-report			=    Submit a problem report for the JDEE.
jdee-toggle-project-switching			=    Toggles project switching on or off.
jdee-version					=    Get the version of JDEE.
  jdee-which-method-update			=    (not documented)
  jdee-wiz-delegate				=    *Generate methods for the class in the current source buffer
  jdee-wiz-extend-abstract-class-internal		=    *Generate a skeleton implementation of the specified abstract   class.
  jdee-wiz-get-set-methods			=    Generates get and set methods for all the private fields
jdee-wiz-implement-event-source			=    *Generate a skeleton implementation of a source of events for the   event listener
jdee-wiz-implement-event-source-internal	=    *Generate a skeleton implementation of a source of events for the   event listener
jdee-wiz-implement-interface-internal		=    *Generate a skeleton implementation of a specified interface.
jdee-wiz-set-bsh-project			=    Update the beanshell's concept of the current project and the
jdee-wiz-tostring				=    Generates a toString() method for tbe class at point. The method
   jdee-wiz-update-implements-clause		=    Updates the implements clause unless extends is non-nil. In that   case the
jdee-xref-customize				=    Display the customization buffer for the xref package.
  jdee-xref-display-call-tree			=    Display an interactive call tree of which function call the current
  jdee-xref-first-caller			=    Put the list of who calls the current function on the stack and c-c c-v a
  jdee-xref-list-uncalled-functions		=    Displays a simple list of function that are never called, at least
  jdee-xref-make-xref-db			=    Create a database of caller to callee (and the reverse) from the
  jdee-xref-next-caller				=    If there are items still on the caller stack, pop the first one off c-c c-v n
  jdee-xref-update				=    Update the caller table after a recompile.  This can be called by
tempo-template-jdee-ant-buildfile		=    insert ant buildfile buffer.
tempo-template-jdee-gen-case			=    JDE template for case control flow abbreviation.
tempo-template-jdee-gen-catch			=    JDE template for catch control flow abbreviation.
tempo-template-jdee-gen-eif			=    JDE template for eif control flow abbreviation.
tempo-template-jdee-gen-else			=    JDE template for else control flow abbreviation.
tempo-template-jdee-gen-finally			=    JDE template for finally control flow abbreviation.
tempo-template-jdee-gen-for			=    JDE template for for control flow abbreviation.
tempo-template-jdee-gen-fori			=    JDE template for fori control flow abbreviation.
tempo-template-jdee-gen-foriter			=    JDE template for foriter control flow abbreviation.
tempo-template-jdee-gen-if			=    JDE template for if control flow abbreviation.
tempo-template-jdee-gen-ife			=    JDE template for ife control flow abbreviation.
tempo-template-jdee-gen-switch			=    JDE template for switch control flow abbreviation.
tempo-template-jdee-gen-try			=    JDE template for try control flow abbreviation.
tempo-template-jdee-gen-tryf			=    JDE template for tryf control flow abbreviation.
tempo-template-jdee-gen-while			=    JDE template for while control flow abbreviation.
tempo-template-jdee-makefile			=    insert makefile buffer.
ac-complete-semantic					==  ac-complete-semantic	         
ac-complete-semantic-raw				==  ac-complete-semantic-raw           
global-semantic-decoration-mode				==  Toggle global use of option `semantic-decoration-mode'.
 global-semantic-highlight-edits-mode			==  Toggle global use of option `semantic-highlight-edits-mode'.
global-semantic-highlight-func-mode			==  Toggle global use of option `semantic-highlight-func-mode'.
global-semantic-idle-breadcrumbs-mode			==  Toggle global-semantic-idle-breadcrumbs-mode.
global-semantic-idle-completions-mode			==  Toggle global-semantic-idle-completions-mode.
  global-semantic-idle-local-symbol-highlight-mode	==  Toggle global-semantic-idle-local-symbol-highlight-mode.
  global-semantic-idle-scheduler-mode			==  Toggle global use of option `semantic-idle-scheduler-mode'.
  global-semantic-idle-summary-mode			==  Toggle Global Semantic Idle Summary mode.
  global-semantic-mru-bookmark-mode			==  Toggle global use of option `semantic-mru-bookmark-mode'.
  global-semantic-show-parser-state-mode			==  Toggle global use of option `semantic-show-parser-state-mode'.
  global-semantic-show-unmatched-syntax-mode		==  Toggle global use of option `semantic-show-unmatched-syntax-mode'.
  global-semantic-stickyfunc-mode				==  Toggle global use of option `semantic-stickyfunc-mode'.
  global-semanticdb-minor-mode				==  Toggle Semantic DB mode.
semantic-add-label					==  Add a LABEL with VALUE on TAG.
semantic-add-system-include				==  Add a system include DIR to path for MODE.
semantic-adebug-analyze					==  Perform `semantic-analyze-current-context'.
semantic-analyze-current-context			==  Analyze the current context at optional POSITION.
semantic-analyze-current-tag				==  Analyze the tag under point.
semantic-analyze-possible-completions			==  Return a list of semantic tags which are possible completions.
semantic-analyze-proto-impl-toggle			==  Toggle between the implementation, and a prototype of tag under point.
semantic-c-add-preprocessor-symbol			==  Add a preprocessor symbol SYM with a REPLACEMENT value.
semantic-calculate-scope				==  Calculate the scope at POINT.
semantic-clear-toplevel-cache				==  Clear the toplevel tag cache for the current buffer.
semantic-complete-analyze-and-replace			==  Perform prompt completion to do in buffer completion.
semantic-complete-analyze-inline			==  C-c , SPC    Perform prompt completion to do in buffer completion.
semantic-complete-analyze-inline-idle			==  Perform prompt completion to do in buffer completion.
semantic-complete-complete-space			==  Complete the partial input in the minibuffer.
semantic-complete-complete-tab				==  Complete the partial input in the minibuffer as far as possible.
semantic-complete-done					==  Accept the current input.
semantic-complete-inline-TAB				==  Perform inline completion.
semantic-complete-inline-done				==  This completion thing is DONE, OR, insert a newline.
semantic-complete-inline-down				==  Focus forwards through the displayor.
semantic-complete-inline-exit				==  Exit inline completion mode.
semantic-complete-inline-project			==  Perform inline completion for any symbol in the current project.
semantic-complete-inline-quit				==  Quit an inline edit.
semantic-complete-inline-up				==  Focus backwards through the displayor.
  semantic-complete-jump				==  C-c , J   Jump to a semantic symbol.
  semantic-complete-jump-local				==  C-c , j   Jump to a local semantic symbol.
  semantic-complete-jump-local-members			==  C-c , m   Jump to a semantic symbol.
semantic-complete-self-insert				==  Like `self-insert-command', but does completion afterwards.
semantic-complete-symbol				==  Complete the symbol under point, using Semantic facilities.
semantic-customize-system-include-path			==  Customize the include path for this `major-mode'.
semantic-debug-idle-function				==  Run the Semantic idle function with debugging turned on.
semantic-debug-idle-work-function			==  Run the Semantic idle work function with debugging turned on.
semantic-decoration-include-visit			==  Visit the included file at point.
semantic-decoration-mode				==  Minor mode for decorating tags.
semantic-describe-buffer				==  Describe the semantic environment for the current buffer.
semantic-describe-tag					==  Describe TAG in the minibuffer.
semantic-dump-parser-warnings				==  Dump any parser warnings.
semantic-gcc-setup					==  Setup Semantic C/C++ parsing based on GCC output.
semantic-highlight-edits-mode				==  Minor mode for highlighting changes made in a buffer.
semantic-highlight-func-menu				==  Popup a menu that displays things to do to the current tag.
semantic-highlight-func-mode				==  Minor mode to highlight the first line of the current tag.
semantic-highlight-func-popup-menu			==  Highlight-Func Menu
semantic-ia-complete-symbol				==  Complete the current symbol at POS.
semantic-ia-complete-tip				==  Pop up a tooltip for completion at POINT.
semantic-ia-describe-class				==  Display all known parts for the datatype TYPENAME.
  semantic-force-refresh					==  C-c , ,,   Force a full refresh of the current buffer's tags.
  semantic-ia-fast-jump					==  Jump to the tag referred to by the code at POINT.
semantic-ia-fast-mouse-jump				==  Jump to the tag referred to by the point clicked on.
semantic-ia-show-doc					==  Display the code-level documentation for the symbol at POINT.
semantic-ia-show-summary				==  Display a summary for the symbol under POINT.
semantic-ia-show-variants				==  Display a list of all variants for the symbol under POINT.
semantic-idle-breadcrumbs--popup-menu			==  Popup a menu that displays things to do to the clicked tag.
semantic-idle-breadcrumbs-mode				==  Display breadcrumbs for the tag under point and its parents.
semantic-idle-breadcrumbs-popup-menu			==  Semantic Breadcrumbs Mode Menu
semantic-idle-completions-mode				==  Toggle Semantic Idle Completions mode.
semantic-idle-local-symbol-highlight-mode		==  Highlight the tag and symbol references of the symbol under point.
semantic-idle-scheduler-mode				==  Minor mode to auto parse buffer following a change.
semantic-idle-summary-mode				==  Toggle Semantic Idle Summary mode.
semantic-imenu-toggle-bucketize-file			==  Toggle the ability of imenu to bucketize the current file.
semantic-imenu-toggle-bucketize-type-parts		==  Toggle the ability of imenu to bucketize the current file.
semantic-imenu-toggle-buckets-to-submenu		==  Toggle the ability of imenu to turn buckets into submenus.
semantic-lex-debug					==  Debug the semantic lexer in the current buffer.
semantic-lex-test					==  Test the semantic lexer in the current buffer.
semantic-mode						==  Toggle parser features (Semantic mode).
semantic-narrow-to-tag					==  Narrow to the region specified by the bounds of TAG.
semantic-remove-system-include				==  Add a system include DIR to path for MODE.
semantic-reset-system-include				==  Reset the system include list to empty for MODE.
semantic-sanity-check					==  Perform a sanity check on the current buffer.
semantic-show-label					==  Show the value of LABEL on TAG.
semantic-show-parser-state-mode				==  Minor mode for displaying parser cache state in the modeline.
semantic-show-unmatched-syntax-mode			==  Minor mode to highlight unmatched lexical syntax tokens.
semantic-show-unmatched-syntax-next			==  Move forward to the next occurrence of unmatched syntax.
semantic-speedbar-analysis				==  Start Speedbar in semantic analysis mode.
semantic-stickyfunc-menu				==  Popup a menu that can help a user understand stickyfunc-mode.
semantic-stickyfunc-mode				==  Minor mode to show the title of a tag in the header line.
semantic-stickyfunc-popup-menu				==  Stickyfunc Menu
semantic-symref						==  C-c , G    Find references to the current tag.
semantic-symref-data-debug-last-result			==  Run the last symref data result in Data Debug.
    semantic-symref-find-file-references-by-name		==  Find a list of references to NAME in the current project.
semantic-symref-find-references-by-name			==  Find a list of references to NAME in the current project.
semantic-symref-find-tags-by-completion			==  Find a list of references to NAME in the current project.
semantic-symref-find-tags-by-name			==  Find a list of tags by NAME in the current project.
semantic-symref-find-tags-by-regexp			==  Find a list of references to NAME in the current project.
semantic-symref-find-text				==  Find a list of occurrences of TEXT in the current project.
semantic-symref-regexp					==  Find references to the a symbol regexp SYM.
semantic-symref-rename-local-variable			==  Fancy way to rename the local variable under point.
   semantic-symref-symbol					==  C-c , g    Find references to the symbol SYM.
semantic-symref-test-count-hits-in-tag			==  Lookup in the current tag the symbol under point.
semantic-test-data-cache				==  Test the data cache.
semantic-toggle-decoration-style			==  Turn on/off the decoration style with NAME.
semanticdb-cleanup-cache-files				==  Cleanup any cache files associated with directories that no longer    exist.
semanticdb-db-typecache-dump				==  Dump the typecache for the current buffer's database.
semanticdb-enable-gnu-global-databases			==  Enable the use of the GNU Global SemanticDB back end for all files    of MODE.
semanticdb-find-adebug-lost-includes			==  Translate the current path, then display the lost includes.
semanticdb-find-adebug-scanned-includes			==  Translate the current path, then display the lost includes.
semanticdb-find-test-translate-path			==  Call and output results of `semanticdb-find-translate-path'.
semanticdb-find-test-translate-path-no-loading		==  Call and output results of `semanticdb-find-translate-path'.
semanticdb-find-toggle-logging				==  Toggle semanticdb logging.
semanticdb-ref-test					==  Dump out the list of references for the current buffer.
semanticdb-reset-log					==  Reset the log buffer.
semanticdb-save-all-db					==  Save all semantic tag databases.
semanticdb-save-current-db				==  Save the current tag database.
semanticdb-toggle-global-mode				==  Toggle use of the Semantic Database feature.
semanticdb-typecache-complete-flush			==  Flush all typecaches referenced by the current buffer.
semanticdb-typecache-dump				==  Dump the typecache for the current buffer.
senator-isearch-toggle-semantic-mode			==  Toggle semantic searching on or off in isearch mode.
beginning-of-defun					==  C-M-a    Move backward to the beginning of a defun.
beginning-of-defun-raw					==  Move point to the character that starts a defun.
bmkp-list-defuns-in-commands-file			==  List the functions defined in `bmkp-bmenu-commands-file'.
c-beginning-of-defun					==  Move backward to the beginning of a defun.
c-defun-name						==  Return the name of the current defun, or NIL if there isn't one.
c-end-of-defun						==  Move forward to the end of a top level declaration.
c-indent-defun						==  Indent the current top-level declaration or macro syntactically.
checkdoc-defun						==  Examine the doc string of the function or variable under point.
checkdoc-eval-defun					==  Evaluate the current form with `eval-defun' and check its    documentation.
checkdoc-ispell-defun					==  Check the style and spelling of the current defun with Ispell.
compile-defun						==  Compile and evaluate the current top-level form.
edebug-defun						==  Evaluate the top level form point is in, stepping through with    Edebug.
elint-defun						==  Lint the function at point.
end-of-defun						==  C-M-e,    Move forward to next end of defun.
er/mark-defun						==  Mark defun around or in front of point.
eval-defun						==  Evaluate the top-level form containing point, or after point.
lisp-eval-defun						==  Send the current defun to the Lisp process made by \[run-lisp].
mark-defun						==  C-M-h    Put mark at end of this defun, point at beginning.
mc/mark-all-like-this-in-defun				==  Mark all like this in defun.
mc/mark-all-symbols-like-this-in-defun			==  Mark all symbols like this in defun.
mc/mark-all-words-like-this-in-defun			==  Mark all words like this in defun.
narrow-to-defun						==  C-c f n d, C-x n d    Make text outside current defun invisible.
senator-mark-defun					==  Put mark at end of this defun, point at beginning.
senator-narrow-to-defun					==  Make text outside current defun invisible.
testcover-this-defun					==  Start coverage on function under point.

c-add-style		      M-x ... RET
   Adds a style to `c-style-alist', or updates an existing one.
c-awk-menu		      M-x ... RET
   AWK Mode Commands
c-backslash-region	      C-c C-\
   Insert, align, or delete end-of-line backslashes on the lines in
   the region.
c-backward-conditional	      C-c C-p
   Move back across a preprocessor conditional, leaving mark behind.
c-backward-into-nomenclature  M-x ... RET
   Compatibility alias for `c-backward-subword'.
c-beginning-of-defun	      C-M-a
   Move backward to the beginning of a defun.
c-beginning-of-statement      <menu-bar> <Java> <Backward Statement>, M-a
   Go to the beginning of the innermost C statement.
c-c++-menu		      M-x ... RET
   C++ Mode Commands
c-c-menu		      M-x ... RET
   C Mode Commands
c-comment-line-break-function M-x ... RET
   Break line at point and indent, continuing comment or macro if
   within one.
c-context-line-break	      M-x ... RET
   Do a line break suitable to the context.
c-context-open-line	      M-x ... RET
   Insert a line break suitable to the context and leave point before
   it.
c-cpp-define-name	      M-x ... RET
   Return the name of the current CPP macro, or NIL if we're not in
   one.
c-defun-name		      M-x ... RET
   Return the name of the current defun, or NIL if there isn't one.
c-down-conditional	      M-x ... RET
   Move forward into the next preprocessor conditional, leaving mark
   behind.
c-down-conditional-with-else  M-x ... RET
   Move forward into the next preprocessor conditional, including
   "#else".
c-electric-backspace	      DEL
   Delete the preceding character or whitespace.
c-electric-brace	      {, }
   Insert a brace.
c-electric-colon	      :
   Insert a colon.
c-electric-delete	      M-x ... RET
   Deletes preceding or following character or whitespace.
c-electric-delete-forward     C-d
   Delete the following character or whitespace.
c-electric-lt-gt	      M-x ... RET
   Insert a "<" or ">" character.
c-electric-paren	      (, )
   Insert a parenthesis.
c-electric-pound	      #
   Insert a "#".
c-electric-semi&comma	      ;, ,
   Insert a comma or semicolon.
c-electric-slash	      /
   Insert a slash character.
c-electric-star		      *
   Insert a star character.
c-end-of-defun		      C-M-e
   Move forward to the end of a top level declaration.
c-end-of-statement	      <menu-bar> <Java> <Forward Statement>, M-e
   Go to the end of the innermost C statement.
c-fill-paragraph	      <menu-bar> <Java> <Fill Comment Paragraph>, M-q
   Like \[fill-paragraph] but handles C and C++ style comments.
c-forward-conditional	      C-c C-n
   Move forward across a preprocessor conditional, leaving mark
   behind.
c-forward-into-nomenclature   M-x ... RET
   Compatibility alias for `c-forward-subword'.
c-guess			      M-x ... RET
   Guess the style in the region up to `c-guess-region-max', and
   install it.
c-guess-buffer		      M-x ... RET
   Guess the style on the whole current buffer, and install it.
c-guess-buffer-no-install     <menu-bar> <Java> <Style...> <Guess Style from this Buffer>
   Guess the style on the whole current buffer; don't install it.
c-guess-dump-accumulator      M-x ... RET
   Show `c-guess-accumulator'.
c-guess-dump-guessed-style    M-x ... RET
   Show the guessed style.
c-guess-dump-guessed-values   M-x ... RET
   Show `c-guess-guessed-basic-offset' and
   `c-guess-guessed-offsets-alist'.
c-guess-install		      <menu-bar> <Java> <Style...> <Install the Last Guessed Style...>
   Install the latest guessed style into the current buffer.
c-guess-no-install	      M-x ... RET
   Guess the style in the region up to `c-guess-region-max'; don't
   install it.
c-guess-region		      M-x ... RET
   Guess the style on the region and install it.
c-guess-region-no-install     M-x ... RET
   Guess the style on the region; don't install it.
c-guess-reset-accumulator     M-x ... RET
   Reset `c-guess-accumulator'.
c-guess-view		      <menu-bar> <Java> <Style...> <View the Last Guessed Style>
   Emit emacs lisp code which defines the last guessed style.
c-hungry-backspace	      M-x ... RET
   Delete the preceding character or all preceding whitespace
c-hungry-delete		      M-x ... RET
   Delete a non-whitespace char, or all whitespace up to the next
   non-whitespace char.
c-hungry-delete-backwards     C-c DEL, C-c C-DEL, C-c <C-backspace>
   Delete the preceding character or all preceding whitespace
c-hungry-delete-forward	      C-c <deletechar>, C-c <C-deletechar>, C-c <C-delete>
   Delete the following character or all following whitespace
c-idl-menu		      M-x ... RET
   IDL Mode Commands
c-indent-command	      M-x ... RET
   Indent current line as C code, and/or insert some whitespace.
c-indent-defun		      C-c C-q
   Indent the current top-level declaration or macro syntactically.
c-indent-exp		      <menu-bar> <Java> <Indent Expression>, C-M-q
   Indent each line in the balanced expression following point
   syntactically.
c-indent-line-or-region	      <menu-bar> <Java> <Indent Line or Region>
   Indent active region, current line, or block starting on this line.
c-java-menu		      M-x ... RET
   Java Mode Commands
c-macro-expand		      M-x ... RET
   Expand C macros in the region, using the C preprocessor.
c-mark-function		      C-M-h
   Put mark at end of the current top-level declaration or macro,
   point at beginning.
c-mode			      M-x ... RET
   Major mode for editing K&R and ANSI C code.
c-objc-menu		      M-x ... RET
   ObjC Mode Commands
c-pike-menu		      M-x ... RET
   Pike Mode Commands
c-put-char-property-fun	      M-x ... RET
   Do nothing and return nil.
c-scope-operator	      M-x ... RET
   Insert a double colon scope operator at point.
c-set-offset		      C-c C-o
   Change the value of a syntactic element symbol in
   `c-offsets-alist'.
c-set-style		      <menu-bar> <Java> <Style...> <Set Style...>, C-c .
   Set the current buffer to use the style STYLENAME.
c-setup-paragraph-variables   M-x ... RET
   Fix things up for paragraph recognition and filling inside comments    and
c-show-syntactic-information  C-c C-s
   Show syntactic information for current line.
c-submit-bug-report	      C-c C-b
   Submit via mail a bug report on CC Mode.
c-syntactic-information-on-region M-x ... RET
   Insert a comment with the syntactic analysis on every line in the    region.
c-toggle-auto-hungry-state    M-x ... RET
   Toggle auto-newline and hungry-delete-key features.
c-toggle-auto-newline	      <menu-bar> <Java> <Toggle...> <Auto newline>
   Toggle auto-newline feature.
c-toggle-auto-state	      M-x ... RET
   Toggle auto-newline feature.
c-toggle-electric-state	      <menu-bar> <Java> <Toggle...> <Electric mode>, C-c C-l
   Toggle the electric indentation feature.
c-toggle-hungry-state	      <menu-bar> <Java> <Toggle...> <Hungry delete>
   Toggle hungry-delete-key feature.
c-toggle-parse-state-debug    M-x ... RET
   (not documented)
c-toggle-syntactic-indentation <menu-bar> <Java> <Toggle...> <Syntactic indentation>
   Toggle syntactic indentation.
c-up-conditional	      C-c C-u
   Move back to the containing preprocessor conditional, leaving mark    behind.
c-up-conditional-with-else    M-x ... RET
   Move back to the containing preprocessor conditional, including    "#else".

M-x jdee-bug-set-breakpoint
M-x jdee-bug-clear-breakpoint		
C-c C-v C-d     jdee-debug
C-c C-a C-n	jdee-debug-step-into
C-c C-a C-s	jdee-debug-step-over
C-c C-a C-o	jdee-debug-step-out
C-c C-a C-b	jdee-debug-toggle-breakpoint
C-c C-a C-c	jdee-debug-cont
C-c C-a C-d	jdee-debug-down
C-c C-a C-e	jdee-jdb-eval
C-c C-a C-l	jdee-jdb-locals
C-c C-a C-p	jdee-jdb-print
C-c C-a C-r	jdee-debug-run
C-c C-a C-u	jdee-debug-up
C-c C-a C-v	jdee-jdb-set
C-c C-a C-x	jdee-jdb-dump
<M-backspace>	jdee-backward-kill-camel-tok
M-d		jdee-kill-camel-tok
C-c C-v C-a	jdee-run-menu-run-applet
C-c C-v C-d	jdee-debug
C-c C-v C-g	jdee-open-class-at-point
C-c C-v C-p	jdee-save-project
C-c C-v C-t	jdee-jdb-menu-debug-applet
C-c C-v C-y	jdee-open-class-at-point
C-c C-v C-z	jdee-import-find-and-import
C-c C-v ESC	jdee-run-etrace-prev
C-c C-v C-]	jdee-run-etrace-next
C-c C-v e	jdee-wiz-extend-abstract-class
C-c C-v f	jdee-gen-try-finally-wrapper
C-c C-v i	jdee-wiz-implement-interface [C-c C-v i]    dont use it,  jdee-wiz-implement-interface, not show all interface method if i modify interface , so use my own C-c C-v C-i      my-jdee-wiz-implement-interface
C-c C-v j	jdee-javadoc-autodoc-at-line
C-c C-v o	jdee-wiz-override-method, [C-c C-v o]  dont use it, when modify the abstract class, not show all abstract method, so use my own C-c C-v C-o my-jdee-wiz-override-method
C-c C-v t	jdee-gen-try-catch-wrapper
C-c C-v z	jdee-import-all
M-a		c-beginning-of-statement
M-e		c-end-of-statement
M-j		c-indent-new-comment-line
M-q		c-fill-paragraph
C-c C-a		c-toggle-auto-newline
C-c C-b		c-submit-bug-report
C-c C-d		(disable this key )c-hungry-delete-forward
C-c C-n		c-forward-conditional
C-c C-p		c-backward-conditional
C-c C-s		c-show-syntactic-information
C-c C-u		c-up-conditional
C-c C-\		c-backslash-region
C-c .		c-set-style
C-c DEL		c-hungry-delete-backwards
C-c C-DEL	c-hungry-delete-backwards
C-c <C-backspace>		c-hungry-delete-backwards
C-c <C-delete>			c-hungry-delete-forward
C-c <C-deletechar>		c-hungry-delete-forward
C-c <deletechar>		c-hungry-delete-forward
C-c ! C-c	flycheck-compile
C-c ! C-w	flycheck-copy-errors-as-kill
C-c ! ?		flycheck-describe-checker
C-c ! C		flycheck-clear
C-c ! H		display-local-help
C-c ! V		flycheck-version
C-c ! c		flycheck-buffer
C-c ! e		flycheck-set-checker-executable
C-c ! h		flycheck-display-error-at-point
C-c ! i		flycheck-manual
C-c ! l		flycheck-list-errors
C-c ! n		flycheck-next-error
C-c ! p		flycheck-previous-error
C-c ! s		flycheck-select-checker
C-c ! v		flycheck-verify-setup
C-c ! x		flycheck-disable-checker
C-j		minibuffer-force-complete-and-exit
C-M-i		minibuffer-force-complete


[[ i changed  C-c ,  to  C-c C-d   ]] so dont use these keybinding
C-c , C-w	senator-kill-tag
C-c , C-y	senator-yank-tag
C-c , ESC	Prefix Command
C-c , SPC	semantic-complete-analyze-inline
C-c , ,	semantic-force-refresh
C-c , G	semantic-symref
C-c , J	semantic-complete-jump
C-c , g	semantic-symref-symbol
C-c , j	semantic-complete-jump-local
C-c , l	semantic-analyze-possible-completions
C-c , m	semantic-complete-jump-local-members
C-c , n	senator-next-tag
C-c , p	senator-previous-tag
C-c , r	senator-copy-tag-to-register
C-c , u	senator-go-to-up-reference
C-c , <down> senator-transpose-tags-down
C-c , <up>	senator-transpose-tags-up
C-c , M-w	senator-



;;;;; Start ;;;;;;;;;;;;;;;;;; [[ very important jdee ]] ;;;;;;;;



[wow]
c-x r f   save frame to register,if use it in dired then must use return(enter) instead of a



[wow wow wow wow]
c-c j      ==> visit class, methods, and variables. but if i face slowly open class file then use c-c c-d t
C-c C-d t  ==> jdee-open-class-source, if i face slowly open class file 
M-.        ==> search for  current identifier  (xref-find-definitions IDENTIFIER) in TAGS files

[wow]
C-c C-d i  my-jdee-import-all,update-package,rescan path, flush-class-info, remove extra-import

[wow]
M-x my-insert-date   ==>  2018-07-30
i put it in the emacs_config.el

[wow]
c-c & c-s  => view all snippet 

w3m bookmark will appear in g(open the following url ),then M-p/n to visit all urls

[wow]
;; auto-revert-mode ==> refresh if and only if it changed,(this is not a real refresh)
M-x auto-revert-mode(if it changed) =>(if it changed) refresh current page every 5 seconds if it changed,  (auto-revert-interval 14) to change interval from 5 to 20
    status-bar look at  ARev

[wow]
;; visit all classes (doc files web pages)
M-x jdee-help-class => then view all classes 
M-x w ==> a then v ==> a (add current url to webbookmark) then v (view bookmar)
or
use bookmar(not w3m-bookmark) hahahhiiiiiiiiiiiiiii doc_servlet doc_jdk doc_struts

M-x jdee-package-update ==> to chanage package as the current folder and subfolder
 
[wow]
C-c C-d  r	senator-copy-tag-to-register, jump to method by c-x r j  or yank it(paste header not body  by )C-xr i 
or use [old]c-c b ==> list last edited methods 

j   j in dired to visit any file


;; important 
M-x sh-execute-region or M-| sh ===>> run area of commands

M-x jtag or jtags-update-tags-files => update all tags-table-files in list  tags-table-list in prj.el

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
M-x jtags-show-documentation by jtags no need to do any thing, it will connect to docs.oracle.com/javase/8 by
    put it will view the class only not the method
 '(jtags-javadoc-root-alist
   (quote
    (("^java\\." . "https://docs.oracle.com/javase/8/docs/api")
     ("^javax\\." . "https://docs.oracle.com/javase/8/docs/api"))))


M-x jdee-import-kill-extra-imports ==>  then M-x jdee-import-collapse-imports
M-x jdee-import-collapse-imports   ==>  import java.util.* , not good for sun convention

c-c f or c-tab => hippie-expand not from dic
c-z    ==> auto-compete from dic

  (global-set-key [C-tab] 'hippie-expand)
  (global-set-key (kbd "C-c f") 'hippie-expand)

;; [[ very important when update ]]
;; [[ very important when update ]]
;; to use the  (macro,template,auto-complete) togather 
;; tab    ==> template
;; c-z    ==> auto-compete menu  one word (must be the only word  means fuzzy
;; C-tab  ==> hippie-expand not from dict, c-c f same as c-tab
;; [[ very important when update ]]
;; [[ very important when update ]]

c-c z emmet-mode
# binding yassnippet tag #binding: C-c C-c e in web-mode only
# binding: C-c C-c e  /root/.emacs.d/mysnippet/web-mode/jsp-el
C-c C-c e  jsp-el 
C-c C-c s  jsp-scriptlet
C-c C-c d  jsp-directive-page
C-c C-c c  jsp-comment
C-c C-c j  jsp-jstl


[wow] C-c c-z ==> emmet-wrap-with-markup, put html tag around area


M-x apropos then ;; wow for help 
dont use M-x package-reinstall without M-x list-packages, or use it only after M-x list-packages then M-x package-reinstall

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
[[ problem solved ]]

the best solution is upate all packages from emacs -q ,
wow, wow, wow, crazy jdee problem in emacs 25.2

jdee debug emacs 25
Requires: emacs-24.3, flycheck-30, memoize-1.0.1, dash-2.13.0, s-1.12.0

remove flycheck from emacs-q then exit then remove jdee from emacs -q then exit, then M-x package-autoremove
then install flycheck from emacs -q then exit then install jdee from emacs -q  then exit 


flycheck stop it in jdee by  '(jdee-flycheck-enable-p nil), because flymake use the ecj-eclipse

c-c j = jtags witll jump to uncompresed file then jdee-shell will start again as jump to new project
flymake* => means Flymake is currently running, so if close the buffer, the GUI wrong will appears,
Q:- how to solve the problem ?
A:-  '(flymake-start-syntax-check-on-find-file nil), so flymake will not work on new file, else if you change the file. and remote resources will be read-only
X:- dont close buffers, when flymake* is appears
X:- start flymake again by =>
X:- i think if i can jump to jtags compressed files, then no flymake, then no jdee-shell 

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
please please 
use c-v and m-v to scroll file

;;; finall i do it jtags.
c-c j => visit class,method,variable => my-jtags-show-declaration-after-update-this-tags-file in .emacs, no need to M-. then c-c j, why ? because see my-jtags-show-declaration in .emacs, if slowly class use c-c c-d t
c-c J => visit my-jtags-second-search-with-args , visit tags with c-c c-d j
c-c s => return =>  (pop-tag-mark)
M-. (not used)=> rebuild this project tags => jtags-update-this-tags-file, no need just c-c j, if not foud tag it will rebuild TAG file automatically, why ? because see my-jtags-show-declaration in .emacs
M-x jtag or  jtags-update-tags-files => update all tags-table-files in list  tags-table-list in prj.el
in prj.el edit for every project  (setq tags-table-list '("/home/jdee_workspace/sourcePathx/sources/src_jdk_1.7"))


go to defintion of class or method or variable
M-x list-packages, download jtags 

;; so at every src will create Tag file, so i have now Two TAG files
;; put it in prj.el
  (setq tags-table-list '("/home/jdee_workspace/app2/src"
                          "/home/jdee_workspace/sourcePathx/sources/src_jdk_1.7"
  			))
;; dont ask y/n before updating TAGS 
(setq tags-revert-without-query 't)


then just type to visit method decleration
M-x jtags-show-declaration  or my-jtags-show-declaration-after-update-this-tags-file in .emacs 

to return just type
C-c s

;;; end of jtags ;;;;;

[no need ]
;; google it =>  (cedet, semantic and java)  ==> will solve all problems in jdee setup(config),so can visit method directly in project
(require 'cedet)
(global-semanticdb-minor-mode t)
(require 'semantic/db-javap)
(cedet-java-jdk-root "/usr/lib/jvm/java-7-openjdk-i386")
(semanticdb-javap-classpath '("/usr/lib/jvm/java-7-openjdk-i386/jre/lib/rt.jar"))
[no need ]


very very very important note :-
in find grep => just press n to vist file not ( tab then enter )
;;;;;;;;;;;;;;;;;;;;;;

[old]c-c b => list edited methods 
c-c ,, to update parse or c-c c-d ,

;;;;;;;;;;;;;;;;;;;;;;;

note :- method in jdee is green bracess {} , C-M-e/a to go out method 
        class is white braces {}
;;;;;;;;;;;;;;;;;;;;;;;;

# for java template from package https://github.com/nekop/yasnippet-java-mode
# snippet for get class name without extension, use it for constructors

${1:access$$(yas-choose-value'("public" "private" "protected" " "))} `(file-name-sans-extension (buffer-name))` (${2:type} ${3:value}, ${4:type} ${5:value}) {

public ${1:`(file-name-sans-extension (buffer-name))`}($2) {
package ${1:`(mapconcat 'identity (split-string (replace-regexp-in-string ".*src\\(/\\(main\\|test\\)\\)?\\(/java\\)?" "" default-directory) "/" t) ".")`};

# very important note :- 
to install new jdee => look at requirement packages like flycheck and memorize, and update them , so you can install new version of jdee
Requires: emacs-24.3, flycheck-30, memoize-1.0.1, dash-2.13.0, s-1.12.0

===========================
[[[[  fix errors in emacs  []]]]]
c-h e ==> logging file in emacs, to fix startup errors 

;; view report for all emacs called functions
M-x profile-start
M-x profile-report
M-x profile-stop


C-c C-d  ,      semantic-force-refresh, use it with c-c b[old]
C-c C-d  ,      semantic-force-refresh
C-c C-d  ,      semantic-force-refresh

# c-c c-v c-q =>  c-c c-v z then space to change file space space space 
# if not see the c-c c-v z import all
[dont use it ] C-c C-v z    jdee-import-all, use it after C-c C-v C-q  =>   jdee-wiz-update-class-list (no need,because i add it to my-jdee-import-all)
C-c C-d i my jdee-import-all betther than C-c C-v z



implements c-c c-v c-i => must space before the command c-c c-v c-i or i

C-c C-v C-i     M-x my-jdee-wiz-implement-interface, must space before it
C-c C-v C-o     M-x my-jdee-wiz-override-method, overrid exteds methods, ==>>if not work correct  M-x  jdee-complete-flush-classinfo-cache, but i create my own C-c C-v C-o my-jdee-wiz-override-method

[C-c C-v i]    dont use it,use c-c c-v c-i  jdee-wiz-implement-interface, not show all interface method if i modify interface , so use my own C-c C-v C-i      my-jdee-wiz-implement-interface
[C-c C-v o]    dont use it,use c-c c-v c-o , when modify the abstract class, not show all abstract method, so use my own C-c C-v C-o my-jdee-wiz-override-method

C-c C-v k  my-jdee-bsh-restart, jumping between two project, must restart beanShell, dont run C-c c-v c-k 
or c-c c-v c-i it will restart beanshell

===========================

[no need ]
[old and deprecated by jtags]
# how can visit method in jdee emacs ?? by jtags man
copy method method("hi",123);
c-c c-v c-f then print method(.*{
that is it, i create funcition ==> M-, in .emacs 
 note :- mark positions is 16 position, to change it, can change local and global mark by M-x cs mark-command
c-,   (in classj  jump to members  instance variable and methods, c-u c-space to return, if found errors press c-c c-d , for reparsed buffer
M-,   (out class) search method, c-m-j to return,or c-x c-spacae  ===== press n p to visit method, or press tab then enter  because you are in the grep mode, so just press n p 
[old]M-.    visit class , c-c s to return 
c-2 r jump to local variable and rename it, dont dont dont use M-. to  jump to local variable, to return c-c s




C-M-a   c-beginning-of-defun or method, use it better than c-c n, can jump to class name 
C-M-e   c-end-of-defun or method , use it better than c-c p
c-M-x   kill(){}
c-M-h   mark (){}
C-c  n	        senator-next-tag or method and variables     ;; if set it to global you can use it with xml(or use c-c c-t in web-mode
C-c  p	        senator-previous-tag or method and variables ;; if set it to global you can use it with xml


umlx => folder to image
uml  => text to image

# how can i hide class in plantuml ~/plantumlDependency.txt
at the end of file, just write 
hide package.package.class




in prj.el "../sourcePathx/sources/servlet-api-src" will find inside all methods in  .zip  source files

;; next / previous  methods/variables
C-c  n	        senator-next-tag or method and variables     ;; if set it to global you can use it with xml(or use c-c c-t in web-mode
C-c  p	        senator-previous-tag or method and variables ;; if set it to global you can use it with xml
then c-x z to repeat zzzzzzzzzz

;; very important note
;; c-c g can jump to files in directory from anywhere, no need to type c-c c-v l to return to top prj.el

;; ant options
must install apt-get install ant ant-contrib
must install apt-get install ant ant-contrib
must install apt-get install ant ant-contrib
ant        => generte default section 
ant -v     =>  verbose
ant -d     => debug  
ant -diagnostics =>  (solve problem)
ant genJar  => generate genJar section(without dash -)
ant clean   => run clean section and all  depends="" 


;; generate war files for web =>  web.war 
apt-get install ant ant-contrib
apt-get install ant ant-contrib
apt-get install ant ant-contrib
M-x jdee-ant-build  genJar
or
ant genJar       =>  because i didnt put  it  as default attribue 
or shell command  
ant genJar
;;;;;;;;;;;;;;;;;;;

apt-get install ant ant-contrib
apt-get install ant ant-contrib
apt-get install ant ant-contrib

M-x jdee-ant-build  from any where
c-c c-v c-b =>  jdee-ant-build from java-files
or can use form command line => ant 

M-x my-tomcat-start                  (from my .emacs)
M-x my-tomcat-stop                   (from my .emacs)
M-x my-tomcat-clean                  (from my .emacs)
M-x tomcat-Copy-My-Project-Files-to-Tomcat (from my restclient.rest )

M-x jdee-import-kill-extra-imports ;;del duplicated imports and extra 
M-x my-yas (clean my-yas minor mode)

[old]
===== c-tab c-z ==========
;; c-tab it will take lines as sorted form here 
    (try-expand-dabbrev try-expand-all-abbrevs try-expand-line try-expand-line-all-buffers try-expand-dabbrev-from-kill try-expand-dabbrev-all-buffers  try-expand-list try-expand-list-all-buffers try-complete-file-name-partially try-complete-file-name)))
C-tab to comlete, use it with (ac my-yas macro)
C-tab or M-/ to expand   (global-set-key [C-tab] 'hippie-expand)

C-z => auto-complete to view the menu from ac
===================================

in dired I to open java without mode (dired-info)
in dired j to jump to file
jdee-gen-exception				=    (not documented)

[java doc]
c-c c-v c-w  view doc without internet, by jdee
M-x jtags-show-documentation by jtags no need to do any thing, it will connect to docs.oracle.com/javase/8 by jtags

===== ac-->ee  ===========for all project add it to ac ================
>
very important note 
jdee-mode and java-mode both in one mode
ac  auto-complete-mode can see only jdee-mode
template    yas-snippet-mode can see only java-mode

for any project add all project words to auto-complete and yas-snippet
so you can always complete the words easy 
to do this by command line 
# put all java files in one file called allJavaStream.txt
find .  -iname  '*.java'  -type f  -exec cat  {} >> "/root/Desktop/a.txt" \;
# (replace) remove all special char by space
sed -i  's/[^[:alpha:]\t]/ /g' a.txt
# replace all space by new line
sed -e 's/\s\+/\n/g' old > new
sed -e 's/\s\+/\n/g' a.txt > b.txt
# sort all file
sort b.txt -o c.txt
# delete duplicate word
uniq filename, must be sorted like this command  ( sort filename | uniq )
or 
M-x dd
then add the final file to jdee-mode  /root/.emacs.d/elpa/auto-complete-20160416.604/dict/jdee-mode, i changed dict location

the next step to generate file for web-mode /root/.emacs.d/elpa/auto-complete-20160416.604/dict/web-mode
# filter by dired and delete all jars,classes,gif,java,...,
# keep only  jsp,html,xml 
and do the same command above

================================

# replace all special char by space
M-x rx  [^[:alpha:]]  replaced by space 


for print just type pr tab not c-c c-v c-l

C-shift-0 ======> c-) ==========> mult cursor qurey .ace-mc-add-multiple-cursors
================================

# how query replace string in multi files ? ex :- replace doGet by doPost
1- fd  (find-dired) 8fd8 be carefull and type -iname  '*.java'  -type f (to select files only,not select the processes files #file) 	
2- t   (select all)
3- Q   (dired-do-find-regexp-and-replace) ;; not work, use instead M-x diredQ
4- y space or no 

================================

use restclient  by c-c c-c  for send requset headers http  c-c c-n/p
use umlx  then edit the  file then use uml (see .emacs )

================================

note:- very important note about accessing dir files and find text in files 

focus on prj.el and always access it by c-c c-v l then[[[[[ no need u cat use cache of c-c g from folder of subfolder directly, no need to go to super-folder ]]]]]
c-c G  ==> list directory
c-c g  ==> list files, ;; c-c g can jump to files in directory from anywhere, no need to type c-c c-v l to return to top prj.el
c-c c-g ===> clean
M-x fg ==> search in files or (c-c c-v c-f in jdee)
================================

C-c G    ===> list directory ( in /home/emacs_config.el)
C-c r    ===> (work in mini buffer only) cache while searching. 
C-c g    ===> list files ;; c-c g can jump to files in directory from anywhere, no need to type c-c c-v l to return to top prj.el
C-c C-g  ===>  fiplr clean cache
================================

what is .#file in emacs ?
it is file being currently editied(in use) by autosave version
so dont delete it .

================================
c-c c-d c-n  global create full path class(directory+file) at once , my-create-new-class in .emacs,
    	     can use it for jdee or in emacs any where(just press c-g when try to write package and class data) 
    	     you can use it in emacs every where 

c-x c-f c-f ===>> to create a specific file without ido help 
+       c-f ===>> to create a new Directory(in dired) without ido help
c-x d  M-m  ===>> to create a new Directory(every where) without ido help
================================

    c-c c-c  comment region,
c-u c-c c-c  uncomment region 

M-;      commnet uncomment 

[[[[[[[[[[]]]]]]]]]]
      c-q ==> local  go to last change(s) 
c-m-j c-q ==> global go to last change(s)  

[old] M-. ==(back)=> C-c s (back in the java tree)
[old] M-, ==(back)=> (c-u c-space in the same class) (c-m-j in outside class)

C-c s => means return in visited classes by M-, M-. c-c c-v c-x , . . . 

c-spc c-spc   Set the mark
c-u c-space   pop local mark  
c-x c-space   Pop Global Mark 

c-x z  zzzzz         repeat last command 
[[[[[[[[[[]]]]]]]]]]



# copy fully class name
M-x jdee-read-class         =  put JFrame then yank  javax.swing.JFrame or put cursor on class 
(defalias 'rc   'jdee-read-class)

rc = jdee-read-class => put JFrame then yank  javax.swing.JFrame or put cursor on class 

# send argument to java application 
M-x jdee-run-set-app-args
java ClassName  args1 args2

# to send argument to java  machine
M-x jdee-run-set-args
java -ea -da -dsa  ClassName 

# view as tree by ztree command in dired , press space space space space space space to open file
# x to expand all ztree
java snippet template C-c & c-s
con2 con3 con4 con5 con6 con7 con8 con9 constructor argument for java

M-x ds only hahahah hii
C-u s => -alh   // sort by name (the deafult )  
C-u s => -alht  // sort by modification  time mtime
              when press s then switch between (name and modification time)
C-u s => -alhS  // sort files and view as kb and Mb  
C-u s => -alhc  // sort by creation time ctime
C-u s => -alhX  // sort by extension
C-u s => -alhu  // sort by access time (not work)

jdee solve problem by
C-c C-v k    => restart beanShell
C-c C-v a/n    => restart xref db (i change it to update xref db automatically in .emacs )
               => restart semantic db 
C-c C-v C-q  =>   jdee-wiz-update-class-list
M-x jdee-package-update	    =   Create or update the package statement in the current Java source

C-x r r   copy rectangle then C-x r i (paste it )
c-x r w   save the window to register


M-x my-Spell   just for select region, space =>(dont fix it)
M-x my-Spell   for current word.  or  M-$(fix current word) 

or or or or or or

M-x flyspell-buffer then
M-x flyspell-mode c-, c-.
C-M-i  ispell-complete-word


C-M-a   c-beginning-of-defun
C-M-e   c-end-of-defun
C-M-h   c-mark-function

===================== C-c C-v C-f ===========================================
note:- c-c c-v c-f :- search only folder not zip files because find command cant search inside zip file,
       and it will search inside jdee-sourcepath in prj.el
       just extract zip files then find grep or c-c c-v c-f 

[[[ C-c C-v C-f ==> grep with -i(ignorecase) but  grep without -e(regex)]]]
M-x man grep example ,use for grep in  C-c C-v C-f ==>  \? \+ \{ \| \(  \)    instead of ?+{(|)

? => 0 or 1
+ => 1 or *
^ beginning line
$ eding of the line
note :- grep -i(ignorecase)   C-c C-v C-f
[0123456789]   = one optional digit

use for grep in  C-c C-v C-f ==> special char  \+\?\{\|\(\)   instead of ?+{|()
use for grep -e  ?+{|()  instead of   \? \+ \{ \| \(  \) 

[[ special case ]]
if the word begin by dash - must be like this 
nmap | grep    "\-sV"
nmap | grep -e "-sV"
if not not not beging by dash - , it is ok 
nmap | grep    "sv-sV"

print.*sleep   = print then many char then sleep
^a[h]\+.[ae]\?[^i]d$  == ^begin of line,    ahmad ahmed Ahmed Ahhhhhmed $end of the line, not ahmid 
M-C-s first\|second first or second 

M C-s   \<one\>   ==> search only the word only , same as M-s w
M-s w             ==> search only the word only without CamelCase 
M-s _             ==> search only the word only without _, same as M-s . (but this for current word)

M-s _ search one word, no  underscore
M-s w search one word, yes underscore 

remember this (no space at the end of regex )
8fj8   ==>   ^a[h]\+.[ae]\?[^i]d$  first.*second
8fg8   ==>   find . \( -iname  '*file*.txt' -or -and  -iname '*.pdf'   -type f \) -exec grep -Hni "^a[h]\+.[ae]\?[^i]d$" "first.*second"  {} + 
8fd8   ==>   -iname  '*file*.txt' -or -and -iname '*.pdf' -type f   -iregex ".*/e[a-zA-Z0-9].*\.pdf"   -regextype sed -iregex ".*[t]\{1,2\}"   -cmin -60  -mmin +60 -amin -20 -size +50M -size -100M  -user user -group group 
M-x fg
M-x fd
M-x fgd

================ end of C-c C-v C-f ====================

 [wrong ][important in java can use it by visit prj.el(C-c C-v l)  then c-c g ]

C-c g   fiplr find files , in java can use it by visit prj.el(C-c C-v l) then c-c g 
C-c C-g fiplr-clear-cache
[right ] no need to jump to c-c c-v l, fiplr can list all files in sub/top directory which in cache
;; c-c g can jump to files in directory from anywhere, no need to type c-c c-v l to return to top prj.el


c-j  avy word or region select or c-j then c-j then c-w to kill region between two jump points
c-S-j  pop up mark , go to the original point reversibly.
c-c c  avy copy line in eclipse for open emacs, i change it to c-c c for copy lines and c-c k for cut or kill
c-c k  avy move line i change it to c-c k for kill or cut lines 
c-x c  duplicate area or line

M-up   move lines up
M-down move lines down



[ c-'  iedit-mode ] ;; can use it for modify instance variable
C-'  select iedit mode
tab  next or C-i 
M-;  toggle selection or remove selection
c-c a  iedit hide unmatched lines
shift-tab previous
M-space blank
M-N    numbering lines 
c-g    exit
M-SPC		iedit-blank-occurrences
M-<		iedit-goto-first-occurrence
M->		iedit-goto-last-occurrence
[wow] M-M       iedit-switch-to-mc-mode
f1 m            help-key-description for iedit 


and more and more of keys in iedit-lib.el


C-x n n   narrow-to-region
C-x n d   narrow-to-defun 
C-x n w   wide 

C-c C-d  j 	(fast jump to variables and methods ) semantic-complete-jump-local  ;;local  (both) tab or space
C-c C-v C-f     jdee-find(M-x fg)
M-x jdee-find-dlg


C-c C-v t	jdee-gen-try-catch-wrapper ((both))
C-c C-v f	jdee-gen-try-finally-wrapper

c-x ps                ==> format-all,  format code like eclipse code, format all sql,web,java,c,css,xml, all languages 
C-c C-v C-q    jdee-wiz-update-class-list
[not good]C-c C-q renident defun or tag, c-indent-defun, 


C-c C-v e	jdee-wiz-extend-abstract-class,[need prj.el setting]
C-c i     getter/setter jdee-wiz-get-set-methods
c-c t     jdee-gen-object-methods, Generates an equals(), a hashCode() and a toString method.

M-x jdee-wiz-delegate	  *Generate methods for the class in the current source buffer
M-x jdee-wiz-implement-event-source	   *Generate a skeleton implementation of a source of events for the    event listener
M-x jdee-wiz-implement-event-source-internal    *Generate a skeleton implementation of a source of events for the    event listener
M-x jdee-wiz-implement-interface-internal    *Generate a skeleton implementation of a specified interface.
M-x jdee-wiz-tostring	     Generates a toString() method for tbe class at point. The method

C-c C-v C-n     jdee-help-browse-jdk-doc
C-c C-v C-w     jdee-help-symbol (current cursor)
C-c C-v w       jdee-help-class  (enter it)
'(jdee-help-browser-function (quote w3m-browse-url)) ;; open doc by w3m 
'(jdee-help-browser-function (quote browse-url-firefox)) ;; open doc by firefox

[not used]M-.             jdee-open-class-at-point
C-c C-v C-x     jdee-show-superclass-source; 
C-c C-v x       jdee-show-interface-source  
C-c c-d t       jdee-open-class-source, same as (emacs,eclipse)(enter it)

c-c c-v a   jdee-xref-first-caller      =  Put the list of who calls the current function on the stack and,or c-c c-v c-f
            if you face problems just search for called method by c-c c-v c-f that is it, that is it,
c-c c-v n   jdee-xref-next-caller       =  If there are items still on the caller stack, pop the first one off c-c c-v n
[it is overrid by my function (my-jdee-make-xref-then-call-first-method) so no need to call C-c C-v ; ]

[delet it ]C-c C-v ;   jdee-xref-make-xref-db, then c-c c-v a/n , Create a database of caller to callee (and the reverse) from the

c-c c-v a/n  same as same as C-c C-d g/G(working in the same directory only so will gave wrong result), so always use C-c c-v a/n
            if you face problems just search for called method by c-c c-v c-f that is it, that is it,

[very important ]
M-x  jdee-xref-list-uncalled-functions	=  Displays a simple list of function that are never called, at least
M-x  jdee-xref-display-call-tree        =  Display an interactive call tree of which function call the current
M-x  jdee-xref-update		        =  Update the caller table after a recompile.  This can be called by

M-x jdee-read-class         =  put JFrame then yank  javax.swing.JFrame
M-x jdee-describe-path	    =  Prints and gives file existance for each path.

note:-
C-c C-d  j 	local  (fast jump to variables and methods ) semantic-complete-jump-local  ;;local  (both) tab or space 
C-c C-d  J	global semantic-complete-jump        ;; global (both) tab or space 


[[[ C-c C-d jJgGm are same ]]]
C-c C-d  j 	(fast jump to variables and methods ) semantic-complete-jump-local  ;;local  (both) tab or space 
C-c C-d g/G using grep in the current folder so this will make many mistake, so dont use it
C-c C-d  g	semantic-symref-symbol ;; find instance variable not local variable  ;;  local like M-x occur for current class ;;  tab then  space , for the current folder 
C-c C-d  G	semantic-symref        ;; current Method M-x occur for all for the current folder 
C-c C-d  J	semantic-complete-jump        ;;global (both) tab or space 
C-c C-d  m	semantic-complete-jump-local-members, tab or space (enter the method), if not work press M-,,,,,
[[[ warrning dont use it  ]]]


C-c C-v  j      jdee-javadoc-autodoc-at-line
c-c c-v  J	jdee-javadoc-remdoc-at-line,(define-key jdee-mode-map (kbd "C-c C-v J") ' jdee-javadoc-remdoc-at-line) ;; remove javadoc
C-c C-d  j/J 	(fast jump to variables and methods ) semantic-complete-jump-local  ;;local j  (both) tab or space  golobal(J)

C-c C-w 	subword-mode(for jdee-mode  only)
C-c C-v C-s	speedbar-frame-mode (for all modes)

C-c C-d  C-w	senator-kill-tag ;; use C-y to yank or paste 
C-c C-d  C-c o	senator-copy-tag ;; use C-y to yank or paste 
C-c C-d  M-w	senator-copy-tag ;; use C-y to yank or paste 

                tag means method
C-c  n	        senator-next-tag or method     ;; if set it to global you can use it with xml(or use c-c c-t in web-mode
C-c  p	        senator-previous-tag or method ;; if set it to global you can use it with xml

M-*      go back .pop-tag-mark for all modes javascrip lisp , c++ 
C-c s    go back .pop-tag-mark ;; pop class,method, and varaible, for java only ,(define-key jdee-mode-map (kbd "C-c s") 'pop-tag-mark)
c-u c-space local 
c-x c-space global

[old]M-.             jdee-open-class-at-point, to go back use  C-c s 
[old]M-,             my-jdee-find-method-at-project 

[old]
M-,,      my-visit-method to visit method with class.method , to go back  C-c s (c-u c-space)
                if the method have space that is means we have overloading methods => C-c C-d j then C-y
                if the method have not space then no overloading methods
then goback by  C-c s (c-u c-space)



[wow]
C-c C-d  r	senator-copy-tag-to-register, jump to method by c-x r j  or yank it(paste header not body  by )C-xr i 
or use [old]c-c b ==> list last edited methods 




C-c C-d  <up>	senator-transpose-tags-up
C-c C-d  <down> senator-transpose-tags-down


C-c c-d n   M-x jdee-gen-class (both), alternative use c-c c-d c-n 


C-c @ C-c    Hide/show  the current block (M-x hs-hide-block). (add-hook 'jdee-mode-hook 'hs-minor-mode) ;; open jdee first then open hs-minor mode  ;; C-c @ C-c        
C-c @ C-l hide all   then  C-c @ C-M-s show all


C-M-x    kill (){} kill parentheses  and contents,put the cursor at begining of parentheses,C-M-x   kill-sexp  
C-M-h    c-mark-function
C-M-n/p/d/u  next (){} M-x forward-list , M-x backward-list (not found in eclipse).
C-M-t    trans(){} Transpose expressions (transpose-sexps).

very improtant for java and web-mode 
C-c & C-s	yas-insert-snippet
C-c & C-n	yas-new-snippet
C-c & C-v	yas-visit-snippet-file

M-x glass or gls ;; best way to view CamelCaseWord as Camel_Case_Word, M-x glasses-mode  eyes
M-x jdee-checkstyle.  c-c c-f  then c-n/p
C-2 r  rename local variable, ===>>>  tab <<<======  to nivigate other variables M-x semantic-symref-rename-local-variable , C-c C-c to enter 
for instance variable use c-' tab M-; c-c a 

[[[ first flymake]]]
;; This is the simple, robust (strong)  and painfully slow 
;; method, in which flymake forks a new jvm process each time it
;; decides to error check the buffer.
;; `flymake-allowed-file-name-masks' to (\"\\.java\\'\" jdee-ecj-flymake-init jdee-ecj-flymake-cleanup)"

C-c e     flymake-display-err-menu-for-current-line
C-c w     flymake-popup-current-error-menu
C-c r     flymake-goto-prev-error
;; now I am using flymake server ((second flymake )), if i face problem in flymake i will change it to jdee-ecj-flymake-init

[[[ second  flymake]]]
;; flymake server  and faster
;;  and might cause problems if you use flymake with non-java  buffers.so delete all other flymake masks in .emacs from flymake-allowed-file-name-masks', keep it only for java
;; `flymake-allowed-file-name-masks' to (\"\\.java\\'\" jdee-ecj-server-flymake-init jdee-ecj-flymake-cleanup)"

[dont use it ] C-c C-v  z      jdee-import-all, use it after C-c C-v C-q  =>   jdee-wiz-update-class-list
C-c C-d i    my jdee-import-all betther than C-c C-v z
C-c C-v C-z	jdee-import-find-and-import , at current point 
M-x jdee-import-import  ==> import package.class

M-x wk    whick key, M-x  which-key-show-keymap
M-x firefox-url  'browse-url-firefox
M-x firefox-external  'w3m-external-view-current-url) ;; w3m ==> firefox
M-x jdee-keys	=    Displays JDEE key bindings. Use `jdee-bug-keys' to display JDEbug
M-s . find a current word, M-s o (occur)
C-s c-w better than M-s .

C-c C-v C-b  =  (jdee-build) by ant, use also maven ~/.emacs.d/maven/apache-maven-3.3.9/bin/mvn
M-x ren-class it will stop auto-save-mode then call  jdee-rename-class, because will see ## revert name , it is my function (my-jdee-rename-class)

jdee-camel-to-c-const	= HiSirThen  HI_SIR_THEN  

jdee-gen-property			=	    Insert variable at the top of the class and get-set method pair at  point.
jdee-goto-exception			=	    Go to the Java source file and line indicated by an exception stack   trace.
jdee-member-to-attribute		=	    Convert Java member to a getter or setter syntax.
jdee-which-method-update		=	    (not documented)
jdee-xref-display-call-tree		=	    Display an interactive call tree of which function call the current
jdee-xref-first-caller			=	    Put the list of who calls the current function on the stack and
jdee-xref-list-uncalled-functions	=	    Displays a simple list of function that are never called, at least
jdee-xref-make-xref-db			=	    Create a database of caller to callee (and the reverse) from the
jdee-xref-next-caller			=	    If there are items still on the caller stack, pop the first one off
jdee-xref-update			=	    Update the caller table after a recompile.  This can be called by
semantic-symref-find-file-references-by-name	=     Find a list of references to NAME in the current project.

use (macro,template,auto-complete) togather by 
tab   ==> template
C-tab ==> expand, or  for M-/

& jad or !jad    ===>  java decompiler jad , apt-get install jad , in dired just type !jad ==> jad  Hi.class or jad -p Hi.class > Hi.java 

instead use  jadx or jadx-gui
jadx /home/downloads/me.jar  -d  /home/downloads/exportSourceCode  ;; must absolute path

debug
[[[ C-c C-a C- nexl d ]]]
ha ha hiiiiiiiiiiiiiiiii wow

M-x jdee-bug-watch-field-modification ==> watch all scjpThread.Thread1.y  ==> watch wow 
M-x jdee-bug ==> to see debug

class id => package.name
watch all scjpThread.Thread1.y  ==> watch wow 
where all ==> print stack , or c-c c-a c-d print stack for current thread
trace methods 0x1 ==> trace methods in main

jdee debug https://www.tutorialspoint.com/jdb/jdb_quick_guide.htm
C-c C-a C-b  Toggle Breakpoint
C-c C-v C-d  jdee-debug
C-c C-a C-n  step by step,divide in 
C-c C-a C-o  step over, continue to this method
C-c C-a C-e/p/x  evaluate expression, print values for array and list and variable 
C-c C-a C-l  print localize
C-c C-a C-s  dont divide in,step next in the current stack frame
C-c C-a C-d  Display stack in the current thread.
M-x jdee-thread

in debug write : help

threads [threadgroup]     -- list threads
thread <thread id>        -- set default thread
suspend [thread id(s)]    -- suspend threads (default: all)
resume [thread id(s)]     -- resume threads (default: all)
where [<thread id> | all] -- dump a thread's stack
where [<thread id> | all]-- dump a thread's stack, with pc info
up [n frames]             -- move up a thread's stack
down [n frames]           -- move down a thread's stack
kill <thread id> <expr>   -- kill a thread with the given exception object
interrupt <thread id>     -- interrupt a thread

lock <expr>               -- print lock info for an object
lock this 
threadlocks [thread id]   -- print lock info for a thread

[[importan view all locks ]]
threadlocks all
thread 0x19c => destroyJava thread or main 

C-c C-v C-[ or C-c C-v C-].   view the source line corresponding to a point in the exception stack trace, right-click the corresponding stack trace line in the run buffer. You can move up and down the stack trace by typing the key combinations 

C-. without any thing will display instance variables
M-x umlx uml diagram for currenct class with package 
M-x umlx     convert folder(dired ) to image called  ~/plantumlDependency.png, can run command from the java file 

M-x uml draw  plantuml code ,convert txt to image and open it 

C-c C-q         renident defun or tag, c-indent-defun, like format in eclipse 
tab             reindent line
C-M-q           reindent all lines according to


it is exist in this link 
https://github.com/lvc/japi-compliance-checker

C-c C-v C-l     jdee-gen-println, or just type pr tab
C-c C-v l       open prj.el,  jdee-open-project-file 


edit instance variable by C-' [iedit-mode]
C-'  select iedit mode
tab  next, C-i
M-;  toggle selection or remove selection
[wow] c-c a  iedit hide unmatched lines
shift-tab previous
M-space blank
M-N    numbering lines 

C-; er/expand-region
C-: er/contract-region( C-Shift-;  )

F10             menu-bar

C-.             jdee-complete-minibuf
C-c C-v .	jdee-complete-in-line
C-c C-v C-.	jdee-complete

C-c C-d c   ==> "delete build folder  then call jdee-compile", don't use C-c C-v C-c 
C-c C-v C-c     jdee-compile
C-c C-v C-r     jdee-run
C-c C-v C-b     jdee-build
C-c C-v C-k     jdee-bsh-run

C-c C-c 	comment-region, uncomment by  C-u C-c C-c , use M-; selected region
C-c C-l 	c-toggle-electric-state
C-c C-o 	c-set-offset

C-c C-d  l	show all members (this. ) semantic-analyze-possible-completions
C-c C-d  ,      semantic-force-refresh

[old]
;;C-c C-d  s      

M-x rs           M-x replace-string 
C-c C-d  SPC	semantic-complete-analyze-inline
C-c C-d  u	senator-go-to-up-reference


C-M-h    mark function c-mark-function
C-M-SPC  mark (){} Put mark after following expression (mark-sexp).
C-M-n/p  next (){} M-x forward-list , M-x backward-list (not found in eclipse).
C-M-u/d  down (){} M-x backward-up-list, M-x down-list
C-M-f/b  same (){} forward/backward for parentheses,put the cursor at begining of parentheses (forward-sexp)(backward-sexp)
C-M-x    kill (){} kill parentheses  and contents,put the cursor at begining of parentheses,C-M-x   kill-sexp  
C-M-t    trans(){} Transpose expressions (transpose-sexps).

C-M-.           xref-find-apropos PATTERN in TAGS files
 
M-x check-parens        =>  to find any unbalanced parentheses and unbalanced

C-c C-z jdee-import-organize, just put in the prj.el =>  '(jdee-import-auto-sort t)
M-; selected region, , // comment befor, M-; area comment ) ((both))

M-x edit-abbrev ;; edit for all all abbrevs

;;;;;; END ;;;;;;;;;;;;;;;;; [[ very important jdee ]] ;;;;;;;;;;;;;;;;;;;;;;;;



;; very important for jdee jdee-run 
;; in jdee error always seel the global classpath, home/first/mypackage Hi.java ;; dont put the mypackage name in classpath

;; very important 
;; to config JDEE as IDE use M-x cs Semantic Idle defun
;; refactor and semantic convert emacs to IDE , and for c and java it is will be semantic-refactor or srefactor package 

;;  - convert from eclipse and jdee project by generate prj.el from jde-int
;;  https://www.emacswiki.org/emacs/Jdee-Eclipse-integration
;;  https://www.emacswiki.org/emacs/JavaDevelopmentEnvironment
;;  http://wttools.sourceforge.net/emacs-stuff/emacsandjdee.html

;;  highlight refrerence like eclipse 
;;  M-x cs   Global Semantic Idle Local Symbol Highlight Mode  
   '(global-semantic-idle-local-symbol-highlight-mode t nil (semantic/idle))
;; M-x cs   Global Semantic Idle Scheduler Mode:
   '(global-semantic-idle-scheduler-mode t)
   '(semantic-idle-symbol-highlight ((t (:box (:line-width 1 :color "yellow3")))))
;; must be after region 


very very very important 
[[[ how to write code in emacs ]]]
emacs book page 277  section 23.1 to 24.1  M-x pdf  o => outline tab ==> sub outline  , space to open 

jdee tutorial 
http://jdee.sourceforge.net/jdedoc/html/jde-ug/jde-ug-content.html

wow 
jdee new project 
https://github.com/jdee-emacs/jdee-test/blob/master/prj.el.template

jdee settings
http://tkj.freeshell.org/emacs/java/


ecj.jar from http://cvs.savannah.gnu.org/viewvc/emacs/emacs/lisp/progmodes/flymake.el
'(jdee-compiler (quote (("eclipse java compiler server" "/home/jdee/ecj.jar"))))

ecj.jar option in wordpress
https://jwickers.wordpress.com/2008/10/13/tweaking-flymake-for-java/

java -cp /home/jdee/ecj.jar org.eclipse.jdt.internal.compiler.batch.Main -?

================== end of  JDEE ====================
================== end of  JDEE ====================
================== end of  JDEE ====================


;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

http://web-mode.org/
https://www.gnu.org/software/emacs/manual/html_mono/nxml-mode.html

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;


================  Web-mode ====================
very important note :- add new snippet in web-mode /root/.emacs.d/mysnippet/web-mode/web-xml
then can call it by C-c & C-s   or or   C-c C-s 
in autocomplete a means snippet 


C-c   general
C-c-t tag 
C-c-e elemnt
C-c-a attribute
C-c-b block

[wow select tag]
c-c c-e a => select content 
c-c c-e s => select content+tag
c-c c-t s => select beginging of tag

General                                            
M-; comment / uncomment line(s)       ;; select after if dont select region  
C-c C-f toggle folding on a tag/block ;; more than, less than 
C-i[tab] indent entire buffer                   
C-c C-s insert snippet                         
C-c C-w toggle display of invalid whitespaces  ;; in jdee subword-mode
C-c C- jumping
mark and expand  C-c C-m or C-c enter, c-m =enter

Block                         
C-c C-b b block beginning	  
C-c C-b c block close    	  
C-c C-b e block end      	  
C-c C-b k block kill     	  
C-c C-b n next block     	  
C-c C-b p previous block 	  
C-c C-b s block select      

DOM                                
C-c C-d a replace apostrophes    
C-c C-d d show tag mismatch      
C-c C-d e replace HTML entities  
C-c C-d n normalize              
C-c C-d q replace dumb quotes    
C-c C-d t traverse dom tree      
C-c C-d x xpath                  

HTML attribute                   	     
C-c C-a b attribute beginning	     
C-c C-a e attribute end      	     
C-c C-a i attribute insert   	     
C-c C-a k attribute kill     	     
C-c C-a n attribute next     	     
C-c C-a p attribute previous 	     
C-c C-a s attribute select   	     
C-c C-a t attribute transpose        

HTML tag                        
C-c C-t a sort attributes     
C-c C-t b tag beginning       
C-c C-t e tag end             
C-c C-t m fetch matching tag  
C-c C-t n next tag            
C-c C-t p previous tag        
C-c C-t s select tag          

HTML element                                                                                                 
C-c C-e / element close, or just type  </  
C-c C-e a select element content                                                                         
C-c C-e b element beginning                                                                              
C-c C-e c element clone                
C-c C-e d child element (down)         
C-c C-e e element end                  
C-c C-e f toggle folding on children   
C-c C-e i element insert               
C-c C-e k element kill                 
C-c C-e m mute blanks between children 
C-c C-e n next element                 
C-c C-e p previous element             
C-c C-e r rename element                                                 
C-c C-e s select element                                                                                 
C-c C-e t transpose element                                                                              
C-c C-e u parent element (up)                                                                            
C-c C-e v element vanish                                                                                 
C-c C-e w wrap element, select area then c-c c-e w then tag 

Helper functions
web-mode-apostrophes-replace : replace ' by ’ (only in HTML content)
web-mode-entities-replace : replace html entities (only in HTML content)
web-mode-quotes-replace : replace dumb quotes (only in HTML content)


======================= w3m-emacs ==============================

w3m bookmark will appear in g(open the following url ),then M-p/n to visit all urls

 w3m log by ~/.w3m/log file for request and response

[wow]
a then v or V (new buffer) => bookmark ==> edit bookmarks here ==> /home/importantDIR/EmacsBookmark/w3mBookmark

C-t a	Add urls of all pages being visited to the bookmark.

cg c-y  edit current url
M-k	Display cookies and enable you to manage them.
C-c M-h  history
c-c c-s pop up menu for tabs
^       go up in url 
A	Display the report of changes in web pages.
s 	search google in same buffer
S 	search google in new  buffer 
R 	not r, Reload the current page.
B 	Move back to the previous page in the history.
U 	Visit the web page.
M-d 	Download the URL.
d 	Download the URL under point.
\ 	Display the html source of the current page.
=       display the response headers 
b 	Scroll down the current window, or go to the previous page.
[ ]     next/previous form 
{ }     next/previoud image
g       current buffer
G	new session(tab) 
u	copy Display the url under point and put it into `kill-ring'.
c	copy Display the url of the current page and put it into `kill-ring'.
	see file /root/.w3m/.cookie

I	Display the image under point in the external viewer.
M-i	Save the image under point to a file.
C-c C-npwk
C-c C-t	Create a copy of the current page as a new session.
C-c C-n	Turn the page of emacs-w3m buffers ahead.
C-c C-p	Turn the page of emacs-w3m buffers behind.
C-c C-w	Delete the current emacs-w3m buffer.
C-c C-k	Try to stop internal processes of a page.
M-x firefox-external

t	Toggle the visibility of an image under point.
T	Toggle the visibility of all images.
M-T	Turn off to display all images.
M-[	Zoom in an image on the point.
M-]	Zoom out an image on the point.
E	Edit the local file displayed as the current page.
e	Edit the local file which is pointed to by URL under point.
D	Display a directory tree.


================================================================

C-M-j winner-undo
C-M-k winner-redo , return to the original buffer(modified buffer )

c-x tab // move
c-x c-j // shift+6 ^, and in dired use it to go to up folder
c-x c-o // delete empty line

M-x describe-variable  
M-x font-lock-mode    => disable theme for this buffer 

use (macro,template,auto-complete) togather by 
tab   ==> template
C-tab ==> expand

M-q  ==>> fill-paragraph

c-x o    ==> ace-window  then char
C-u C-x o ==> swap current window to 
C-u C-u C-x o => delete window 

C-h-n   ==>emacs news 
[not used ]C-c f ==> C-x


;; in dired  compress and uncompress .zip file
;; Z uncompress
;; z compress, can compress multi dir 
;; _ file type like file *


[[mark ring]]

c-spc c-spc          Set the mark, pushing it onto the mark ring, without activating i
c-x c-space          Pop Global Mark (jump to another  buffer for mark ring  ), c-u c-space (inside buffer)
c-u c-space          pop local mark  (inside buffer for mark ring )

[old]
C-c C-d  s

M-x rs     M-x replace-string
C-x l            Count Lines Buffer

M-x uml      convert txt to image and open it 
M-x umlx     convert folder(dired ) to image called  ~/plantumlDependency.png, can run command from the java file 

C-s C-w   ==> use C-s C-w [increase words    ] search part of the word  the word under cursor, best is M-s . for the full word
M-s .     ==> dont use it,[not increase words] search full  word under cursor, then M-s o to occur 

M C-s   \<one\>   ==> search only the word only , same as M-s w
M-s w             ==> search only the word only without CamelCase 
M-s _             ==> search only the word only without _, same as M-s . (but this for current word)

M-s _ search one word, no  underscore
M-s w search one word, yes underscore 



M-x  ztree ==> diff two directory not files
x to expand all ztree
x to undo expand  all ztree
M-x  global-subword-mode

M-x gt       google-translate
M-x reader   festival
M-x my-yt       play youtube
M-x emms-play-url 8hayat , then M-x stop

==========================================

change end line for unix and windows ???
M-x set-buffer-file-coding-system, then give a value of “mac”, “dos”, “unix
C-x Enter f  =>>  dos or unix
C-x Enter F  =>>  dos or unix

==========================================
c-u M-! date or by template yasnippet just right time  Sun May 17 07:23:03 2015

M-x calendar
g    go
g d  go to sepsific day
g i  islamic calendar goto

p    print 
p i  print islamic calendar current day
p c  print current day of year

M-=  select from to days then count days
S    sunrise sunset 
.    go to today
A a		appt-add  alarm will stay for 999 second wow ;; in kali ,in title bar set always on top
A d		appt-delete alarm

M-S-6   delete-indentation M-^
M-S-4   is spell word correct( M-$)
F10     menu bar

c-x m       display current url inside w3m
M-x locate  find in the system database
M-x wk      whick key show help
M-x firefox-url  ;;browse-url-firefox
M-x firefox-external ;; w3m-external-view-current-url
M-x quick-calc ;; C-x*q    $ previous result 

M-: eval-expression
M-x Reverse Region (unbound): Reverse the order of lines in a region

focus to the right shift

what is your name 
hi sir 
ok ok
     M-x Reverse Region (unbound): Reverse the order of lines in a region
ok ok
hi sir 
what is your name 


;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

emacs web server ==> simple httpd 
M-x list-packages
install package => simple  httpd
M-x httpd-serve-directory
M-x httpd-serve-start
M-x httpd-serve-stop
M-x cs httpd => httpd-serve-files, httpd-port, httpd-servlets
Servlets
Servlets can be defined with defservlet. This one creates at servlet at /hello-world that says hello.
(defservlet hello-world text/plain (path)
  (insert "hello, " (file-name-nondirectory path)))

you can use tor or proxy with DMZ 


;; run then repeat 
;; Check out run-with-timer.
;; (run-with-timer SECS REPEAT FUNCTION &rest ARGS)
;; SECS      =  Perform an action after a delay of SECS seconds.
;; REPEAT    = Repeat the action every REPEAT seconds, if REPEAT is non-nil.
;; FUNCTION  = The action is to call FUNCTION with arguments ARGS.
;; SECS and REPEAT may be integers or floating point numbers.
(run-with-timer 0 20 'jdee-xref-make-xref-db) ;; 
M-x run-with-timer 

;; run at hour then repeat 
;; (run-at-time TIME REPEAT FUNCTION &rest ARGS)
;; time     = 11:00pm
;; repeat   = second waitin before repeat is 22
;; funciton = command is 'jde-xref-make-xref-db
(run-at-time "3:29pm"  22  'jde-xref-make-xref-db)
M-x run-at-time
M-x run-at-time
M-x run-at-time
M-x run-at-time

[[[[ very important ]]]]
;; call the (function with argument), without  argument sending ,
;; ex:- jdee-xref-first-caller need argument, but i call it without sending argument to it 
;; by using (call-interactively 'foo)  ;; notice that (foo first second third ) have many arguemt but can call it without sending argument 

[[[[ very important ]]]]

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;


[not used ] C-c f ==> C-x
to modify new  keys use C-c
to modify new  keys use C-c;
to modify new  keys use C-x;
to modify new  keys use alias 
to modify new  keys use C-c w
to modify new  keys use C-c c-d [abcdefghigkikdkdkdididid]

use M-/  to complete from other frames M-x dabbrev-expand, because the ac not display every thing
now ac display every thing [ac-source-abbrev] , debbrev means words from others buffers 

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;; end of new keybinding ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

;;;  EMACS = JUM
;;;  a=snippet, s=ac

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;;  worked prj.el for desktop 

(jdee-project-file-version "1.0")
(jdee-set-variables
'(jdee-jdk-registry (quote (("1.7" . "/usr/lib/jvm/java-7-openjdk-i386"))))
'(jdee-import-auto-sort t)
'(jdee-build-function (quote jdee-ant-build))
'(jdee-ant-user-jar-files (quote ("/usr/share/java/ant-contrib-1.0b5-SNAPSHOT.jar")));; must install ant ant-contrib
;;'(jdee-bug-jre-home "/usr/lib/jvm/java-7-openjdk-i386/jre")
;;'(jdee-built-class-path (quote ("/var/lib/tomcat7/webapps/hello/WEB-INF/classes/")))
'(jdee-checkstyle-classpath (quote ("~/.emacs.d/jars/checkstyle-all.jar")) t)
'(jdee-checkstyle-style "~/.emacs.d/jars/checkstyle-all/sun_checks.xml" t)
'(jdee-compile-option-debug (quote ("all" (t t t))))
'(jdee-jdk-doc-url "~/.emacs.d/jars/jdk-7u79-docs-all.zip")
'(jdee-help-browser-function "w3m-browse-url")
'(jdee-server-dir "~/.emacs.d/jdee-server-master/target")
'(jdee-compile-option-directory "/var/lib/tomcat7/webapps/hello/WEB-INF/classes/"  ) ;; must be one classes, this is for compiler C-c C-v C-c, not for flymake , the flymake destination is (jdee-ecj-command-line-args -d [here]
;;;;;;;;;;;;;; 
'(jdee-sourcepath (quote               ("./src"                                           "./lib/servlet-api-src.zip"               "/root/.emacs.d/jars/src_jdk_1.7.zip" ))) ;; java only  for current  and  external packages 
'(jdee-compile-option-classpath (quote ("./src"                                           "/usr/share/tomcat7/lib/servlet-api.jar" ))) ;;    java of current package, then  [[[classes ]]] of  external packages 
'(jdee-run-option-classpath (quote     ("/var/lib/tomcat7/webapps/hello/WEB-INF/classes/" "/usr/share/tomcat7/lib/servlet-api.jar" ))) ;;    classes for all sources 
'(jdee-db-option-classpath (quote      ("/var/lib/tomcat7/webapps/hello/WEB-INF/classes/" "/usr/share/tomcat7/lib/servlet-api.jar" ))) ;;    classes for all sources 
'(jdee-global-classpath (quote         ("/var/lib/tomcat7/webapps/hello/WEB-INF/classes/" "/usr/share/tomcat7/lib/servlet-api.jar" ))) ;;    classes for all sources
;; this is for flymake , it is already contains -Xemacs  -noExit to hook ecj.jar  into flymake, see  /root/.emacs.d/elpa/jdee-20160728.1152/jdee-ecj-flymake.el
'(jdee-ecj-command-line-args  (quote ("-g" "-d"  "/var/lib/tomcat7/webapps/hello/WEB-INF/classes/"  "-source"   "1.7"  "-target"  "1.7"  "-warn:-serial")))  ;; this is for flymake , it is already contains -Xemacs  -noExit to hook ecj.jar  into flymake, see  /root/.emacs.d/elpa/jdee-20160728.1152/jdee-ecj-flymake.el
)

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; worked prj.el for web

(jdee-project-file-version "1.0")
(jdee-set-variables
'(jdee-jdk-registry (quote (("1.7" . "/usr/lib/jvm/java-7-openjdk-i386"))))
'(jdee-import-auto-sort t)
'(jdee-build-function (quote jdee-ant-build))
'(jdee-ant-user-jar-files (quote ("/usr/share/java/ant-contrib-1.0b5-SNAPSHOT.jar")));; must install ant ant-contrib
;;'(jdee-bug-jre-home "/usr/lib/jvm/java-7-openjdk-i386/jre")
;;'(jdee-built-class-path (quote ("./bin")))
'(jdee-checkstyle-classpath (quote ("~/.emacs.d/jars/checkstyle-all.jar")) t)
'(jdee-checkstyle-style "~/.emacs.d/jars/checkstyle-all/sun_checks.xml" t)
'(jdee-compile-option-debug (quote ("all" (t t t))))
'(jdee-jdk-doc-url "~/.emacs.d/jars/jdk-7u79-docs-all.zip")
'(jdee-help-browser-function "w3m-browse-url")
'(jdee-server-dir "~/.emacs.d/jdee-server-master/target")
'(jdee-compile-option-directory "./bin") ;; must be one classes, this is for compiler C-c C-v C-c, not for flymake , the flymake destination is (jdee-ecj-command-line-args -d [here]
;;;;;;;;;;;;; 
'(jdee-sourcepath (quote               ("./src"   "~/.emacs.d/jars/src_jdk_1.7.zip" ))) ;;java for current package  and  external packages 
'(jdee-compile-option-classpath (quote ("./src" ))) ;; java of current package, then  [[[classes ]]] of  external packages 
'(jdee-run-option-classpath (quote     ("./bin" ))) ;; classes for all sources 
'(jdee-db-option-classpath (quote      ("./bin" ))) ;; classes for all sources 
'(jdee-global-classpath (quote         ("./bin" ))) ;; classes for all sources
;; this is for flymake , it is already contains -Xemacs  -noExit to hook ecj.jar  into flymake, see  /root/.emacs.d/elpa/jdee-20160728.1152/jdee-ecj-flymake.el
'(jdee-ecj-command-line-args  (quote ("-g" "-d" "/home/jdee_workspace/second/bin/" "-source"   "1.7"  "-target"  "1.7"  "-warn:-serial")))  ;; this is for flymake , it is already contains -Xemacs  -noExit to hook ecj.jar  into flymake, see  /root/.emacs.d/elpa/jdee-20160728.1152/jdee-ecj-flymake.el
)

;; this is for flymake , it is already contains -Xemacs  -noExit to hook ecj.jar  into flymake, see  /root/.emacs.d/elpa/jdee-20160728.1152/jdee-ecj-flymake.el
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

[[[ very important ]]]
[[[ very important ]]]
[[[ very important ]]]
[[[ very important ]]]
[[[ very important ]]]
[[[ very important ]]]
[[[ very important ]]]

;; to flush c-. in file /root/.emacs.d/elpa/jdee-20160728.1152/jdee-complete.el  line number 875 put this function
;; (jdee-complete-flush-classinfo-cache)   then byte compile the jdee-complete.el  not the jdee-compile.el
;;  modify C-. in jdee so flush cache  
(defun  my-jdee-complete-minibuf ()
 (interactive)
(jdee-complete-flush-classinfo-cache)
(jdee-complete-minibuf))
(define-key jdee-mode-map (kbd "C-.") 'my-jdee-complete-minibuf)

;; when override methods by M-x  jdee-wiz-override-method but if i modify the abstract class ,
;; then C-c C-v o not show all all  overriden methods
;; so i need to use jdee-complete-flush-classinfo-cache to clear then use override to show all methods 
(defun  my-jdee-wiz-override-method()
 (interactive)
(jdee-complete-flush-classinfo-cache)
(jdee-wiz-override-method))
(define-key jdee-mode-map (kbd "C-c C-v C-o") 'my-jdee-wiz-override-method)


;; call the (function with argument), without  argument sending ,
;; ex:- (jdee-wiz-implement-interface INTERFACE-NAME)  need argument, but i call it without sending argument to it 
;; by using (call-interactively 'foo)
;; C-c C-v i but it will give a wrong methods if i modifiy the interface class 
;;  so i will use my own C-c C-v C-i or or  C-c C-v Tab
;; exit bean shell then call  jdee-wiz-implement-interface
(defun my-jdee-wiz-implement-interface ()
 (interactive)
 (jdee-bsh-exit)
 (call-interactively  'jdee-wiz-implement-interface)
)
(define-key jdee-mode-map (kbd "C-c C-v C-i") 'my-jdee-wiz-implement-interface)

(defalias 'rc   'jdee-read-class)

M-x cs =>  Jdee Ecj Command Line Args
change the -d from none to /tmp/myBin because whten the -d = none that is means no created  classed by ecj.jar that is in /root/.emacs.d/elpa/jdee-20160728.1152/jdee-ecj-flymake.el line 121 
but but but just use prj.el use this funciton, so always modify prj.el, and dont touch the other files 
'(jdee-ecj-command-line-args '("-d" "../../bin" "-1.7" "-referenceInfo" "-enableJavadoc" "-warn:+over-ann,uselessTypeCheck,javadoc"))
'(jdee-ecj-command-line-args    (quote    ("-d" "absolute-path/tmp/myBin" "-source" "1.7" "-target" "1.7" "-warn:-serial")))


M-x cs => jdee complete. change when complete dont display java.lang.string only string and and and 
 '(flymake-no-changes-timeout 1.5) ;; because the save file after 1 second  '(auto-save-timeout 1) so saving then compiling 

ecj.jar   -Xemacs means using ecj.jar with flymake, it is already exisit in /root/.emacs.d/elpa/jdee-20160728.1152/jdee-ecj-flymake.el


[[ very important ]]
jdee-wiz-implement-interfac and override
that is because jdee server old and maven old , so i have now maven 3 and new jdee server 
[[ very important ]]


[[[ very important ]]]
[[[ very important ]]]
[[[ very important ]]]



read all of this carefully
http://jdee.sourceforge.net/jdedoc/html/jde-ug/jde-ug-content.html



;; flymake simple and slowlly
;; `flymake-allowed-file-name-masks' to 
;; (\"\\.java\\'\" jdee-ecj-flymake-init jdee-ecj-flymake-cleanup)"

;; flymake complex and faster 
;; `flymake-allowed-file-name-masks' to
;; (\"\\.java\\'\" jdee-ecj-sfferver-flymake-init jdee-ecj-flymake-cleanup)"




(defun xxxmyVisitMethod ()
  "myVisitMethod"
 (interactive)
 (er/expand-region 1)
 (call-interactively 'copy-line-or-region)
 (backward-word 1)
 (jdee-open-class-at-point)
 (jdee-open-class-at-point)
 (semantic-complete-jump-local)
 (yank-pop)
 )
;; (semantic-complete-done)




(let ((a "hi sir"))
 (message a)
)




(defun xxxmyVisitMethod ()
  "myVisitMethod"
 (interactive)
(setq mylist (call-interactively (er/expand-region 1) (my-copy-line-or-region)))
;;(call-interactively (my-copy-line-or-region))
;;(setq mylist "setM")
;; (my-copy-line-or-region)
;; (backward-word 1)
;; (insert  'mylist)
;; (jdee-open-class-at-point)
;; (jdee-open-class-at-point)
;; (semantic-complete-jump-local)
;; (ido-completing-read "" mylist)
;; (yank-pop)
)
;; (semantic-complete-done)
;;  (xxx sosos );; (semantic-complete-done)
(message mylist)
(insert  mylist)
(setq mylist "hi sir")

;; visit method with class.method
;; if the method have space that is means we have overloading methods => C-c C-d j then C-y
;; if the method have not space then no overloading methods
 (fset 'myVisitMethod
       [?\C-\; ?\M-w ?\M-b ?\M-. ?\M-. ?\C-x ?1 ?\C-c ?\C-d ?j ?\C-y return ?  ? ])
 (define-key jdee-mode-map (kbd "M-,") 'myVisitMethod)




;; global create full path class(directory+file) at once , my-create-new-class in .emacs,
;; can use it for jdee or in emacs any where(just press c-g when try to write package and class data) 
;; by find-file-at-point and make-directory I can create full path at once time  like this aa/bb/cc/Hi.java
(defun my-create-new-class ()
 (interactive)
 (call-interactively  'find-file-at-point) ;; to create file without ido mode, same as  c-x c-f c-f 
 (call-interactively  'make-directory)     ;; to create directory (or not, just press enter ) same as  c-x d alt-m , or in dired use ( + c-f )
 (call-interactively  'jdee-gen-class)     ;; to generate class.
)
(global-set-key (kbd "C-c C-d C-n")   'my-create-new-class)





wow
New in Emacs 25.1: More flow control macros
The new macros if-let and when-let, 

level8
ssh:bandit8@bandit.labs.overthewire.org:
cvX2JJa4CFALtqS87jk27qwqGhBM9plV
sort then M-|  uniq -u 

================================================================
;; it is work
(make-directory "~/Desktop/hi3")
(make-directory "/ssh:bandit12@bandit.labs.overthewire.org:/tmp/hi3")
5Te8Y4drgCRfCx8ugdwuEX8KFC6k2EUu
================================================================

hack sam  windows password
http://www.computersecuritystudent.com/SECURITY_TOOLS/PASSWORD_CRACKING/lesson2/
cd /home/hack
dpkg -i samdum and bkhive 
mkdir /media/C
mount -t ntfs /dev/sda2  /media/C
cp /media/C/Windows/System32/config/SAM
cp /media/C/Windows/System32/config/SYSTEM
bkhive SYSTEM /root/Desktop/system
samdump2 SAM /root/Desktop/system > /root/Desktop/hashes.txt
cd ~/Desktop
john --format=nt --users=zinko  hashes.txt
cd ~/.john/
================================================================
stackoverflow
https://archive.org/download/stackexchange
================================================================
https://archive.org/download/stackexchange/superuser.com.7z
https://archive.org/download/stackexchange/emacs.stackexchange.com.7z
https://archive.org/download/stackexchange/android.stackexchange.com.7z
https://archive.org/download/stackexchange/askubuntu.com.7z
https://archive.org/download/stackexchange/webapps.stackexchange.com.7z
https://archive.org/download/stackexchange/unix.stackexchange.com.7z

or 10G
https://archive.org/download/stackexchange/stackoverflow.com-Posts.7z


================================================================
     vim

/   search then n next   N previous
* search current line, n next N prvious 
u   undo
:e  open file 
:e.  dired
:w  save file 
:q! quit
.   repeat


w next word
e end of word
b  previous word
zero begin of line 
gg begin of file 

v select area
y copy area
p paste
dd cut line
diw delete inside word 

================================================================

convert any text to html tag by htmlize package
text to html by Mx htmlize-

;; global create full path class(directory+file) at once , my-create-new-class in .emacs,
;; can use it for jdee or in emacs any where(just press c-g when try to write package and class data) 
;; by find-file-at-point and make-directory I can create full path at once time  like this aa/bb/cc/Hi.java
(defun my-create-new-class ()
 (interactive)
 (call-interactively  'find-file-at-point) ;; to create file without ido mode, same as  c-x c-f c-f 
 (call-interactively  'make-directory)     ;; to create directory (or not, just press enter ) same as  c-x d alt-m , or in dired use ( + c-f )
 (call-interactively  'jdee-gen-class)     ;; to generate class.
)
(global-set-key (kbd "C-c C-d C-n")   'my-create-new-class)
================================================================

# restclient
M-x resclient-mode
c-c c-c send request http
c-c c-n/p next/previous must be #comment like this between queries

# example 1
# 
GET http://127.0.0.1:8080/web2/add_league.do?year=2001&title=hi&season=winter
#
#


# example 2 for use proxy 4444 and with argument
:query1 = 2010
:query2 = ali
:query3 = winter

GET http://127.0.0.1:4444/web2/add_league.do?year=:query1&title=:query2&season=:query3
User-Agent:  Mozilla/5.0 (compatible; MSIE 9.0; Windows Phone OS 3.2; Trident/22.0; IEMobile/9.0)
Ahmed:  a4
#
#


# not wroking 
# POST /web2/add_league.do HTTP/1.1
POST http://127.0.0.1:8080/web2/add_league.do

{ "year": "2005", "title": "test", "season": "winter" }
#
#


================================================================

;;(global-set-key (kbd "C-c g") 'fiplr-find-file)  ;; find files
;; (global-set-key (kbd "C-c C-g") 'fiplr-clear-cache)  ;; clear cache
(global-set-key (kbd "C-c G") 'fiplr-find-directory) ;; find directory

;; open restclient.rest then run then restclient-mode
(add-to-list 'auto-mode-alist '("\\.rest?\\'" . restclient-mode))


================================================================
# copy directory 
(copy-directory  "html"    "/var/lib/tomcat7/webapps/justTest/"  )

# copy files with confirm override by 1
(copy-file "web.xml"       "/var/lib/tomcat7/webapps/justTest/WEB-INF/"    1)


================================================================

(calc-eval "5^47-2*4")
(calc-eval "16#deadbeef")
(calc-eval "8#111")
(calc-eval "10#256")
(calc-eval "2#101010001010")
(random 55)

================================================================
# dired chmod
M 444  ==> r r r 
M 457  ==> r r-x rwx
chmod 444
================================================================

fix this

0- c-h e
1- un able white2  replaced by  #d3d3d3
2- emmet-mode.el and emmet-mode.elcccc is not equalsa
   Source file `/root/.emacs.d/elpa/emmet-mode-20160501.1151/ emmet-mode.el' newer than byte-compiled file

3- always add ac (jdee-mode,web-mode,sql-mode) by extract huge project. see linux-notes, not not not java-mode
4- always add yas-snippet (java-mode,web-mode,sql-mode) not not not jdee-mode
5- always read c-h e
6- clean spaces in two generated files web,java 

7- recent entered in c-c c-d n by adding the command current-prefix-arg,
put comment in .emacs
regenerate compile file of jdee-gen.el

# no need , , it will be in importantDirectory 
/root/.emacs.d/elpa/jdee-20160728.1152/jdee-gen.el
	  (defalias 'jdee-gen-class
	    (list 'lambda (list)
		  (list 'interactive)
		  (list 'tempo-template-java-class-buffer-template)
		  (list 'jdee-gen-insert-interface-implementation))
	    current-prefix-arg
	    )


8- remove prog-mode in mysnippet 

very important note :-

jdee-mode and java-mode both in one mode
ac  auto-complete-mode can see only jdee-mode
template    yas-snippet-mode can see only java-mode


================================================================

working 

'(jdee-help-docsets
    (quote
    (
     ("JDK 1.7 Javadoc" "file:///root/.emacs.d/jars/docs/api" "1.7")
     ("serlvet3 doc"    "file:///root/.emacs.d/jars/servlet3/servlet-3_0-final-javadoc" "1.7")
     (nil "http://docs.oracle.com/javase/8/docs/api" "1.8")
     (nil "http://docs.oracle.com/javase/6/docs/api" "1.6")
     (nil "http://docs.oracle.com/j2se/1.5.0/docs/api" "1.5"))))
================================================================================

;; clean my-yas from not correct exit $1 $2 
;;
;; if hang when using mc and  my-yas  , use mc with registers 
;; to solve message error
;; yas-expand-snippet: [my-yas] `yas-expand-snippet' needs properly setup `yas-minor-mode'
;; if you put $0 only in the snippet then will not see this error
(defun my-yas()
  (interactive)
  (yas-minor-mode)
  (yas-minor-mode)
  )

;; ac is automatically work, but if you want to show menu just press c-c z
;; i prefer use c-tab without-menu to complete
(global-set-key (kbd "C-c z")   'auto-complete)  ;; find files


M-x cs  Hippie Expand Try Functions List:
remove lisp complete
(global-set-key [C-tab] 'hippie-expand)

;; c-tab it will take lines as sorted form here 
;; (try-expand-line try-expand-line-all-buffers try-expand-dabbrev try-expand-all-abbrevs try-expand-dabbrev-from-kill try-expand-dabbrev-all-buffers try-expand-list try-expand-list-all-buffers try-complete-file-name-partially try-complete-file-name)))

(try-expand-dabbrev try-expand-all-abbrevs try-expand-line try-expand-line-all-buffers try-expand-dabbrev-from-kill try-expand-dabbrev-all-buffers  try-expand-list try-expand-list-all-buffers try-complete-file-name-partially try-complete-file-name)))



======================== git ========================================

;; ()update from git),  (not update to git)
git pull 



;; at the begin
;; git
git init
git add .
git commit -m 'first commit'
git remote add origin  [ url ]
git push origin master

;; then to update
git add .
git commit -m 'second commit'
git push origin master

;; remover folder
git rm -r --cached  folder
git commit -m 'remover commbit'


;; download project
git clone [url]


;; status
git status

;; undo
git  log
git checkout [url from log]

;; create retrun point (branch)
git checkout -b [name ex. correct]
git branch 
git checkout master 
git checkout correct  ;; upload to correct

;; emacs
all you need to know is M-x magit-status and 6 keys:

    Tab → toggle show diff.
    s → stage
    u → unstage
    c c → commit
    P → push
    F → pull


;; ignoe files, untrack files
i => ignoe files extension
in this file =>  .gitignore 
to undo open .gitignore and del files

# process emacs files #
######################
.#*.*
.#*

# Compiled source #
###################
*.com
*.class
*.dll
*.exe
*.o
*.so

# Packages #
############
# it's better to unpack these files and commit the raw source
# git has its own built in compression methods
*.7z
*.dmg
*.gz
*.iso
*.jar
*.rar
*.tar
*.zip

# Logs and databases #
######################
*.log

# OS generated files #
######################
.DS_Store
.DS_Store?
._*
.Spotlight-V100
.Trashes
ehthumbs.db
Thumbs.db


===============================
;; c-h m in M-x magit-status
;; magit cheatsheet

https://github.com/magit/magit/wiki/Cheatsheet
visit the above link

;; Section commands
These commands are for navigation and to change the visibility of sections.

Key 	Description
TAB 	toggle body of current section
C-<tab> 	cycle visibility of current section and its children
M-<tab> 	cycle visibility of all diff sections
s-<tab> 	cycle visibility of all sections
1, 2, 3, 4 	show surrounding sections up to level N, hide deeper levels
M-1, M-2, M-3, M-4 	globally show sections up to level N, hide deeper levels
^ 	goto parent section
p 	goto beginning of section, from there to previous section
n 	goto next section
M-p 	goto beginning of section, from there to previous sibling section
M-n 	goto next sibling section


;; Buffer commands
Key 	Description
g 	refresh current buffer and status buffer, possibly revert file-visiting buffers
G 	refresh all Magit buffers and revert all file-visiting buffers in repository
q 	bury the current Magit buffer, restoring previous window configuration
C-u q 	kill the current Magit buffer, restoring previous window configuration
Various common commands
Key 	Description
SPC 	scroll up (1)
DEL 	scroll down (1)
RET 	show the thing at point in another buffer (2)
j 	jump somewhere (3)
$ 	show output of recent calls to git

    (1) In most Magit buffers this scrolls the current buffer. In log buffers this instead scrolls the diff buffer shown in another window.
    (2) What is being shown depends on the context.
    (3) Where this jumps to depends on the context.


;; Various assorted commands
Key 	Description
i 	add a gitignore rule globally
I 	add a gitignore rule locally
x 	reset using --mixed
C-u x 	reset using --hard

;; Prefix commands
These commands show popup buffers listing infix arguments and suffix commands. Note that you don’t have to remember all these prefixes initially - use h to show a popup listing all these prefixes as well as many (but not all) of the commands that are not prefixes themselves.

Key 	Description
A 	cherry-pick
b 	branch
B 	bisect
c 	commit
d 	diff
E 	ediff
f 	fetch
F 	pull
h, ? 	show popup of popups
l 	log
m 	merge
M 	remote
o 	submodule
P 	push
r 	rebase
t 	tag
T 	note
V 	revert
w 	apply patches
C-u y 	list refs (1)
z 	stash
! 	run git or gui tool

(1) Actually y is bound to a popup/prefix command, but it is one of the few popups which default to a suffix command and therefor has to be called with a prefix argument to actually show the popup buffer.


;;  Applying changes
Key 	Description
a 	apply the change at point
k 	discard the change at point
s 	stage the change at point
S 	stage all unstaged changes
u 	unstage the change at point
U 	unstage all staged changes (1)
v 	reverse the change at point

    (1) Actually this asks for a commit to reset the index too. If you just press RET, then what this equivalent to unstaging everything. If that is to confusing then just bind this key to magit-unstage-all.

;; Diffing
These commands show diffs or manipulate the diff arguments used to generate the diffs in the current buffer.

Key 	Description
RET 	(on commit) show commit
RET 	(on stash) show stash
d 	show diffing popup
D 	show popup for changing diff arguments
e 	use ediff to stage, compare, or stage (dwim)
E 	show ediffing popup (for when dwimming fails)
+ 	show more context lines
- 	show less context lines
0 	show default amount of context lines (thre

================================
;; no more write password every time in magit
;; add ssh to magit 
https://help.github.com/articles/connecting-to-github-with-ssh/

;; check current SSH
ls -al ~/.ssh

;; generate ssh
ssh-keygen -t rsa -b 4096 -C "ahmad_jar_00@yahoo.com"
enter then add password

;; Adding your SSH key to the ssh-agent
eval "$(ssh-agent -s)"
ssh-add ~/.ssh/id_rsa

;; Copy the SSH key to your clipboard.
sudo apt-get install xclip
xclip -sel clip < ~/.ssh/id_rsa.pub

;; in github
Settings
SSH and GPG keys
New SSH key
paste

;; testing
ssh -T git@github.com


;; Adding or changing a passphrase
ssh-keygen -p
then 
;; in magit
;; remove every thing, generate new repository 
then
M-x magit-status
Ma

rmbxz
git@github.com:rmbxz/java_emacs.git   => for web8
git@github.com:rmbxz/javaDesktop.git  => for app2

rmbxz2
git@github.com:rmbxz2/ProblemSolving.git 

;; magit git github
;; M-x magit-status 
;; Ma => add new branch
;; y  => view current branch
;; rmbxz
;; git@github.com:rmbxz/java_emacs.git   => for web11
;; git@github.com:rmbxz/javaDesktop.git  => for app2
;;


================================

======== magit  =====

[work] magit version 2.11,  git =2.14 emacs 24.4
?  => help
h  => help
$  => show command line

[work]
M-x magit-status 
Ma =>  M-x magit-remote-add  rmbxz  git@github.com:rmbxz/java_emacs.git
Ma =>  M-x magit-remote-add  rmbxz2 git@github.com:rmbxz2/ProblemSolving.git 


[work]
;; download project 
F p => pull

[work]
;; commit 
g or G      => refresh or refresh all
S or s => all or one ( or u to unstage)), s =>stage one , S => stage all , u => unstage
c c => add comment then C-c C-c 
P p => push

==========================
[work]
;; commit rmbxz2
M-x magit-status
S                    => all or one ( or u to unstage)), s =>stage one , S => stage all , u => unstage
cc  "commit title"  => add comment then C-c C-c 
Ctrl-c Ctrl-c       
Pu                  => push
user:- rmbxz2
password :- 

  or or or by command line

;; commit rmbxz2
$ git add --all .
$ git commit -m "update note"
$ git push -u origin master
rmbxz2
password
==========================



[work]
;; list log
ll  => short log (to see old comment)
lL  => as tree

[work]
;; create branch
bc enter => create new branch

[work]
how to list branches ?
y only ==> c-u y ==> M-x magit-show-refs-popup
then 
bb  enter(to checkout branch)

[work]
;; convert to branch
y bb

[work]
;; delete every files, then pull/list/show all branches
y  list master branch
bc many times to create old branches
cc Pp

[work]
;; back  to checkout to point in log
ll bb


;; git log (shell command) 
M-x vc-print-log
C-x vl  

[work]
;; delete branch
yk

;; rename last commit
ca 

;;Add change to a previous commit with Magit
ca

[work]
;; Untrack file without deleting it?
   i
to undo track just delete the file in .gitignore


[work]
;; You can use one of the below to discard changes in unstaged files:
k

[work]
;; Can Magit do git format-patch? means use git command
   :

;; How can I list available tags in Magit?
  lO enter
  lrh

;; how to move/rename a file within Magit?
   R

;; How to easily cherry pick with magit?
  AA

[work]
;; How to list branches with Magit
   y


;; How can I make `--verbose` flag be enabled by default in magit commit screen?
c   Show the committing popup
-v   Turn on --verbose
C-x C-s save 


;; How to stash individual files with magit
   zi


;; How do I checkout a file from another commit in Magit
  X f 


;; How to prevent Magit from asking where to push a branch?
   https://emacs.stackexchange.com/questions/13772/how-to-prevent-magit-from-asking-where-to-push-a-branch
   P -u P

;; How to well deal with the git diff with compatible to visual-line-mode?
   Dt


;; Is it possible to limit magit's log view to just commits from the current branch?
   lo
   lrl 


;;  Git rm from magit
Magit doesn't support ( git rm ) . Instead, delete the folder in dired, and then stage the change.
You can also use ! to launch any git command.


;; how to use command line in magit
   !


;; Magit: how remove push branch?
   bp

[work]
;; Show unpulled remote commits in magit
   fa enter



;; Configure upstream for rebasing onto master in magit
  Ma
  fa   fetch all remote
  fe   fetch specific remote
  re   rebase


[work]
;; Magit - How to expand all and collapse all sections in magit-status
   M-tab

;; Magit - Undo last commit - History Manipulation
   x

[work]
;; view log as tree
lL  ll


[work]
;; show sha in log
c-w 

[work]
;; run git command in magit 
   :
  and the output in $


[work]
;; show options of y (branches )
   y o

[work]
;; undo in history (ll), called restetting
   Xh                 ==> reset soft,hard,files 
   k(for all unstage) ==> kill unstage changes
   cc                 ==> commit (i dont know if i use it or no)   
   P -F  p            ==> push force
   


M-x list-packages
git-gutter+
M-x git-gutter+-revert-hunk
;; https://www.youtube.com/watch?v=P-mLxkb-EE8
;; this will add - + = beside the code 
;; or just use reverse in magit, look at the next example

[work]
[reverse ] undo changes before commit 
M-x magit-status
s => stage the file then, search for it in stage files
tab => to see the changes, then n/p to view the hunks, enter to visit hunk in the original file
v => reverse the changes in hunk

==================== end of magit ============================================
[not work]
apache tomcat debug
add comment in context.log and System.out.println in all codes then read comments in :- 

where  context.log apache server puts comments ?
 /var/lib/tomcat7/logs/ current date

where System.out.prinln Servlet puts output ?
tomcat7/logs/catalina.out
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
[work 100%]
eclipse tomcat problem
install tomcat from
https://tomcat.apache.org/download-80.cgi#8.0.46
and extract it to workspace
Window->Preferences->servers->add tomcat8
remove other servers 
done
because the tomcat server in eclipse must have

tomcat v8.0 server at localhost-config
catalina.policy
catalina.properties
context.XML
server.XML
tomcat-users.XML
web.XML
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; use interacitve with funciton default 
(defun ant-clean ()
  (interactive)
  (ant "clean"))


;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

how can i escape form quote double quotation in yas-choose-value in my-yas sniipet
it is by double slash  \\   not \"

# --
<%  ${1:variable$$(yas-choose-value '(
"application.getAttribute(\\"attribute\\");"


;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

;;; jdee-find-method in project by add method(.*{ then search by c-c c-v c-f 
(defun my-jdee-find-method-at-project ()
  "print current word."
  (interactive)
  (call-interactively  'er/expand-region);; c-; to select word so i can return to it by press c-u c-space(same class),or by c-m-j(if it out class)
  (jdee-find (concat (thing-at-point 'word) "(.*{") )
  )
 (define-key jdee-mode-map (kbd "M-,") 'my-jdee-find-method-at-project)


;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
M-x list-command-history


;; read this please 
;; read this please 
;; read this please 
;; fiplr up up up to .git or prj.el  file or folder  and stop 
;; By default it looks through all the parent directories of the file you're editing
;; until it finds a .git, .hg, .bzr or .svn directory. You can customize this list of root markers by setting fiplr-root-markers.
(setq fiplr-root-markers '(".git" ".svn" "prj.el"))


;; ignore  files and dir
;; ignore  backup files and classes
;; (files ("*.jpg" "*.png" "*.zip" "*~"))))
(setq fiplr-ignored-globs '((directories (".git" ".svn" "xrefdb"))
                            (files ("*.class" "*~"))))


;; list edited  methods 
;; bookmark previous(edited) methods and view it as list,
;; first need to enable  '(global-semantic-mru-bookmark-mode t) 
;; the default key is C-x B 
(global-semantic-mru-bookmark-mode t)   ;; not loaded automatically by M-x cs
[old](define-key jdee-mode-map (kbd "C-c b")  'semantic-mrub-switch-tags)



;;  Global Semantic Idle Summary Mode =>  put (Class variable) in minibuffer 
(global-semantic-idle-summary-mode t) ;; not loaded automatically by M-x cs



;; very important 
;; to config JDEE as IDE use M-x cs Semantic Idle defun
;; refactor and semantic convert emacs to IDE , and for c and java it is will be semantic-refactor or srefactor package 
;; for example semantic-decoration-on-private-members with (global-semantic-decoration-mode t) will colored private
;; https://www.gnu.org/software/emacs/manual/html_mono/semantic.html

;; C-c C-d always using semanticdb- 

;;  semantic modes are
;;  Global Semantic Idle Local Symbol Highlight Mode =>  surround box a around variable like eclipse 
;;  Global Semantic Idle Summary Mode =>  put (Class variable) in minibuffer 
;;  Global Semantic Mru Bookmark Mode =>  c-c b to list edited methods 
;;  Global Semantic Idle Scheduler Mode  =>  
;;  Global Semantic Idle Breadcrumbs Mode =>  display class.method at top  [noisy dont use it]
;;  Global Semantic Decoration Mode => set colors for private methods protect and all component and members of java 
;;  Global Semantic Highlight Edits Mode => Highlight text that has been edited
;;  Global Semantic Highlight Func Mode =>  Highlight current method
;;  Global Semantic Idle Completions Mode =>  Provide smart symbol completion automatically at idle time [no need]
;;  Global Semantic Show Unmatched Syntax Mode => Highlight lexical tokens which failed to be parsed.
;;  Global Semantic Stickyfunc Mode: =>   show name of function at top [ dont use it, noisy ]


;; remove #.bashrc
;; replace yassnipt for java



;;; jdee-find-method in project by add method(.*{ then search by c-c c-v c-f 
;; then press n p for vist all methods, M-, ==> vist method, then return by c-u c-space(in the same class), or by c-m-j(out class)  
(defun my-jdee-find-method-at-project ()
  "print current word."
  (interactive)
  (call-interactively  'er/expand-region);; c-; to select word so i can return to it by press c-u c-space(same class),or by c-m-j(if it out class)
  (jdee-find (concat "\\<" (thing-at-point 'word) "(.*{") ) ;; find  methodName(.*{  . means form begining the word \< , then word then ( then any thing then {
  (other-window 1)  ;; c-x o , go to the other window
  ;; then press n p because you are in the grep mode, dont press (tab then enter)
)
 (define-key jdee-mode-map (kbd "M-,") 'my-jdee-find-method-at-project)


;; c-,   jump to instance variable, return by c-u c-space , M-x semantic-ia-fast-jump, if face errors then c-c c-d , for reparsed buffer to  reparsed fresh cache
;; c-2 r jump to local variable and rename it, dont dont dont  use M-. to  jump to local variable, to return c-c s
;; [M-. use it for class only] because somethimes jump to local variable not global, so use it for class only 
;; dont use M-. to visit local variable
(define-key jdee-mode-map (kbd "C-,")  'semantic-ia-fast-jump)



;;; jdee-find-method in project by add method(.*{ then search by c-c c-v c-f 
;; then press n p for vist all methods, M-, ==> vist method, then return by c-u c-space(in the same class), or by c-m-j(out class)  
(defun my-jdee-find-method-at-project ()
  "print current word."
  (interactive)
  (call-interactively 'set-mark-command) ;; set mark and deactivate it  to select word so i can return to it by press c-u c-space(same class),or by c-m-j(if it out class)
  (deactivate-mark)
;;  (call-interactively  'er/expand-region);; c-; to select word so i can return to it by press c-u c-space(same class),or by c-m-j(if it out class)
;;  (call-interactively  'er/contract-region );;  c-: dont expand, so it is now marked, so i can access it by c-u c-space
  (jdee-find (concat "\\<" (thing-at-point 'word) "(.*{") ) ;; find  methodName(.*{  . means form begining the word \< , then word then ( then any thing then {
  (other-window 1)  ;; c-x o, go to the other window
  ;; then press n p because you are in the grep mode, dont press (tab then enter)
)
 (define-key jdee-mode-map (kbd "M-,") 'my-jdee-find-method-at-project)

==========================================================================================-


https://stackoverflow.com/questions/4173737/how-to-include-standard-jdk-library-in-emacs-semantic
Starting with CEDET 1.1, Semantic has support for retrieving class information through javap. You need to setup cedet-java-jdk-root variable to JAVA_HOME, and populate semanticdb-javap-classpath variable with list of paths to Java's system jars, like rt.jar, etc.

    nstalled package flymake;
    the installed package is auto-complete;
    downloaded CEDET 1.1;
    And of course, the last Emacs and java. 


CEDET configuration in .emacs:
(load-file "~ / cedet / common / cedet.el") ;; Add cedet
(global-semanticdb-minor-mode 1) ;; Initialize semanticdb
;;; Download auto-completion support
(semantic-load-enable-gaudy-code-helpers)

(custom-set-variables ;; Initialize variables that specify where
;;; installed java
. . .
'(cedet-java-jdk-root "/ opt / jdk")

;;; Here you need to add all jar-ki, from
;;; which need to import characters
'(semanticdb-javap-classpath' ("/opt/jdk/jre/lib/rt.jar"))
. . .
)

Flymake configuration:
(require 'flymake')
(add-hook 'java-mode-hook' flymake-mode-on)

(defun my-java-flymake-init ()
(list "javac" (list (flymake-init-create-temp-buffer-copy
'flymake-create-temp-with-folder-structure))))

(add-to-list 'flymake-allowed-file-name-masks' ("\\. java $" my-java-flymake-init flymake-simple-cleanup))

Auto-complete configuration:
(require 'auto-complete-config)
(add-to-list 'ac-dictionary-directories ~ / .emacs.d / ac-dict ")
(ac-config-default)

    установленный пакет flymake;
    установленный пакет auto-complete;
    скачанный CEDET 1.1;
    Ну и конечно же, последний Emacs и java.

Конфигурация CEDET в .emacs :
(load-file "~/cedet/common/cedet.el")             ;; Подгрузить cedet
(global-semanticdb-minor-mode 1)                  ;; Инициализировать semanticdb
;; Загрузить поддержку авто-дополнения
(semantic-load-enable-gaudy-code-helpers)

(custom-set-variables             ;; Инициализация переменных, указывающих, где 
                                                      ;; установлена java
. . .
'(cedet-java-jdk-root "/opt/jdk")

 ;; Сюда нужно добавить все jar-ки, из
 ;; которых необходимо импортировать символы
'(semanticdb-javap-classpath '("/opt/jdk/jre/lib/rt.jar"))
. . .
)

Конфигурация flymake:
(require 'flymake)
(add-hook 'java-mode-hook 'flymake-mode-on)

(defun my-java-flymake-init ()
(list "javac" (list (flymake-init-create-temp-buffer-copy
'flymake-create-temp-with-folder-structure))))

(add-to-list 'flymake-allowed-file-name-masks '("\\.java$" my-java-flymake-init flymake-simple-cleanup))

Конфигурация auto-complete:
(require 'auto-complete-config)
(add-to-list 'ac-dictionary-directories "~/.emacs.d/ac-dict")
(ac-config-default)


==========================================================================================-

;; http://cedet.sourceforge.net/setup.shtml  cedet 1.0 or 1.1
(load-file "~/.emacs.d/plugins/cedet/common/cedet.el") ;; Add cedet
(global-semanticdb-minor-mode 1) ;; Initialize semanticdb
(cedet-java-jdk-root "/usr/lib/jvm/java-7-openjdk-i386")
(semanticdb-javap-classpath '("/usr/lib/jvm/java-7-openjdk-i386/jre/lib/rt.jar"))




;; google it =>  (cedet, semantic and java)  ==> will solve all problems in jdee setup(config),so can visit method directly in project
(require 'cedet)
(global-semanticdb-minor-mode t)

(require 'semantic/java) ;; // semantic is built-in so can found in in /usr/share/emacs/24.4/lisp/cedet/semantic/java.elc
(cedet-java-jdk-root "/usr/lib/jvm/java-7-openjdk-i386")
(semanticdb-javap-classpath '("/usr/lib/jvm/java-7-openjdk-i386/jre/lib/rt.jar"))



semantic/db-javascript.elc
   42930   20 -rw-r--r--   1 root     root        17172 Mar  7  2015 semantic/java.elc
   79415    8 -rw-r--r--   1 root     root         6110 Mar  7  2015 semantic/wisent/javascript.elc
   79417   88 -rw-r--r--   1 root     root        90015 Mar  7  2015 semantic/wisent/javat-wy.elc
   79420    4 -rw-r--r--   1 root     root         3880 Mar  7  2015 semantic/wisent/java-tags.elc
   79439    4 -rw-r--r--   1 root     root         1713 Mar  7  2015 srecode/java.elc






;; google it =>  (cedet, semantic and java)  ==> will solve all problems in jdee setup(config),so can visit method directly in project
;; // semantic is built-in so can found in in /usr/share/emacs/24.4/lisp/cedet/semantic/java.elc
(require 'cedet)
(global-semanticdb-minor-mode t)
(require 'semantic/java)
(require 'srecode/java)
(require 'semantic/wisent/javat-wy)
(require 'semantic/wisent/java-tags)

;;(semantic-java-dependency-system-include-path (quote ("/usr/lib/jvm/java-7-openjdk-i386" "/home/jdee_workspace/app2/src")))

;;(semantic-java-dependency-system-include-path (quote ("/usr/lib/jvm/java-7-openjdk-i386")))
;; /home/jdee_workspace/app2/src
;; (cedet-java-jdk-root "/usr/lib/jvm/java-7-openjdk-i386")
;; (semanticdb-javap-classpath '("/usr/lib/jvm/java-7-openjdk-i386/jre/lib/rt.jar"))



;; (autoload 'jtags-mode "jtags" "Toggle jtags mode." t)
;; (add-hook 'java-mode-hook 'jtags-mode)



;; (setq tags-table-list '("c:/java/jdk1.8.0/src"

;;                         "c:/projects/tetris/src"))

(setq tags-table-list '("/home/jdee_workspace/app2/src"))
(setq tags-revert-without-query 't)


;; Type `M-x jtags-update-tags-files' to update all of the files in the tags



;; The jtags package defines four key bindings in the `jtags-mode-map':
;;
;; - C-,   is bound to `jtags-member-completion'
;; - M-,   is bound to `jtags-show-declaration'
;; - M-f1  is bound to `jtags-show-documentation'
;; - C-c , is bound to `jtags-update-this-tags-file'
;;





;;;;;;;;;;;;;;;;;;;; the story is for tags ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; i have 3 ways to use tags in emacs for java 
;; basic way 
find . -type f -iname "*.java" | xargs etags -a  --language=java --output=TAGS
M-x visit-tags-table ==> to selet the tag table file, TAGS
M-x jtags-update-tags-file => for this file TAGS
M-x jtags-update-tags-files => for all files TAGS for all project 
[old] M-.  visit class,method,variable 
C-c s to return in java
M-* to return in not not not not java


;;; dont use it 
;;; not work correctly
;;; second way by jtags or jtags.csh in https://github.com/jdee-emacs/jdee/blob/master/jtags
;;; it is already added to new Jdee called jtags.el hahahaiiiiiiiiiiiii
paste  it in /usr/bin
to use it type
chmod +x jtags
jtags -h
jtags java_directory

then use tags-table-list to add all TAGS files 

(tags-compression-info-list (quote ("" ".Z" ".bz2" ".gz" ".xz" ".tgz" ".zip")))
(tags-table-list
   (quote
("/home/jdee_workspace/app2/src/TAGS" "/home/jdee_workspace/sourcePathx/sources/src_jdk_1.7/TAGS")))



;;;; use this only , works fine 
;;;; third way  by jtags.el 
;;;; go to defintion of class or method or variable
;;;; M-x list-packages, download jtags 
;;;; so at every src will create Tag file, so i have now Two TAGS files
(setq tags-table-list '("/home/jdee_workspace/sourcePathx/sources/src_jdk_1.7.zip"
			"/home/jdee_workspace/app2/src"
  			))
;; dont ask y/n before update
(setq tags-revert-without-query 't)

;;  then just type 
;;  M-x jtags-show-declaration , ;;  C-c s to return 
;;  [old] M-. for all languages  and M-* to return 
;; 

;;; finsh the first part of jtags.el

now the second part of jtags
the simple story
find . *.java | etags  ==> TAGS 
then M-x xref-find-definitions or M-x find-tag will looking for (setq tags-table-list) of TAGS files

so i found in jdee file called jtags(shell file) will generate TAGS file
then the (M-x xref-find-definitions)  will show all defintion and  (M-x find-tag) will visit one tag

but in two way above i cant visit generic identifer 

[[ important note about space in java generic]]
c-c j        ==> (visit method,variable) by jtags.el in TAGS TAGS,
must be like this to work(no space)  ArrayList<league> leaguelist, cant visit it
not like this  ArrayList space-error  <league> leaguelist => cant visit it 

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;end of tags ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

[[[[][ install emacs 25.2 ]]]]
Warning (bytecomp): ‘preceding-sexp’ is an obsolete function (as of 25.1); use ‘elisp--preceding-sexp’ instead.

I think only starting emacs 24.
However we could solve it using:

(if (version< emacs-version "24")
      'preceding-sexp
    'elisp--preceding-sexp)


Warning (bytecomp): ‘x-set-selection’ is an obsolete function (as of 25.1); use ‘gui-set-selection’ instead.
Warning (bytecomp): ‘interactive-p’ is an obsolete function (as of 23.2); use ‘called-interactively-p’ instead.
finally if foud the error in this package, so just remove it
/root/.emacs.d/elpa/second-sel-20151231.1553/second-sel.el
it is a package problem so, remove package one by one in
 '(package-selected-packages
   (quote
    (diredfl look-dired jdee ztree yasnippet widget-mvc wid-edit+ which-key web-mode web-completion-data web-beautify vlf thingatpt+ sx subr+ strings soundklaus sos smex smartparens simple-httpd runner restclient rainbow-mode rainbow-delimiters plantuml-mode pdf-tools naked multi-term move-dup monochrome-theme misc-fns misc-cmds menu-bar+ mark-multiple magit jtags info+ iedit ido-ubiquitous htmlize help-fns+ goto-chg google-translate google-maps golden-ratio fullscreen-mode frame-fns fiplr expand-region emms-soundcloud emms-mark-ext emms-info-mediainfo elmacro eimp dirtree direx-grep dired-toggle-sudo dired-toggle dired-subtree dired-sort-menu+ dired-sort dired-single dired-ranger dired-rainbow dired-open dired-narrow dired-k dired-imenu dired-filter dired-efap dired-dups dired-details+ dired-avfs dic-lookup-w3m deferred cmds-menu chm-view bookmark+ bash-completion autofit-frame auto-complete-nxml apt-utils-ido apropos-fn+var anzu ant ace-window ace-mc ac-html ac-emmet)))
then test.



wow, wow, wow, crazy jdee problem in emacs 25.2
jdee debug emacs 25
Requires: emacs-24.3, flycheck-30, memoize-1.0.1, dash-2.13.0, s-1.12.0
remove flycheck from emacs-q then exit then remove jdee from emacs -q then exit, then M-x package-autoremove
then install flycheck from emacs -q then exit then install jdee from emacs -q  then exit 
emacs -q 
(set 'package-archives
   (quote
     (
        ("gnu" . "https://elpa.gnu.org/packages/")
        ("melpa" . "https://melpa.org/packages/")
        ("marmalade" . "https://marmalade-repo.org/packages/")
     )
   )
)
or remove package one by one by
 '(package-selected-packages
   (quote
    (diredfl look-dired jdee ztree yasnippet widget-mvc wid-edit+ which-key web-mode web-completion-data web-beautify vlf thingatpt+ sx subr+ strings soundklaus sos smex smartparens simple-httpd runner restclient rainbow-mode rainbow-delimiters plantuml-mode pdf-tools naked multi-term move-dup monochrome-theme misc-fns misc-cmds menu-bar+ mark-multiple magit jtags info+ iedit ido-ubiquitous htmlize help-fns+ goto-chg google-translate google-maps golden-ratio fullscreen-mode frame-fns fiplr expand-region emms-soundcloud emms-mark-ext emms-info-mediainfo elmacro eimp dirtree direx-grep dired-toggle-sudo dired-toggle dired-subtree dired-sort-menu+ dired-sort dired-single dired-ranger dired-rainbow dired-open dired-narrow dired-k dired-imenu dired-filter dired-efap dired-dups dired-details+ dired-avfs dic-lookup-w3m deferred cmds-menu chm-view bookmark+ bash-completion autofit-frame auto-complete-nxml apt-utils-ido apropos-fn+var anzu ant ace-window ace-mc ac-html ac-emmet)))
then reinstall them  .



stop flycheck for jdee
'(jdee-flycheck-enable-p nil)

--------------------------- removed packages 
(diredfl look-dired jdee ztree yasnippet widget-mvc wid-edit+ which-key web-mode web-completion-data web-beautify vlf thingatpt+ sx subr+ strings soundklaus sos smex smartparens simple-httpd runner restclient rainbow-mode rainbow-delimiters plantuml-mode pdf-tools naked multi-term move-dup monochrome-theme misc-fns misc-cmds menu-bar+ mark-multiple magit jtags info+ iedit ido-ubiquitous htmlize help-fns+ goto-chg google-translate google-maps golden-ratio fullscreen-mode frame-fns fiplr expand-region emms-soundcloud emms-mark-ext emms-info-mediainfo elmacro eimp dirtree direx-grep dired-toggle-sudo dired-toggle dired-subtree dired-sort-menu+ dired-sort dired-single dired-ranger dired-rainbow dired-open dired-narrow dired-k dired-imenu dired-filter dired-efap dired-dups dired-details+ dired-avfs dic-lookup-w3m deferred cmds-menu chm-view bookmark+ bash-completion autofit-frame auto-complete-nxml apt-utils-ido apropos-fn+var anzu ant ace-window ace-mc ac-html ac-emmet)))
(diredfl look-dired jdee ztree yasnippet widget-mvc which-key web-mode web-completion-data web-beautify vlf sx soundklaus sos smex smartparens simple-httpd runner restclient rainbow-mode rainbow-delimiters plantuml-mode pdf-tools multi-term move-dup monochrome-theme mark-multiple magit jtags iedit ido-ubiquitous htmlize goto-chg google-translate google-maps golden-ratio fullscreen-mode fiplr expand-region emms-soundcloud emms-mark-ext emms-info-mediainfo elmacro eimp dirtree direx-grep dired-toggle-sudo dired-toggle dired-subtree dired-single dired-ranger dired-rainbow dired-open dired-narrow dired-k dired-imenu dired-filter dired-efap dired-dups dired-avfs dic-lookup-w3m deferred chm-view bash-completion auto-complete-nxml apt-utils-ido anzu ant ace-window ace-mc ac-html ac-emmet)))

no need     bookmark+          20160530.1400 installed             Bookmark+: extensions to standard library `bookmark.el'.
(alternative is  plugin/redo.el)     redo+              20131117.351  installed             Redo/undo system for Emacs
(alternative is diredfl)              dired+             20160528.748  installed             Extensions to Dired.
x    apropos-fn+var     20151231.1205 installed             Apropos for functions and variables
x     naked              20151231.1527 installed             Provide for naked key descriptions: no angle brackets.
x    autofit-frame      20151231.1209 installed             Automatically resize one-window frames to fit
x    cmds-menu          20151231.1230 installed             `Recent Commands' submenu for the menu-bar `Tools' menu.
x    dired-details+     20151231.1250 installed             Enhancements to library `dired-details+.el'.
x     dired-sort         20090209.438  installed             Sort files in dired.
x     dired-sort-menu+   20151231.1251 installed             Extensions to `dired-sort-menu.el'
x      help-fns+          20151215.637  installed             Extensions to `help-fns.el'.
x      frame-fns          20151231.1322 installed             Non-interactive frame and window functions.
x     subr+              20151231.1607 installed             Extensions to standard library `subr.el'.
x     thingatpt+         20151231.1610 installed             Extensions to `thingatpt.el'.
x     wid-edit+          20151231.1622 installed             Extensions to standard library `wid-edit.el'.
x     info+              20151231.1403 installed             Extensions to `info.el'.
x     menu-bar+          20160512.1714 installed             Extensions to `menu-bar.el'.
x     misc-cmds          20151231.1423 installed             Miscellaneous commands (interactive functions).
x     misc-fns           20160529.1452 installed             Miscellaneous non-interactive functions.
x     strings            20151231.1607 installed             Miscellaneous string functions.

---------------------------

  ac-emmet           20131015.858  installed             auto-complete sources for emmet-mode's snippets
  ac-html            20151005.31   installed             auto complete source for html tags and attributes
  ace-mc             20160408.1737 installed             Add multiple cursors quickly using ace jump
  ace-window         20180123.1111 installed             Quickly switch windows.
  ant                20160211.743  installed             helpers for compiling with ant
  anzu               20161017.907  installed             Show number of matches in mode-line while searching
  apt-utils-ido      20130527.1345 installed             Ido commands for apt-utils
  auto-complete-nxml 20140220.2058 installed             do completion by auto-complete.el on nXML-mode
  bash-completion    20180303.1144 installed             BASH completion for the shell buffer
  chm-view           20110616.1719 installed             View CHM file.
  deferred           20170901.630  installed             Simple asynchronous functions for emacs lisp
  dic-lookup-w3m     20170803.354  installed             look up dictionaries on the Internet
  dired-avfs         20161012.404  installed             AVFS support for dired
  dired-dups         20130527.1425 installed             Find duplicate files and display them in a dired buffer
  dired-efap         20140122.856  installed             Edit Filename At Point in a dired buffer
  dired-filter       20171010.204  installed             Ibuffer-like filtering for dired
  dired-imenu        20140109.810  installed             imenu binding for dired mode
  dired-k            20170313.803  installed             highlight dired buffer by file size, modified time, git status
  dired-narrow       20170309.329  installed             Live-narrowing of search results for dired
  dired-open         20160205.1213 installed             Open files from dired using using custom actions
  dired-rainbow      20171202.1448 installed             Extended file highlighting according to its type
  dired-ranger       20171229.753  installed             Implementation of useful ranger features for dired
  dired-single       20170804.544  installed             Reuse the current dired buffer to visit a directory
  dired-subtree      20170910.1521 installed             Insert subdirectories in a tree-like fashion
  dired-toggle       20140907.1349 installed             provide a simple way to toggle dired buffer for current directory
  dired-toggle-sudo  20151109.206  installed             Browse directory with sudo privileges.
  direx-grep         20140515.806  installed             Grep node of direx.el using incremental search like anything.el/helm.el
  dirtree            20140129.832  installed             Directory tree views
  eimp               20140630.1447 installed             Emacs Image Manipulation Package
  elmacro            20170312.356  installed             Convert keyboard macros to emacs lisp
  emms-info-media... 20131223.500  installed             Info-method for EMMS using medianfo
  emms-mark-ext      20130528.2027 installed             Extra functions for emms-mark-mode and emms-tag-edit-mode
  emms-soundcloud    20131221.345  installed             EMMS source for Soundcloud audio sharing platform
  expand-region      20171217.2125 installed             Increase selected region by semantic units.
  fiplr              20140723.2345 installed             Fuzzy Search for Files in Projects
  fullscreen-mode    20130524.956  installed             fullscreen window support for Emacs
  golden-ratio       20150819.420  installed             Automatic resizing of Emacs windows to the golden ratio
  google-maps        20171002.734  installed             Access Google Maps from Emacs
  google-translate   20170713.119  installed             Emacs interface to Google Translate.
  goto-chg           20180105.1033 installed             goto last change
  htmlize            20171017.141  installed             Convert buffer text and decorations to HTML.
  ido-ubiquitous     20180216.949  installed             Use ido (nearly) everywhere.
  iedit              20180207.219  installed             Edit multiple regions in the same way simultaneously.
  jdee               20180218.919  installed             Java Development Environment for Emacs
  jtags              20160211.1229 installed             enhanced tags functionality for Java development
  magit              20180315.1731 installed             A Git porcelain inside Emacs.
  mark-multiple      20121118.754  installed             Sorta lets you mark several regions at once.
  monochrome-theme   20140326.350  installed             A dark Emacs 24 theme for your focused hacking sessions
  move-dup           20170513.1911 installed             Eclipse-like moving and duplicating lines or rectangles.
  multi-term         20160619.233  installed             Managing multiple terminal buffers in Emacs.
  pdf-tools          20180109.1234 installed             Support library for PDF documents.
  plantuml-mode      20170819.1033 installed             Major mode for PlantUML
  rainbow-delimiters 20170929.432  installed             Highlight brackets according to their depth
  rainbow-mode       0.13          installed             Colorize color names in buffers
  restclient         20180316.851  installed             An interactive HTTP client for Emacs
  runner             20160524.43   installed             Improved "open with" suggestions for dired
  simple-httpd       20180218.538  installed             pure elisp HTTP server
  smartparens        20180308.1042 installed             Automatic insertion, wrapping and paredit-like navigation with user defined pairs.
  smex               20151212.1409 installed             M-x interface with Ido-style fuzzy matching.
  sos                20141214.2003 installed             StackOverflow Search
  soundklaus         20160314.531  installed             Play music on SoundCloud with Emacs via EMMS
  sx                 20180212.1101 installed             StackExchange client. Ask and answer questions on Stack Overflow, Super User, and the likes
  vlf                20180201.1454 installed             View Large Files
  web-beautify       20161115.1447 installed             Format HTML, CSS and JavaScript/JSON
  web-completion-... 20160318.148  installed             Shared completion data for ac-html and company-web
  web-mode           20180313.1458 installed             major mode for editing web templates
  which-key          20180301.1018 installed             Display available keybindings in popup
  widget-mvc         20150101.2006 installed             MVC framework for the emacs widgets
  yasnippet          20180317.431  installed             Yet another snippet extension for Emacs.
  ztree              20180215.1021 installed             Text mode directory tree
================================================================

to-do list 


;; work perfect wow jtags
;; undefined keys ;;;
;; undefine key without change .el file
;; stop key M-, from jtags mode 
;; (define-key jtags-mode-map  (kbd "M-,") 'nil)
;; then you need to hook or link, so when jtags start then start my hook to stop keys, look it is easy
(defun my-stop-keys-jtags-hook ()
 (define-key jtags-mode-map  (kbd "M-,") 'nil)
 (define-key jtags-mode-map  (kbd "C-c ,") 'nil)
;; add all disabled  keys from jtags-mode 
)
(add-hook 'jtags-mode-hook  'my-stop-keys-jtags-hook)


;;  iedit not work
;; [67108903] ==> c-'
;;; ==>wow it is work  '(iedit-toggle-key-default [67108903])
(define-key iedit-lib-keymap  (kbd "C-c a") 'iedit-show/hide-unmatched-lines)

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

    (define-key map "\t" 'ac-expand)
    (define-key map [tab] 'ac-expand)
    (define-key map "\r" 'ac-complete)
    (define-key map (kbd "M-TAB") 'auto-complete)

    (define-key map "\M-n" 'ac-next)
    (define-key map "\M-p" 'ac-previous)
    (define-key map [down] 'ac-next)
    (define-key map [up] 'ac-previous)

    (define-key map [f1] 'ac-help)
    (define-key map [M-f1] 'ac-persist-help)
    (define-key map (kbd "C-?") 'ac-help)
    (define-key map (kbd "C-M-?") 'ac-persist-help)

    (define-key map [C-down] 'ac-quick-help-scroll-down)
    (define-key map [C-up] 'ac-quick-help-scroll-up)
    (define-key map "\C-\M-n" 'ac-quick-help-scroll-down)
    (define-key map "\C-\M-p" 'ac-quick-help-scroll-up)


;;temp
(global-set-key (kbd "C-z")   'ac-complete)  ;; find files


;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;; uniq ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
hi
hi
hi
by
by
by
soso

uniq -u ;; must sorted the lines before uniq -u by M-x sort-lines M-x sl
output is like which one is not duplicate
soso
;;;;;;;;;;;;;;;;

hi
hi
hi
by
by
by
soso

uniq 
output will be like delete duplicate
hi
by
soso



;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
Ac Use Quick Help on ==> make it off


	${1:type} ${2:name} = new $1$$(delete-horizontal-space)($3);$0

hisir
delete-horizontal-space
        ${1:access$$(yas-choose-value'("public" "private" "protected" " "))} `(file-name-sans-extension (buffer-name))`(${2:type} ${3:value}, ${4:type} ${5:value}) {
	this.$3=$3;
	this.$5=$5;
}


no need
${1:type} ${2:name} = new $1$$(delete-horizontal-space)($3);$0
	    (call-interactively 'delete-horizontal-space)



;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

[done]
change happy-expand to key ?????
i will put two keys for hippie-expand 
(global-set-key [C-tab]     'hippie-expand)
(global-set-key (kbd "C-c f") 'hippie-expand);; put it c-c f, and c-z for autocomplete


[[not done]]
services stop
clean firefox 
gsettings list-recursively >> 2018_dconf_settings.txt
set eclipse color default


;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

For GNU Emacs 25.1 and newer versions to saveplace( means when open file go to the last changed location position in the file )
(save-place-mode 1) 
 '(save-place-limit 1000)
 '(save-place-mode t nil (saveplace))
 '(savehist-file "/home/importantDIR/EmacsHistory/history")



but 
For GNU Emacs 24.5 and older versions
(require 'saveplace)
(setq-default save-place t)

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

[no need ]
(setq frame-title-format "foo")

(setq frame-title-format
  '(:eval
    (if buffer-file-name
        (replace-regexp-in-string
         "\\\\" "/"
         (replace-regexp-in-string
          (regexp-quote (getenv "HOME")) "~"
          (convert-standard-filename buffer-file-name)))
      (buffer-name))))


;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

;;; i change it in jtags.el for testing
;;; work
(defun jtags-show-declaration ()
  "Look up the identifier around point, and show its declaration."
  (interactive)
  (let ((definition (jtags-find-tag)))
    (if (null definition)
        (progn 
             (jtags-update-this-tags-file)
                (let ((mydefinition (jtags-find-tag)))
                     (if (null mydefinition)
                 	(message "Tag not found!")
                   (jtags-goto-tag-location mydefinition))))
      (jtags-goto-tag-location definition))))


;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

;;; overrid method of function 
;;; override funciton  in elisp is just like this, very easy, for example i have my_method in telent.el and i want overrid it 
;;  (require 'telnet)
;;  (defun my_method (proc string)
;;     )
;;; or or or
;;; the second way for overriding 
;;; (eval-after-load "telnet"
;;;  '(defun telnet-initial-filter (proc string)
;;;     ...))
(require 'jtags)
(defun jtags-show-declaration ()
  "my override function with same name of jtags-show-declaration"
  (interactive)
  (let ((definition (jtags-find-tag)))
    (if (null definition)
        (progn 
             (jtags-update-this-tags-file)
                (let ((mydefinition (jtags-find-tag)))
                     (if (null mydefinition)
                 	(message "Tag not found!")
                   (jtags-goto-tag-location mydefinition))))
      (jtags-goto-tag-location definition))))



;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
wow, finally work
change title bar only by this theme
sudo apt install numix-gtk-theme 
but must extension user-theme installed
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

  (global-set-key [C-tab] 'hippie-expand)
  (global-set-key (kbd "C-c f") 'hippie-expand)




;; replace fun ;; the new one is my-w3m-copy-url-at-point to view the url without any additional things
(defun my-yt ()  
   (interactive)  
         (my-ytt (replace-regexp-in-string  "&.*"   " "   (call-interactively  'my-w3m-copy-url-at-point))))



;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
emacs keyboard type
M-x quail-show-keyboard-layout
M-x quail-set-keyboard-layout
you can remap keyboard from emacs also from quail


emacs langues layout
C-x RET C-\
C-\


;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

snippet inside snippet 
loooooooook at this,
snippet inside snippet 
snippet inside snippet 
snippet inside snippet 
snippet inside snippet 
snippet inside snippet 
snippet inside snippet 
M-x cs => Yas Triggers In Field: Toggle  off (nil)
If non-nil, allow stacked expansions (snippets inside snippets)



# finally fixed my-yas snippet new 
Yas Indent Line: Value Menu Nothing
8 space 


;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
done
apt-get install ant ant-contrib
apt-get install jad

instead use  jadx or jadx-gui
jadx /home/downloads/me.jar  -d  /home/downloads/exportSourceCode  ;; must absolute path
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
auto-complete
what is mean of ac-quick-help ??  set it as default
ac-quick-help => means popup yellow box (eval-when-compile)


 '(ac-auto-show-menu 0.3)
 '(ac-auto-start 2)
 '(ac-delay 0.3)


done
stop it 
M-x cs global-semantic-idle-summary-mode  off




not done yet
update-rc.d  cryptdisks remove
update-rc.d  apparmor remove
update-rc.d  cron remove
update-rc.d  anacron remove


;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

;;;; if is built in from  emacs 24.4
;;;; no need for extra fullscreen package, it is built-in
;;;; full screen by ==> f11
     (toggle-frame-fullscreen) 
;;;; maximized by  ==> M-f10
     (toggle-frame-maximized) 




;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

apt-get update
apt-get install graphviz

plantuml txt to image
 '(plantuml-jar-path "/root/.emacs.d/jars/plantuml.jar")


(require 'plantuml-mode)
(plantuml-set-output-type 'png)
(defalias 'uml    'plantuml-preview)  ;; convert text to image 


@startuml
class ch2.Animal
class ch2.Dog
class ch2.Fib
class ch2.Test
class java.util.Arrays
class java.util.Collections
class java.util.Enumeration
class java.util.Hashtable
class java.util.LinkedList
class java.util.ListIterator
ch2.Dog --|> ch2.Animal
ch2.Fib ..> java.util.Arrays
ch2.Fib ..> java.util.Collections
ch2.Fib ..> java.util.Enumeration
ch2.Fib ..> java.util.Hashtable
ch2.Fib ..> java.util.LinkedList
ch2.Fib ..> java.util.ListIterator
@enduml


# emacs increase font face size 
(set-face-attribute 'default nil :height 160 :family "DejaVu Sans Mono")

# use system notes from menu
'(font-use-system-font t)
'(font-use-system-font nil)



;; LXDE emacs font 
;; work work work work work work 
;; change font size in emacs at LXDE
;; in gnome just change :height 158 in (custom-set-faces  '(default ((t (:family "DejaVu Sans Mono" :foundry "PfEd" :slant normal :weight normal :height 150 :width normal))))
;; or use defaut-system-font by '(font-use-system-font t)
;; or use (set-face-attribute 'default nil :height 160 :family "DejaVu Sans Mono")
(add-to-list 'default-frame-alist
             '(font . "DejaVu Sans Mono-16"))
;; or by M-x default-frame-alist
;; '(default-frame-alist
;;    (quote
;;     ((font . "DejaVu Sans Mono-16")
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
# emacs review


;;remove it in .emacs with M-x jtag only, so M-. not assign to any command
(define-key jdee-mode-map (kbd "M-.")   'jtags-update-tags-files) ;; update this this project TAGS file for this project only, in prj.el

;; add it to emacs_config.el 
;; add j in dired so i can jump to file directly 
(add-hook
 'dired-mode-hook
 (lambda()
   (define-key dired-mode-map "j" 'ido-find-file)))

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

;;;
;;; in dired press j to visit any file in folder or subfolder 
;;;

(add-hook
 'dired-mode-hook
 (lambda()
   (define-key dired-mode-map "j" 'ido-find-file)))



;;; stop keys not function  in jdee in ~/.emacs.d/elpa/jdee-20180218.919/jdee-keys.el
;; (require 'jdee)
;;; 
;;; put  c-c c-v z => (kill-extra + jdee-import-all )
;;; jdee-import-kill-extra-imports ==> remove duplicate imports
;;;
(defun my-jdee-import-all ()
  (interactive)
  (call-interactively  'jdee-import-all)
  (call-interactively  'jdee-import-kill-extra-imports)
)
;;;(define-key jdee-mode-map [?\C-c ?\C-v ?z] 'my-jdee-import-all) ==> not work like this, so must be hook defun
(defun my-stop-keys-jdee-hook ()
  (define-key jdee-mode-map  [?\C-c ?\C-v ?z]  'my-jdee-import-all)  ;; stop key C-c c-v z  in jdee-mode , stop key not function, jdee-import-all'  
;;;;  (define-key jdee-mode-map  [?\C-c ?\C-v ?z]  'nil)  ;; stop key C-c c-v z  in jdee-mode , stop key not function, jdee-import-all'  

;; add other keys to disabled it from jdee-mode from jdee-keys.el, stop keys not functions
)
(add-hook 'jdee-mode-hook  'my-stop-keys-jdee-hook);; start jdee-mode-hook then my-stop-keys-jdee-hook
;; to stop  keys in jdee-mode, must enter the hook
;; to chang keys in jdee-mode, must enter the hook

;; wow hard link for jsp, it is amazing
ln -P  /home/jdee_workspace/web9/web/html/AddLeagueFormServlet.jsp  /home/jdee_workspace/sourcePathx/servers/tomcat7/webapps/web9/html/AddLeagueFormServlet.jsp
;;; many files Hard Link
ln -f  -P  /home/jdee_workspace/web9/web/html/*.*  /home/jdee_workspace/sourcePathx/servers/tomcat7/webapps/web9/html/

;; -P hard lin, -f replace existing files (return 0 true) (return 1 fail)
(shell-command "ln -f -P  /home/jdee_workspace/web9/web/html/*.*  /home/jdee_workspace/sourcePathx/servers/tomcat7/webapps/web9/html/  ")




;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; done 

;; w3m change color
 '(w3m-anchor ((t (:foreground "green"))))
 '(w3m-tab-background ((t (:background "Black" :foreground "white"))))

;; change also color of tab w3m

;; C-c C-d i = my jdee-import-all better than C-c C-v z
(define-key jdee-mode-map  (kbd "C-c C-d i")  'my-jdee-import-all) 


;; replace  "" to '' ;; their is a problem in " " shape 
<c:forEach var='message' items='${errorMsgs}'>
	   <li>${message}</li>
</c:forEach>


;; add jsp-file to yassnipt
   <jsp-file>/html/success.jsp</jsp-file>


;; add this also to directive
<%@ page language="java" contentType="text/html; charset=ISO-8859-1" pageEncoding="ISO-8859-1"%>

;; column number and line number mode for jsp files (22,88)
(setq column-number-mode t)
(setq line-number-mode t)

;; stop it 
display-time-mode

;; change w3m bookmark file
'(w3m-bookmark-file "/home/importantDIR/EmacsBookmark/w3mBookmark")


;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; add doc and update classpath to c-c c-d i
  (jdee-project-update-class-list);; c-c c-v c-q, update classPath to add new created classes to classPath
"it is collection of command, first upate classPath, then import all,then kill-extra-import"


;; change location of c-c c-d unset-key
;; must be the first, because it is undefined undefined key 
(global-unset-key (kbd "C-c C-d")) ;; undefined key must be first,so i can use c-c c-d with other keys like c-c c-d i

[old]
;; (global-set-key (kbd "C-c C-d s") 'replace-string);; M-x rs

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;; auto-revert ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; auto-revert-mode
;; reload the changed file on disk automatically every 5 seconds if and only if it changed.
;; use it in dired and files 
;; auto-revert-mode ==> refresh if and only if it changed,(this is not a read refresh)
;;;;;;  '(auto-revert-interval 5) ;; use auto-revert 5 instead of default 5
;;;;;;  '(auto-revert-use-notify nil) ;;stop notify me for refresh and changing every time
;;;;;;  '(auto-revert-verbose nil) ;;stop notify me for refresh and changing every time
;;;;;;  '(global-auto-revert-mode t) ;; stop notify me for refresh and changing every time
;;;;;;  '(global-auto-revert-non-file-buffers t) ;; wow that is it, revert dired 
;;;;;;  '(magit-auto-revert-mode nil) ;; must sotp revert of magit to avoid errors messages
 ;; [old] no need of hook  (add-hook 'dired-mode-hook  'auto-revert-mode) ;; refresh dired by auto-revert-mode every 5 seconds if and only if the dir is changed

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;end of auto-reveret ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

M-x eshell
c-c c-l => history
c-c c-p/n => jump to prompts
history !5 => run command number 5  
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

key binding for c-c c-c j for comment select area emment, 

# -*- mode: snippet -*-
# name: jsp-comment
# key: jsp-comment
# binding: C-c C-c j
# --
<%--  `yas/selected-text`   --%> $0

very important note, not done yet
make all jsp for keybinding 
make all jsp for keybinding 
make all jsp for keybinding 
make all jsp for keybinding 
make all jsp for keybinding 
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

[done ]

;; M-x my-insert-date => 2018-07-31
(defun my-insert-date ()
  "Insert current date yyyy-mm-dd."
  (interactive)
  (insert (format-time-string "%Y-%m-%d")))



[done]
(defun my-jdee-import-all ()
"it is collection of command, first upate classPath, then import all,then kill-extra-import"
  (interactive)
  (jdee-package-update)
  (jdee-project-update-class-list) ;; c-c c-v c-q, update classPath to add new created classes to classPath
  (call-interactively  'jdee-import-all)
  (call-interactively  'jdee-import-kill-extra-imports)
)



;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;



;; visit class at point after update classpath
(defun my-jdee-open-class-source ()
"visit class after update classpath"
  (interactive)
  (jdee-project-update-class-list) ;; c-c c-v c-q, update classPath to add new created classes to classPath
  (jdee-complete-flush-classinfo-cache)
  (call-interactively  'jdee-open-class-source)
)
(define-key jdee-mode-map  (kbd "C-c C-d t")  'my-jdee-open-class-source)

;;;; put comment at c-c c-d t


(defun  my-jdee-wiz-override-method()
 (interactive)
 (jdee-project-update-class-list)
 (jdee-complete-flush-classinfo-cache)
 (jdee-wiz-override-method)
)
(define-key jdee-mode-map (kbd "C-c C-v C-o") 'my-jdee-wiz-override-method)





(defun my-jdee-import-all ()
"it is collection of command, first upate classPath, then import all,then kill-extra-import"
  (interactive)
  (jdee-package-update)
  (jdee-project-update-class-list) ;; c-c c-v c-q, update classPath to add new created classes to classPath
  (jdee-complete-flush-classinfo-cache)
  (call-interactively  'jdee-import-all)
  (call-interactively  'jdee-import-kill-extra-imports)
)
(define-key jdee-mode-map  (kbd "C-c C-d i")  'my-jdee-import-all) ;; c-c c-v z and c-c c-d i are same work


;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

;;; flycheck  

;;; c-c ! l => list errors and warrning
;;; f       => filter (errors,warrning)


;; syntax check for many languages html=tidy , php, xml

;; syntax languages check  like html-tidy css xml  js json php  shell-scripting sql xml  and more in M-x cs checkers
;; m-x list-packages flycheck
;; M-x cs checkers
;; M-x flycheck-select-checker  html-tidy
;; apt-get install tidy                => for html-tidy checker
;; apt-get install phpmd               => for php-phpmd checker
;; apt-get install xmlstarlet or xmllint         => xml checker
;; 
;; you can add new checker by
;; M-x cs checkers
;; apt-get install [checker for language]
;; C-c ! ==> flycheck keys

;; read this 
;; http://www.flycheck.org/en/latest/user/syntax-checks.html
;;  install xmllint for xml flycheck
;; apt-get update
;; apt install libxml2 libxml2-utils tidy
;; xmllint --valid example.xml

;; important
;; M-x list-packages then update all by emacs -q 


;; tie html-tidy with web-mode 
;; xmllint better than xmlstarlet
;; dont hook it by web-mode
;; flycheck use major-mode to work

;; what is the major-mode ??
;; there is only one and only noe major-mode
;; to view current major-mode use 
;; C-h v major-mode ==> it is the fist mode in the status-bar from the left

;; the way to setup the major-mode for xml file
;; (add-to-list 'auto-mode-alist '("\\.xml?\\'" . web-mode))
;; xml-mode is the major-mode 

  (eval-after-load 'flycheck
     '(flycheck-add-mode 'xml-xmllint 'xml-mode))

  (eval-after-load 'flycheck
     '(flycheck-add-mode 'html-tidy 'html-mode))


;; for javascript mode 
;;  (eval-after-load 'flycheck
;;     '(flycheck-add-mode 'javascript-eslint  'js-mode))


;; for php mode
;;  (eval-after-load 'flycheck
;;     '(flycheck-add-mode 'phpmd  'php-mode))


;; for sql  mode
;; support PostgreSQL only
;; not not not support mysql
;; not not not support mysql
;; not not not support mysql
;; not not not support mysql
;;
;; not by apt install sqlint but by gem install sqlint
;; gem install sqlint                  => sql checher 
;; gem uninstall sqlint                => to remove it 

;;  (eval-after-load 'flycheck
;;     '(flycheck-add-mode 'sql-sqlint  'sql-mode))


;; must config flycheck 
;; must config flycheck 
;; must config flycheck 
;; must config flycheck 
;; '(global-flycheck-mode t)

;;  very important note
;; '(flycheck-checker-error-threshold 100) 
;; less than 100 will disturb you every time open file like hi.el(if have more than 100 warrning and errors)

;;; M-x cs   Flycheck Check Syntax Automatically:
;;;         check after change file automatically
;;;    '(flycheck-check-syntax-automatically (quote (idle-change mode-enabled)))
;; must config flycheck 
;; must config flycheck 
;; must config flycheck 

;; 
(define-key flycheck-mode-map (kbd "C-c e") 'flycheck-next-error)    ;; also c-c ! n
(define-key flycheck-mode-map (kbd "C-c r") 'flycheck-previous-error);; also c-c ! p
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;


M-x  jdee-toggle-project-switching  on/off 
(be carefull,no need to relad prj.el when changing project )
load prj.el manually for every project  M-x jdee-load-project-file
after load prj.el will not changed when you switch project,
 '(jdee-project-context-switching-enabled-p nil)




[not done]
;; add this comment to yassnippet
  <!-- /html/addLeague.do  *.do actions -->
/root/.emacs.d/mysnippet/web-mode/struts-config






;; disable flycheck in jdee-mode, so i can use c-c e and c-c r for flymake in jdee 
(add-hook
 'jdee-mode-hook
 (lambda()
   (flycheck-mode -1)))





xref--xref-buffer-mode


;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

;; in dired press A then searh, i change the face faont named "highlight" below colors
(custom-set-faces
'(highlight  ((t (:background "yellow2" :foreground "red2"))))
)

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

[very important]
how can I change any color ???
M-x list-faces-display  then
put color here then c-x c-e(to evalute)

(custom-set-faces
'(put_color_her  ((t (:background "yellow2" :foreground "red2"))))
) 
;; c-x c-e

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; [done]
 '(highlight ((t (:background "#005000" :foreground "yellow2"))))
(define-key flycheck-mode-map (kbd "C-c w") 'flycheck-list-errors);; also c-c ! l
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;


;; M-x regexp-builder, [important] C-c TAB => string then use one \ not \\
(require 're-builder)
(setq reb-re-syntax 'string)  ;; c-c tab => one backslash


;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
[done]
;; add  --color to grep
    ("find . -iname '*note*.txt'  -type f -exec grep --color -nHi -e \"emacs\" {} +" . 33)))

;;  i change the jdee-find.el and B(byte it) to add --color to grep like this
     (format "find %s %s -type f | xargs grep --color  %s %s -n \"%s\" /dev/null"
so when update packages i will update this also

================================================================
;; 1-
;;    in jdee-find.el in this function (defun jdee-find-grep-internal) add --color to grep then B byte it
;;     (format "find %s %s -type f | xargs grep --color  %s %s -n \"%s\" /dev/null"
;;
;;
;; note:- the second way is to override function  using (require 'jdee-find) then override (defun jdee-find-grep-internal) in jdee-find.el  in .emacs

;;
;; 2-
;; (save-excursion) return to original cursor position. after update package name in jdee-package.el in (defun jdee-package-update ()
;; /root/.emacs.d/elpa/jdee-20180711.2036/jdee-package.el
;; add (save-excursion) to (defun jdee-package-update () in jdee-package
;; then B byte it 
;;;;;  (save-excursion
;;;;;        (goto-char (point-min))
;;;;;        (if (re-search-forward jdee-package-package-regexp nil t)
;;;;;  	  (replace-match package)
;;;;;  	(insert package)
;;;;;  	(newline))
;;;;;  ) ;; end of save-excursion
;;;;;  ))) 
;;;;;
;;;;;
;;;;; ;; note:- the second way is to override function using  (require 'jdee-package)  then override (defun jdee-package-update())  in .emacs
;;;;;



;; jdee-package.el
(require 'jdee-package)
(defun jdee-package-update ()
  "Create or update the package statement in the current Java source
file buffer based on the file's location relative to the root of
the package directory as specified by one of the entries in
`jdee-package-search-classpath-variables' or `jdee-sourcepath'.
If these variables do not specify the root of the package directory,
this command does nothing. This command signals an error if the
 major mode of the current buffer is not `jdee-mode'."
  (interactive)
  (or (eq major-mode 'jdee-mode)
      (error "Invalid major mode found.  Must be `jdee-mode'"))
  (let ((package (jdee-package-generate-package-statement)))
    (unless (string= package "")
(save-excursion
      (goto-char (point-min))
      (if (re-search-forward jdee-package-package-regexp nil t)
	  (replace-match package)
	(insert package)
	(newline))
)
)))

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

[done]
/home/temp
# remove empty lines in C-c C-c c in jsp-comment yassnippet


# jsp-jstl forEach make it like this

	<c:forEach var="message" items="${errorMsgs}">
	    ${message}
	</c:forEach>

#  } if {  like this conventions 

# add it to c-c c-d i  (defun my-jdee-import-all ())
  (jdee-load-project-file) ;; load prj.el 



Q;- what is .#file  files ?
Those are lock files. .#file
When two users edit the same file at the same time
they are likely to interfere with each other. Emacs 
tries to prevent this situation from arising by recording
a file lock when a file is being modified. Emacs can then
detect the first attempt to modify a buffer visiting a file 
that is locked by another Emacs job, and ask the user what to do.
The file lock is really a file, a symbolic link with a special
name, stored in the same directory as the file you are editing.
(On file systems that do not support symbolic links, a regular file is used.)

To disable it .#file 
(setq create-lockfiles nil) ;; no warning for lock 



;; emacs 
file~  (backup)  #file# (auto-save)
The file with the ~ is a backup file that automatically gets created when you save a file.
The #readme.txt# is the file being currently edited/in use (i.e., the autosave version).
That will usually go away (unlike the ~ file)
when you exit emacs normally (if it crashes or gets killed the # files may stay around).





==========================================
lock files ( .#file  ) 
عندما يقوم مستخدمان بتعديل الملف نفسه في نفس الوقت
سينتج عندنا الملف اعلاه ولا يمكن نقله لمجلد اخر
ولايقاف هذه الخاصية نكتب 
(setq create-lockfiles nil)
وهكذا يمكن التعديل والحفظ على نفس الملف من شخصين او برنامجين بنفس الوقت لكن لها مساوئ كثيرة 

(setq create-lockfiles t) ;; default
عند التعديل والحفظ على نفس الملف سيتم  سؤال المستخدم عن القفل
lock file ??? .#file

;; stop auto save to see this message
ex:- /root/hi.txt locked by root@nokia-PC (pid 1847): (s, q, p, ?)?  [2 times] 
 this file locked for user s,p,q
 s=steal locks  ;; اسرق القفل حتى تقدر تعدل الملف باستخدام الحرف  سين
 p=proceed to your own;; dont steal the lock from the other user ;;  لا تسرق القفل بل ابق القفل عند المستخدم الثاني 
 q=quit ;; 

note:-  
stop the auto save to work, or stop real-autosave
الشرط الوحيد لعملها هو ايقاف الحفظ التلقائي



so,please make it like this
(setq create-lockfiles t)
(setq create-lockfiles t);; stop synchronized file editing by two users( programs  ),   then no lock files(threads)  .#file , and no ask the user  about lock file 
please read this link
https://www.gnu.org/software/emacs/manual/html_node/emacs/Interlocking.html#Interlocking

==========================================
auto-save ( #file# )
يحفظ الملف الحالي كل 30 ثانية ويختفي ملف الهاش اذا تم اطفاء الايماكس بشكل صحيح
ولكن في احيان كثيرة يبقى اذا تم قتل ايماكس او اطفاء الحاسوب بشكل غير صحيح
وفي هذه الحالة تحتاج الى ازالة  ملفات الهاش بشكل يدوي لانها ستبقى ولن تختفي لوحدها 

~/.xsession-errors ;; if system crash log errors here
save session into ==> ~/.emacs.d/auto-save-list/.saves-2448-nokia-PC~
M-x recover-session ;; after crash

انا اظن ان 30 ثانية  وقت طويل
لذلك الافضل جعله يحفظ كل 1 ثانية
وبذلك لا تحتاج ابدا الى استخدام
ctrl-x ctrl-s
نقوم بتغير قيمة المتغير 
(auto-save-timeout 1) 
(auto-save-visited-file-name t)
بهذه الطريقة يقوم  بالحفظ بشكل تلقائي  كل ثانية
وطبعا يمكن استخدام التراجع بعد الحفظ 
undo/redo 
==========================================
backup file ( file~ )
ملفات النسخ الاحتياطي ويمكن نقلها الى مجلد واحد
ولكن انا شخصيا افضل ايقافها وعدم نقلها وعدم التعامل معها
والافضل استخدام الامر سكواش لنسخ المجلدات او الاقراص
mksquashfs /home  backup_home.fs   -b 1M  
mkdir temp
mount -t squashfs backup_home.fs temp
==========================================



[not done]
add it to c-c c-c s   jsp-scriptlet
"request.getParameter(\\"param\\");"


====================================================================
read this, 
http://pragmaticemacs.com/

================================================================
emmet-preview-mode  => emmet[p]
(add-hook 'web-mode-hook 'emmet-preview-mode)  ;; when open web-mode, open emmet-mode


# important note 
when move class to new folder must stop M-x autosavemode because it will generate #file.java# 
when move jsp   to new folder must stop M-x autosavemode because it will generate #file.java# 

;; stop and play auto-save-mode 
  (auto-save-mode -1)   ;;stop auto-save  so can move java file from package to other packages 
  (jdee-load-project-file) ;; load prj.el 
  (jdee-package-update)  ;;  it is change the cursor location, so i am using  (save-excursion) in jdee-package.el to save cursor location
  (jdee-project-update-class-list) ;; c-c c-v c-q, update classPath to add new created classes to classPath
  (jdee-complete-flush-classinfo-cache)
  (call-interactively  'jdee-import-all)
  (call-interactively  'jdee-import-kill-extra-imports)
  (auto-save-mode 't)  ;; run auto-save again


emmet preview color box is red ,background is black

M-x cs Emmet Preview Default, what is this (forget it ), if i use it then i cant use c-c z 

emmet.el remove "steeping face tooltip \n " and byte it by B 


====================================================================
;; fix error mysql emacs
   https://unix.stackexchange.com/questions/233518/mariadb-client-has-no-prompt-in-emacs-sql-mode
   
;; emacs mysql to fix error [[ No prompt found or ‘comint-prompt-regexp’ not set properly ]]
put this in .emacs
(sql-set-product-feature 'mysql :prompt-regexp "^\\(MariaDB\\|MySQL\\) \\[[_a-zA-Z]*\\]> ")
or this
(sql-set-product-feature 'mysql :prompt-regexp "^\\(MariaDB\\|MySQL\\) \\[[_a-zA-Z()]*\\]> ")


;; add it to .emacs
;; fix problem in mysql ==> [[ No prompt found or ‘comint-prompt-regexp’ not set properly ]]
;; what is means of above code ?
;; it works, but when there is no database selected,
;; the prompt is: MariaDB [(none)]> Change the regexp to match it:
(sql-set-product-feature 'mysql :prompt-regexp "^\\(MariaDB\\|MySQL\\) \\[[_a-zA-Z]*\\]> ")

====================================================================
;; important note
;; always when open new file.sql 
M-x ssp 
M-x ssb

================================================================

;; mysql mariaDB
https://github.com/schemaspy/schemaspy/issues/71
https://downloads.mariadb.org/connector-java/+releases/

[best one]
java -jar ~/.emacs.d/schemaSpy/schemaspy-6.0.0.jar  -t mariadb   -dp ~/.emacs.d/schemaSpy/mariadb-java-client-2.3.0.jar    -db mysql  -all  -host localhost -port 3306 -u root -p ahmadjar   -o ~/Ediagram  -charset=UTF-8
java -jar ~/.emacs.d/schemaSpy/schemaspy-6.0.0.jar  -t mariadb   -dp ~/.emacs.d/schemaSpy/mariadb-java-client-2.3.0.jar    -db mysql  -all  -host localhost -port 3306 -u root -p ahmadjar   -o ~/Ediagram  -charset=UTF-8  -ahic  -hq 
(concat "java -jar ~/.emacs.d/schemaSpy/schemaspy-6.0.0.jar  -t mariadb  -dp ~/.emacs.d/schemaSpy/mariadb-java-client-2.3.0.jar    -db " db " -all  -host localhost -port 3306 -u " user  " -p " password "  -o ~/Ediagram  -charset=UTF-8  -ahic  -hq " )
(concat "java -jar ~/.emacs.d/schemaSpy/schemaspy-6.0.0.jar  -t mariadb  -dp ~/.emacs.d/schemaSpy/mariadb-java-client-2.3.0.jar    -db " db " -all  -host localhost -port 3306 -u " user  " -p " password "  -o ~/Ediagram  -charset=UTF-8 " )



[not work]
java -jar schemaspy.jar -t mariadb -dp                                           \drivers\mariadb-java-client-1.5.9.jar    -db dbName -host localhost -port 3306 -u root -p password -o \doc\schemaspy\output -charset=UTF-8

[work]
java -jar ~/.emacs.d/schemaSpy/schemaspy-6.0.0.jar  -t mariadb   -dp ~/.emacs.d/schemaSpy/mariadb-java-client-1.5.9.jar    -db mysql  -all  -host localhost -port 3306 -u root -p ahmadjar   -o ~/Ediagram    -charset=UTF-8


[fail]
java -jar ~/.emacs.d/schemaSpy/schemaspy-6.0.0.jar  -t mariadb   -dp ~/.emacs.d/schemaSpy/mysql-connector-java-8.0.12.jar    -db mysql  -all  -host localhost -port 3306 -u root -p ahmadjar   -o ~/Ediagram  -charset=UTF-8

[fail]
java -jar ~/.emacs.d/schemaSpy/schemaSpy.jar -dp ~/.emacs.d/schemaSpy/mysql-connector-java-5.0.4-bin.jar -t mysql -db mysql  -all  -host localhost -port 3306 -u root  -p ahmadjar  -o ~/Ediagram  -ahic  -hq 


[not work]
mysql change root password
https://www.digitalocean.com/community/tutorials/how-to-reset-your-mysql-or-mariadb-root-password
arabic 
https://itwadi.com/node/3013
	

;; ================================
;; then new one  add it to .emacs
(defun my-sql-diagram ( user password db )
  (interactive 
   (list
   (read-string "User: "     )
   (read-passwd "Password: " )
   (read-string "Data Base: ")
   ) current-prefix-arg )      ;;  current prefix arg ==> when press M-n M-p will display the old arguments for these fields only 
  (shell-command
     (concat "java -jar ~/.emacs.d/schemaSpy/schemaspy-6.0.0.jar  -t mariadb  -dp ~/.emacs.d/schemaSpy/mariadb-java-client-2.3.0.jar    -db " db " -all  -host localhost -port 3306 -u " user  " -p " password "  -o ~/Ediagram  -charset=UTF-8 " )
;;     (concat "java -jar ~/.emacs.d/schemaSpy/schemaSpy.jar -dp ~/.emacs.d/schemaSpy/mysql-connector-java-5.0.4-bin.jar -t mysql -db " db " -all  -host localhost -port 3306 -u " user  " -p " password "  -o ~/Ediagram  -ahic  -hq " )
     )

    (w3m-find-file "~/Ediagram/index.html")  ;; open with w3m
;;  (dired "~/Ediagram/root/diagrams/summary/")  ;; open dired with this path 
;;  (dired-filter-by-regexp "relationships.*.png")
;;  (dired-find-file) ;; means press enter at the current file 
;;  (delete-other-windows)
)



================================================================

;; use it in mysql *SQL*
c-x r w => save cursor location in current window, but the other window does not save cursor location (save cursor for current window only)
c-x r f => save cursor location in current window, and  the other window will  save cursor location (always save cursor)

================================================================
use ecj-4.6.1 the last version 
https://mvnrepository.com/artifact/org.eclipse.jdt.core.compiler/ecj/4.6.1
the last one in tomcat9 => ecj-4.7.3a.jar
================================================================
youtube-aria2.sh -f  18  https://www.youtube.com/playlist?list=PLEAQNNR8IlB4R7NfqBY1frapYo97L6fOQ


================================================================

eimp image the best solution for zoom in and zoom out in image is 
zoom in but but but 
M-x image-transform-scale 1.5  ;; scale image 1.5 zoom in, 0.5 zoom-out
M-x then M-x image-transform-fit-width  ;; for fit image as width 
M-x image-transform-reset ;; small size as original 
the best zoom in better thant + -

;; or put scale = 1, because the original scale is 0.5(i must change it, c-h v image-transform-scale)

;; open image with scale 1.5 and fit image by width,
;; check c-h v  image-transform-resize, c-h v image-transform-scale
;; M-x image-trnsform-rest ;; to view image as is 
;; (require 'image-mode)
;; (setq image-transform-resize 'fit-width) ;; this is ok 
;; (setq image-transform-scale 1.5)         ;; this is not ok, it will be overridden every time by 0.5
;; (defalias 'zoom    'image-transform-scale)


;; [ fix error ] the image is not complete in plantuml 
;; increase image size of plantuml, M-x uml => file.txt to image
M-x cs Plantuml Java Args ==> ("-DPLANTUML_LIMIT_SIZE=8192  -Djava.awt.headless=true" "-jar")

this is for M-x umlx => dired to image
(shell-command "java -DPLANTUML_LIMIT_SIZE=8192  -jar /home/jdee_workspace/sourcePathx/jars/plantuml.1.2018.10.jar  ~/plantumlDependency.txt   -o ~/  ") ;; convert plantumlDependency.txt to image named plantumlDependency.png 

================================================================
 '(plantuml-jar-path
   "/home/jdee_workspace/sourcePathx/jars/plantuml.1.2018.10.jar")
 '(plantuml-java-args
   (quote
    ("-DPLANTUML_LIMIT_SIZE=81920000" "-Xmx1024m" "-jar")))
;;;;;then down
  (shell-command "java -Xmx1024m  -jar /home/jdee_workspace/sourcePathx/jars/plantuml-dependency-cli-1.4.0.jar  -o ~/plantumlDependency.txt")  ;; convert current directory( dired ) to plantumlDependency.txt 
  (shell-command "java -Xmx1024m  -DPLANTUML_LIMIT_SIZE=81920000 -jar /home/jdee_workspace/sourcePathx/jars/plantuml.1.2018.10.jar  ~/plantumlDependency.txt   -o ~/  ") ;; convert plantumlDependency.txt to image named plantumlDependency.png 
    ;;  -DPLANTUML_LIMIT_SIZE=81920000 max image size and  -Xmx1024m max java memory




================================================================

[error at emms after update]
  emms               20180927.1736 dependency            The Emacs Multimedia System
  emms-info-media... 20131223.1300 installed             Info-method for EMMS using medianfo
  emms-mark-ext      20130529.327  installed             Extra functions for emms-mark-mode and emms-tag-edit-mode
  emms-soundcloud    20131221.1145 installed             EMMS source for Soundcloud audio sharing platform


[fixed]
;; to fix emms open this file ==> emms-setup
  (require 'emms-setup)  
;;  (emms-all)
  (emms-default-players)
  (emms-minimalistic)

================================================================
[not done]
change all types in plantuml to svg instead of png
(plantuml-set-output-type "svg") ;; M-x plantuml-set-output-type svn, ping or utxt

(shell-command "java -Xmx1024m  -DPLANTUML_LIMIT_SIZE=81920000 -jar /home/jdee_workspace/sourcePathx/jars/plantuml.1.2018.10.jar  -tsvg  ~/plantumlDependency.txt   -o ~/  ") ;; convert plantumlDependency.txt to image named plantumlDependency.png 
(dired-filter-by-regexp "plantumlDependency.svg")
================
;; gui so it will be dir dynamically, then open file with firefox
(defun plantuml-gui-dired()
  (interactive)
    (shell-command "java -Xmx1024m  -DPLANTUML_LIMIT_SIZE=81920000 -jar /home/jdee_workspace/sourcePathx/jars/plantuml.1.2018.10.jar  -tsvg -gui  & ") ;; gui
    ;;  -DPLANTUML_LIMIT_SIZE=81920000 max image size and  -Xmx1024m max java memory
    ;; -tsvg generate svg file instead of png, because it is faster
    ;; to open svg file we need apt-get install inskscape librsvg*
)
 ;; convert folder(dired ) to image called  ~/plantumlDependency.svg
(defalias 'umlGUI 'plantuml-gui-dired) ;; apt-get install inkscape librsvg2* to open svg file
;; svg faster than png

[do this to open svg with good colors and good view]
M-x  disable auto-image-file-mode
or tweak image-file-name-extensions.


================================================================
remove apt-get remove librsvg2-bin, so the command rsvg in emacs which try to open svg file, is very slow, because rsvg convert svg->png 
apt-get remove inkscape
apt-get remove librsvg2-bin

;; svg open-with firefox as default
command pcmanfm (file-manager)
right click open-with
use /opt/firefox/firefox not /usr/bin/firefox 

(my-dired-open-in-external-app) ;; open svg by firefox =>  open with default external application the current dired file
================================================================

(buffer-file-name)
================

;; in  buffer, then M-x uml, c-x c-k ,  then alt-enter svg-firefox  (open with external default application ) or or or M-x umlGUI (for dynamically changed )
(defun plantuml-text-to-svg()
  (interactive)
    (shell-command ( concat "java -Xmx1024m  -DPLANTUML_LIMIT_SIZE=81920000 -jar /home/jdee_workspace/sourcePathx/jars/plantuml.1.2018.10.jar  -tsvg " (buffer-file-name) )) ;; convert plantumlDependency.txt to image named plantumlDependency.png 
    ;;  -DPLANTUML_LIMIT_SIZE=81920000 max image size and  -Xmx1024m max java memory
    ;; -tsvg generate svg file instead of png, because it is faster

;;  (dired "~/")  ;; open dired with this path 
;;  (dired-filter-by-regexp "plantumlDependency.svg")
;;  (my-dired-open-in-external-app) open svg->firefox
;;  (dired-find-file) ;; means press enter at the current file 
;;  (delete-other-windows) ;; c-x 1
)
(defalias 'uml 'plantuml-text-to-svg) ;; dont dont dont install ==>apt-get install inkscape librsvg2* to open svg file
;; svg faster than png
;; svg faster than png
;; remove apt-get remove librsvg2-bin, so the command rsvg in emacs which try to open svg file, is very slow, because rsvg convert svg->png 
;; remove inkscape
;; remove librsvg2-bin

[do this to open svg with good colors and good view]
M-x  disable auto-image-file-mode
or tweak image-file-name-extensions.



================

;; open dired  then M-x umlx
;; the output image in ~/plantumlDependency.svg
 ;; convert folder(dired ) to image called  ~/plantumlDependency.svg
(defun my-plantuml-dependency-dired()
  (interactive)
    (shell-command (concat "java -Xmx1024m  -jar /home/jdee_workspace/sourcePathx/jars/plantuml-dependency-cli-1.4.0.jar  -o \'"  default-directory "ClassDiagram.txt\' "))  ;; convert current directory( dired ) to ClassDiagram.txt 
    (shell-command (concat "java -Xmx1024m  -DPLANTUML_LIMIT_SIZE=81920000 -jar /home/jdee_workspace/sourcePathx/jars/plantuml.1.2018.10.jar  -tsvg \'"  default-directory"ClassDiagram.txt\' ")) ;; convert ClassDiagram.txt to image named ClassDiagram.svg
    ;;  -DPLANTUML_LIMIT_SIZE=81920000 max image size and  -Xmx1024m max java memory
    ;; -tsvg generate svg file instead of png, because it is faster
    ;; to open svg file we need apt-get install inskscape librsvg*

;;  (dired "~/")  ;; open dired with this path 
;;  (dired-filter-by-regexp "ClassDiagram.svg")
;;  (my-dired-open-in-external-app)
;;  (dired-find-file) ;; means press enter at the current file 
;;  (delete-other-windows)
)
(defalias 'umlx 'my-plantuml-dependency-dired) ;; dont dont dont install ==>apt-get install inkscape librsvg2* to open svg file
;; svg faster than png
;; svg faster than png
;; remove apt-get remove librsvg2-bin, so the command rsvg in emacs which try to open svg file, is very slow, because rsvg convert svg->png 
;; remove inkscape
;; remove librsvg2-bin


================================================================
;; [done] 
;; M-s in w3m it is amazing 
;; i also change the /root/.emacs.d/elpa/w3m-20180405.520/w3m-session.el by replacing 5 by 50
 '(w3m-session-automatic-keep-number 50)
 '(w3m-session-deleted-keep-number 50)
 '(w3m-session-file "/home/importantDIR/w3m/.sessions")

=================================================================-
add it to 
;; convert it to left shift,
setkeycodes  56  42

================================================================
;;best setting for prj.el
http://epian-wiki.appspot.com/wiki/Emacs/JDEE

[done]
;; c-c c-v c-f 
;; in prj.el, dont put setting in .emacs for jdee 
'(jdee-find-file-regexp '("*.java" "*.jsp" "*.tag" "*.xml" "*.html" "*.properties"))


https://github.com/jdee-emacs/jdee-test/blob/master/prj.el.template

;;  - convert from eclipse and jdee project by generate prj.el from jde-int
;;  https://www.emacswiki.org/emacs/Jdee-Eclipse-integration
;;  https://www.emacswiki.org/emacs/JavaDevelopmentEnvironment
;;  http://wttools.sourceforge.net/emacs-stuff/emacsandjdee.html



================================================================
;; list in emacs
(setq nums (quote (11 22 33 44 ))) ;; define list 
(set-list-as nums);; to call list just put the name of list 
(butlast nums 0)   ;; call all element in list without removing any element

;; merge lists
(setq num1 (quote (33 44)))
(append (quote (11 22))  (butlast num1 0)  )

(append (quote( 1 2)) (quote (3 4)))
(append (list 1 2) (list 3 4))
================================================================
[done ]
emacs cpu mem network download /upload with graphic 
M-x list-packages
symon
M-x cpu 

;; fix errors in emacs by 
to see what happend in emacs in progress, which emacs called function in memory and cpu
M-x profile-start
M-x profile-report
M-x profire-stop

c-h e

================================================================

(custom-set-faces
 '(grizzl-selection-face                   ((t (:foreground "yellow"))))
)


================================================================
[done]
;; c-c j set global, not local, so i can vist class file from xml 
(global-set-key  (kbd "C-c j") 'my-jtags-show-declaration) ;; visit tag(method,function), to return c-c s

======================= zobda  xml nxml =========================================

;; dont use it, 
;; it is optional for ac
;; with this c-m-i will complete automatically
;; If you want to start completion manually from the beginning without  just type  < c-m-i, but at this case you will lose the AC-dict
(require 'auto-complete-nxml)
(setq auto-complete-nxml-automatic-p t) 

;; fedora
https://fedoraproject.org/wiki/How_to_use_Emacs_for_XML_editing


;; use it 
[dont use it ]apt-get install trang ;; for xml rng , it is old, dont use it 
;; (setq auto-mode-alist (cons '("\\.xml$" . nxml-mode) auto-mode-alist))
;; (setq auto-mode-alist (cons '("\\.xsl$" . nxml-mode) auto-mode-alist))
(autoload 'xml-mode "nxml" "XML editing mode" t)
(eval-after-load 'rng-loc
  '(add-to-list 'rng-schema-locating-files "/home/jdee_workspace/sourcePathx/jars/schemes/schemas.xml"))


;; dont  use this
(add-to-list 'rng-schema-locating-files   "/home/jdee_workspace/sourcePathx/jars/schemes/MySchema.rnc")
   	       
;; good notes
http://lgfang.github.io/mynotes/emacs/emacs-xml.html

;; not good, dont use it for generating rng or rnc or xml
apt-get install xsltproc

;; very good for  rng -> rnc    xml -> rnc   dtd -> rnc 
apt-get intsall trang

;; very good
M-x rng-set-schema-file  ==> .rnc then register it automatically in schema.xml  M-x cs  Rng Schema Locating Files
/home/jdee_workspace/sourcePathx/jars/schemes/schema/schemas.xml
(autoload 'xml-mode "nxml" "XML editing mode" t)
(eval-after-load 'rng-loc  '(add-to-list 'rng-schema-locating-files "/home/jdee_workspace/sourcePathx/jars/schemes/schemas.xml"))

dont use this 
;;;;;;  ;;(add-to-list 'rng-schema-locating-files   "/home/jdee_workspace/sourcePathx/jars/schemes/MySchema.xml")


;; schema locating files
(autoload 'xml-mode "nxml" "XML editing mode" t)
(eval-after-load 'rng-loc  '(add-to-list 'rng-schema-locating-files "/home/jdee_workspace/sourcePathx/jars/schemes/schemas.xml"))
;; c-c c-f => insert end tag
;; c-c c-s c-w  => show which rnc file run
;; C-c C-s C-a, which re-applies the rules based on the current content of the document.
;; c-c c-n next error in xml, 
;;
;; [not done yet]
;; c-c c-p  previous  error in xml, 
;; xml invalid (change color from yellow to red ) M-x cs =>  Font Lock Warning Face
;;

[not done yet]
;; 
;; i prefer to stop it
;; add it as it to .emacs, if it is (t) it will stop ac-mode and ac from schema file , but if it is (nil) it will not stop ac-mode
;; '(auto-complete-nxml-automatic-p nil)
;;(require 'auto-complete-nxml)
;;(setq auto-complete-nxml-automatic-p t)   ;; add it as it to .emacs, if it is (t) it will stop ac-mode and ac from schema file , but if it is (nil) it will not stop ac-mode
;;(setq auto-complete-nxml-automatic-p nil) ;; add it as it to .emacs, if it is (t) it will stop ac-mode and ac from schema file , but if it is (nil) it will not stop ac-mode

;; [not done yet]
(add-hook 'nxml-mode-hook  'emmet-mode) ;; open nxml mode first then open emmet mode 
(add-hook 'emmet-mode-hook 'emmet-preview-mode)  ;; when open emmet-mode, open emmet-preview-mode


;; [ not done yet ]
;; i will seperate web mode dic and snippet into web-mode and nxml-mode
;; copy dic and snippet from web-mode to nxml-mode
;; add nxml-mode to  '(ac-modes (quote  nxml-mode  and remove xml-mode from '(ac-modes

;; [not done yet]
;;(add-to-list 'auto-mode-alist '("\\.xml?\\'" . web-mode))
(add-to-list 'auto-mode-alist '("\\.xml?\\'" . nxml-mode))


;; must be like this  schemas.xml
========== schema.xml work =============
<?xml version="1.0"?>
<locatingRules xmlns="http://thaiopensource.com/ns/locating-rules/1.0">
    <uri resource="../../../web11/src/extra/web/html/addLeague.jsp" uri="web-jsptaglibrary_2_1.rnc"/>
    <!-- web.xml  xmlns="http://xmlns.jcp.org/xml/ns/javaee" -->
    <namespace ns="http://xmlns.jcp.org/xml/ns/javaee" uri="web-app_4_0.rnc"/>
    <!--  xmlns="http://www.springframework.org/schema/beans" -->
    <namespace ns="http://www.springframework.org/schema/beans" uri="spring-beans.rnc"/>
    <!-- DOCTYPE struts-config PUBLIC -->
    <documentElement localName="struts-config" uri="struts-config_1_3.rnc" />
</locatingRules>
<!-- all doc for nxml-mode  -->
<!-- https://www.gnu.org/software/emacs/manual/html_mono/nxml-mode.html -->
============ end of schema.xml =====

;; dont use it
xsltproc 

[work dtd to rnc]
trang  web-app_2_3.dtd        web-app_2_3.rnc


[work rnc after one week]
[work rnc after one week]
[work rnc after one week]
https://www.gnu.org/software/emacs/manual/html_mono/nxml-mode.html

;; 2017 msv, must install then build it by maven by command (mvn)
https://github.com/kohsuke/msv

apt install maven
cd msv-master/
mvn     ==> must be a pom.xml

;; dont download it, it's old (2009)
apt install libmsv-java 


;; /home/jdee_workspace/sourcePathx/jars/private_JAR/msv-rngconverter-2017.2-SNAPSHOT.jar
;; [ work work work work work work ]  xsd --> rng
;; msv-rngconverter-2017.2-SNAPSHOT.jar in /home/jdee_workspace/sourcePathx/jars/private_JAR/
;; must have all xsd files and dtd files from jar file like spring.jar  servlet.jar, copy all files, all means all xsd dtd xml
java -jar msv-rngconverter-2017.2-SNAPSHOT.jar web-app_4_0.xsd web-app_4_0.rng
;; then work work       rng --> rnc
;;  apt-get install trang
trang web-app_4_0.rng web-app_4_0.rnc   



;; dtd to rng by msv-rngconverter-2017, from doc inside github project https://github.com/kohsuke/msv
java -jar msv-rngconverter-2017.2-SNAPSHOT.jar web-app_2_3.dtd web-app_2_3.rng
;; or or or 
trang web-app_4_0.dtd  web-app_4_0.rnc   



;; fix this error in spring-beans.xsd
java -jar msv-rngconverter-2017.2-SNAPSHOT.jar /home/temp/webxml4/org/springframework/beans/factory/xml/spring-beans.xsd  /home/temp/webxml4/org/springframework/beans/factory/xml/spring-beans.rng
namespace "http://www.w3.org/XML/1998/namespace" is referenced but no schema definition of this namespace was found.
the fixing by replacing this

    <import namespace="http://www.w3.org/XML/1998/namespace"
                      schemaLocation="http://www.w3.org/2001/xml.xsd"/>
     
instead of

    <import namespace="http://www.w3.org/XML/1998/namespace"/>


note :- must be connected to internet 


;; fix errors by
;; fix errors by
;; fix errors by

1-fix this error
the fixing by using this 
 <xsd:import namespace="http://www.springframework.org/schema/beans" schemaLocation="spring-beans.xsd"/>
 <xsd:import namespace="http://www.springframework.org/schema/tool"  schemaLocation="spring-tool.xsd"/>

instead of 
 <xsd:import namespace="http://www.springframework.org/schema/beans" schemaLocation="http://www.springframework.org/schema/beans/spring-beans.xsd"/>
 <xsd:import namespace="http://www.springframework.org/schema/tool"  schemaLocation="http://www.springframework.org/schema/tool/spring-tool.xsd"/>




2- fix this error in spring-beans.xsd
java -jar msv-rngconverter-2017.2-SNAPSHOT.jar /home/temp/webxml4/org/springframework/beans/factory/xml/spring-beans.xsd  /home/temp/webxml4/org/springframework/beans/factory/xml/spring-beans.rng
namespace "http://www.w3.org/XML/1998/namespace" is referenced but no schema definition of this namespace was found.
the fixing by using this

    <import namespace="http://www.w3.org/XML/1998/namespace"
              schemaLocation="http://www.w3.org/2001/xml.xsd"/>
or

    <xsd:import namespace="http://www.w3.org/XML/1998/namespace"
                 schemaLocation="http://www.w3.org/2001/xml.xsd"/>
     
instead of

    <import namespace="http://www.w3.org/XML/1998/namespace"/>
or 
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace"/>





nxml 
c-c c-p   [not done]  (rng-previous-error ARG)
c-c c-n   (rng-next-error ARG)
c-c c-s c-a => (rng-auto-set-schema-and-validate) relaod rnc when changed
;; it is already for <c-m-i

;; note
;; el.tld  jstl.tld  => tld is xml, so I  can convert it to rnc by trang -I xml -O rnc
trang -I xml -O rnc /home/temp/webxml4/META-INF/x.tld /home/temp/webxml4/META-INF/x.rnc

======= [not work 2009] ===========
# not work good, dont use it.
apt-get install libmsv-java
/usr/share/java/msv-rngconverter.jar
======= [not work 2009] ===========






;; [work rnc nxml-mode]
;; [work rnc nxml-mode]
;; [work rnc nxml-mode]
;; [work rnc nxml-mode]
[step by step to generate rnc files for nxml-mode]
[step by step to generate rnc files for nxml-mode]
[step by step to generate rnc files for nxml-mode]

1-where is xsd files ?
  in jar files like servlet.jar spring.jar jsp.jar 

2-  extract jar file by 
jar -xf  servlet.jar

3- then build msv-master/ msv-rngconverter-2017.2-SNAPSHOT.jar by
downlaod https://github.com/kohsuke/msv
apt install maven
cd msv-master/
mvn     ==> must be a pom.xml


4- convert xsd --> rng
/home/jdee_workspace/sourcePathx/jars/private_JAR/msv-rngconverter-2017.2-SNAPSHOT.jar
java -jar msv-rngconverter-2017.2-SNAPSHOT.jar web-app_4_0.xsd web-app_4_0.rng


5- then convert   rng --> rnc
apt-get install trang
trang web-app_4_0.rng web-app_4_0.rnc   


6- put rnc file in this folder /home/jdee_workspace/sourcePathx/jars/schemes/

7- edit and add new rnc file in  ==>  /home/jdee_workspace/sourcePathx/jars/schemes/schemas.xml
;; by using namespace ns  
;; or by documentElement for DOCTYPE

8-
(autoload 'xml-mode "nxml" "XML editing mode" t)
(eval-after-load 'rng-loc  '(add-to-list 'rng-schema-locating-files "/home/jdee_workspace/sourcePathx/jars/schemes/schemas.xml"))


dont use this 
(add-to-list 'rng-schema-locating-files   "/home/jdee_workspace/sourcePathx/jars/schemes/schemas.xml")
;; c-c c-v c-a



9- notes :-
yassnippet and ac-dic are duplicate in nxml-mode  and web-mode
< c-m-i
c-c c-p [not done]  (rng-previous-error ARG)
c-c c-n   (rng-next-error ARG)
C-c C-s C-a, which re-applies the rules based on the current content of the document.
c-c c-s c-w  => show which rnc file run
c-c c-s c-a => (rng-auto-set-schema-and-validate) relaod rnc when changed
c-c c-f => insert end tag


[end of step by step to generate rnc files]
[end of step by step to generate rnc files]
[end of step by step to generate rnc files]


======================= end of zobda  xml nxml ==================================

;; clean linux files to be faster  in linux and emacs
apt-get install bleachbit
temp files when save auto-save-list in emacs, so del auto-save-list/.saves-, or use bleachbit
in .emacs./root/.emacs.d/auto-save-list/.saves-1372-nokia-PC~

please unchecked memory in bleachbit, because it will delete the swap memory

================================================================

[ do these steps now ]

11- uncomment 
;;;;;;;;;;;;;;;;;;;;;;;;;;;; nxml mode for html tags  ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; M-x nxml-mode then  <c-m-i 
;;
;;

;; (require 'auto-complete-nxml)
;; (setq auto-complete-nxml-automatic-p t) ;; If you want to start completion manually from the beginning


22- change it to nxml-mode
(add-to-list 'auto-mode-alist '("\\.xml?\\'" . nxml-mode))


33- 
;; M-x rng-set-schema-file  ==> .rnc then register it automatically in schema.xml  M-x cs  Rng Schema Locating Files
(autoload 'xml-mode "nxml" "XML editing mode" t)
(eval-after-load 'rng-loc  '(add-to-list 'rng-schema-locating-files "/home/jdee_workspace/sourcePathx/jars/schemes/schemas.xml"))



44-
;; nxml-keys
;; c-c c-f => insert end tag
;; c-c c-s c-w  => show which rnc file run
;; C-c C-s C-a, which re-applies the rules based on the current content of the document.
;; c-c c-n next error in xml, (rng-next-error)
;; c-c c-p  previous  error in xml, 
;; c-c c-v  rng-validate-mode start / stop (valid in mode line )


 ;; c-c c-p rng-previous-error
 ;; go to previous  error in xml after run rng-validate-mode 
;; not work like this
;;(define-key nxml-mode-map (kbd "C-c C-p") 'rng-previous-error)   
;; must be like this
;; what is (lambda() ) ==> lambda is anonymous function, a function without a name. 
 (add-hook 'nxml-mode-hook
             (lambda ()
                 (rng-validate-mode 1)
                 (define-key nxml-mode-map (kbd "C-c C-p") 'rng-previous-error)))
;; c-c c-v  rng-validate-mode start / stop (valid in mode line )



55-
;; xml invalid (change color from yellow to red ) M-x cs =>  Font Lock Warning Face
  '(font-lock-warning-face ((t (:foreground "red"))))



66- change it like this copy/paste
;;
(add-hook 'web-mode-hook 'emmet-mode)  ;; when open web-mode, open emmet-mode
(add-hook 'nxml-mode-hook  'emmet-mode) ;; open nxml mode first then open emmet mode 

(add-hook 'emmet-mode-hook 'emmet-preview-mode )  ;; when open emmet-mode, open emmet-mode

(add-hook 'web-mode-hook 'ac-emmet-html-setup)  ;; when open web-mode, open ac-emmet
(add-hook 'web-mode-hook 'ac-emmet-css-setup)  



77-
;; i will seperate web mode dic and snippet into web-mode and nxml-mode
;; copy dic and snippet from web-mode to nxml-mode, /home/temp/ web-mode nxml-mode
;; add nxml-mode to  '(ac-modes (quote  nxml-mode  and remove xml-mode from '(ac-modes



[ end these steps now ]

================================================================

[done]

(setq fiplr-ignored-globs '((directories (".git" ".svn" "xrefdb" "target"))

================================================================


=========================== begin of  regex ===================================== 
----------------------------------------------
test regex here
http://regexpal.com/
it is a javascript file so it download it in my important files and with regex folder
or use M-x regex-builder C-c tab => String or rx then C-c C-c [to evaluate regex]
--------------at least one ----------------- 
RegEx to make sure that the string contains at least one lower case char, upper case char, digit and symbol
^(?=.*[a-z])(?=.*[A-Z])(?=.*\d)(?=.*(_|[^\w])).+$

^                  // the start of the string
(?=.*[a-z])        // use positive look ahead to see if at least one lower case letter exists
(?=.*[A-Z])        // use positive look ahead to see if at least one upper case letter exists
(?=.*\d)           // use positive look ahead to see if at least one digit exists
(?=.*[_\W])        // use positive look ahead to see if at least one underscore or non-word character exists
.+                 // gobble up the entire string
$                  // the end of the string


-----files that contains one number at least and not contains k or K and must be 4 char----------
(?=.*[0-9])        //must contain number at least
(?!.*[k])          //must not contain k small
(?!.*[K])          //must not contain K capital
.{4}               //must be 4 char f  
\.mp3

-------------------------------------------------------------------------------------------------                   
2abc.mp3
a2bc.mp3
ac2b.mp3
acb2.mp3
2b2c.mp3
22bc.mp3
1234.mp3
k2abc.mp3
ak2bc.mp3
ack2b.mp3
acbk2.mp3
2b2ck.mp3
22bkkc.mp3
k1234.mp3
abcd.mp3
ab234.mp3
ab3.mp3
22abc.mp3

------------test 
find . -regextype posix-extended  -iregex './*(?=.*[a-z])(?=.*\d).+\.mp3'
------------test
                   
M-x regex-builder 
"^\\(?:[0-9]\\)\\(?:[a]\\).*.mp3"
result:- 
2abc.mp3 

note:- (?:)     => inculde ("look-ahead") 
       (?:[^k]) => exculde


M-x regex-builder   
"^\\(?:.*[0-9]\\)\\(?:[a]\\).*.mp3"      // number followed by a directly
result:-
2abc.mp3
k2abc.mp3
22abc.mp3


M-x regex-builder 
"^\\(?:.*[0-9]\\)\\(?:.*[k]\\).*.mp3"  // number followed by k but not directly not that is acbk2.mp3 not selected
result:- 
2b2ck.mp3
22bkkc.mp3





http://ergoemacs.org/

Replacement text can depend on found text!

    \& — the matched string
    \1, \2, etc. — references to parts of matched string
    \# — number of lines matched so far
    \? — prompt user and insert entered text
    \,(...) — arbitrary lisp expression


http://www.emacswiki.org/emacs/RegularExpression
http://ergoemacs.org/emacs/emacs_regex.html

M-s h r  highlight-regex  
         unhighlight-regex  
C-M-% or M-x qr  query-replcae-regexp   space=yes , n ,! all     one by one because the word query 
M-x    replace-rexgex   convert all matching directly without query but u can use the function sit-for to automate replace

---select 3 digits only 
M-x hlr  highlight-regexp   \b[0-9]\{3\}\b
(highlight-regexp "\\b[0-9]\\{3\\}\\b")   c-x c-e 
(unhighlight-regexp "\\b[0-9]\\{3\\}\\b")   c-x c-e 

---select date 2011-04-01
  (highlight-regexp    "201[0-9]-[0-9][0-9]-[0-9][0-9]")
(unhighlight-regexp    "201[0-9]-[0-9][0-9]-[0-9][0-9]")

M-x replace-regexp RET 201[0-9]-[0-9][0-9]-[0-9][0-9] RET '\&' RET
the date was surrounded by single quotes, as expected.like this '2011-04-01'
'\&' what ever 
'\N' Number

^		=	start of the line
$		=	end of the line
[abc]		=	one  char
[Ss]mit[hH]     =       smith smitH Smith SmitH
<h[12345]>	=	<h1> <h2> <h3> <h4> <h5> 
<h[1-5>         =	<h1> <h2> <h3> <h4> <h5> 
[0-9]		=	0123456789
[a-z]		=	abcdefghijklmnopqrstuvwxyz
[0-9a-fA-F]	=	0123456789abcdefABCDEF
[^abc]		=	defghigklmnopqrstuvwxyz
[^0-7]		=	89
q[^u]		=	word start with q and (not) followed by u not exist in english.
  .		=  any character (but newline)
  *		=  previous character or group, repeated 0 or more time
  +		=  previous character or group, repeated 1 or more time
  ?		=  previous character or group, repeated 0 or 1 time  
  ^		=  start of line
  $		=  end of line
  [...]		=  any character between brackets
  [^..]		=  any character not in the brackets
  [a-z]		=  any character between a and z
  \		=  prevents interpretation of following special char
  \|		=  or
  \w		=  word constituent
  \b		=  word boundary
  \sc		=  character with c syntax (e.g. \s- for whitespace char)
  \( \)		=  start\end of group wich means \1 or \2 or \3
  \< \>		=  start\end of word
  \_< \_>	=  start\end of symbol
  \` \'		=  start\end of buffer\string
  \1		=  string matched by the first group
  \n		=  string matched by the nth group
  \{3\}		=  previous character or group, repeated 3 times
  \{3,\}	=  previous character or group, repeated 3 or more times
  \{3,6\}	=  previous character or group, repeated 3 to 6 times
  \=            =  match succeeds if it is located at point
  \# 		=  i dont know,it is for numbering 
  \&            =  the selected text

	perl	emacs
Capture	(…)	\(…\)
digit	\d	[[:digit:]]
word	\w	[[:word:]]
space	\s	[[:space:]]
newline	\n	\n in elisp string, or 【Ctrl+q Ctrl+j】 in interactive command.or M-j

templates :-

<img src	="cat.jpg" alt="my cat" width="795" height="183" />
<img src	="\([^"]+?\)" alt="\([^"]+?\)" width="\([0-9]+\)" height="\([0-9]+\)" />


examples :- 
 
 M-x replace-regexp RET \([0-9]+\)\. RET \1, RET      = 5.  become 5,
 [-+[:digit:]]                                        = digit or + or - sign

 -|+     154      .           9547
(+|-)?   [0-9]+  (.)?        [0-9]   .5
(+|-)?   [0-9]+  (.[0-9])?           .3

 \(\(\+\|-\)?[0-9]+\.[0-9]+\)?     

 \(\+\|-\)?[0-9]+\(\.[0-9]+\)?                        = decimal number (-2 or 1.5 but not .2 or 1.)

 \(\w+\) +\1\>                                        = two consecutive, identical words
 \<[[:upper:]]\w*                                     = word starting with an uppercase letter
  +$                                                  = trailing whitespaces (note the starting SPC)
 \w\{20,\}                                            = word with 20 letters or more
 \w+phony\>                                           = word ending by phony
 \(19\|20\)[0-9]\{2\}                                 = year 1900-2099
 ^.\{6,\}                                             = at least 6 symbols
 ^[a-zA-Z0-9_]\{3,16\}$                               = decent string for a user name
 <tag[^> C-q C-j ]*>\(.*?\)</tag>                     = html tag



--- Capitalize words ----

  M-x replace-regexp
  Replace regexp:  \(\w+\)
  Replace regexp with:  \,(capitalize \1)

--- Capitalize last letter:

  M-x replace-regexp
  Replace regexp:  \(\w+\)\(\w\)
  Replace regexp with:  \1\,(capitalize \2)

--- Number lists from zero ----

1987:Bogotá 
5243:Fabergé

become after replace 
   
0.Bogotá 
1.Fabergé

  M-x replace-regexp
  Replace regexp: \(.+:\)
  Replace regexp with \#. 

(Note the space at the end of the replacement!)

--- To start from one only -----

1987:Bogotá 
5243:Fabergé

become after replace 
   
1.Bogotá 
2.Fabergé

  M-x replace-regexp
  Replace regexp: \(.+:\)
  Replace regexp with \,(1+ \#). 

(Note the space at the end of the replacement!)
--- Renumber lists ----

11
555
777771
become 

12
556
777772

  M-x replace-regexp
  Replace regexp: ^[0-9]+
  Replace regexp with \,(1+ \#&)

---- Renumber lists by adding 2 -----

10
552
777772
become 

12
554
777774

  M-x replace-regexp
  Replace regexp: ^[0-9]+
  Replace regexp with \,(1+ (1+ \#&))

----- From numerical to alphabetical numbering of lists -----
1987
5244
22222
become

a)
b)
c)

  M-x replace-regexp
  Replace regexp: ^\([0-9]+\)
  Replace regexp with \,(string (+ ?a \#)))

--- Find files listed in a buffer ---

hi.txt
ali.txt
so.txt   not exist so it will stop 
ahmad.txt

  M-x replace-regexp
  Replace regexp:  .+
  Replace regexp with:  \,(find-file-existing \&)

--- Promote header tags in HTML  ---

  M-x replace-regexp
  Replace regexp:  <\(/?\)h\([0-9]\)>
  Replace regexp with:  <\1h\,(1+ \#2)>

--- Swap values ---
right
left
left
right
become

left
right
right
left

  M-x replace-regexp
  Replace regexp: right\|left
  Replace regexp with: \,(if (equal "right" \&) "left" "right")

---- Convert Shell-style comments to Lisp-style ------

  M-x replace-regexp
  Replace regexp: ^#+
  Replace regexp with: \,(make-string (length \&) ?;)

---- Beep and kill word hi, slowly to ahmad-----

  M-x replace-regexp
  Replace regexp: hi
  Replace regexp with: \,(progn (beep)(sit-for 1) "ahmad")

---  Kill current buffer if it contains the word hii ----

  M-x replace-regexp
  Replace regexp: hii
  Replace regexp with: \,(progn (kill-buffer nil) \&)

---- Copy email addresses in *scratch* buffer --------

  M-x replace-regexp
  Replace regexp:  \w+\(\.\w+\)?@\(\w\|\.\)+
  Replace regexp with: \,(print \& (view-buffer "*scratch*"))

--- Open urls in browser -----

  M-x replace-regexp
  Replace regexp: http://\S-+
  Replace regexp with: \,(browse-url \&)

--- Convert $$...$$ into [...]    --------------

  M-x replace-regexp
  Replace regexp: \$\$
  Replace regexp with: \,(if (evenp \#) "[" "]")

--- Convert text quotes to Texinfo quotes -------

  M-x replace-regexp
  Replace regexp: "
  Replace regexp with: \,(save-excursion (if (looking-at "\"")
                       (delete-char 1) (delete-backward-char 1)) (let
                       ((start (point))) (texinfo-insert-quote) (let
                       ((quote (buffer-substring-no-properties start
                       (point)))) (delete-region start (point))
                       (insert ?") quote)))

See TexinfoMode.
Rename bumpy-case identifiers

---- Converting the first character of a match to uppercase. Useful if you live in CamelCase hell.

  M-x replace-regexp
  Replace regexp: \(\w\)\(\w+\)Value(
  Replace regexp with: get\,(upcase \1)\2(

-------------------------------------------------------------------------------------------------
web page from :- http://www.emacswiki.org/emacs/RegularExpression

Here is the syntax used by Emacs for regular expressions. Any character matches itself, except for the list below.

The following characters are special : . * + ? ^ $ \ [

Between brackets [], the following are special : ] - ^

Many characters are special when they follow a backslash – see below.

  .        any character (but newline)
  *        previous character or group, repeated 0 or more time
  +        previous character or group, repeated 1 or more time
  ?        previous character or group, repeated 0 or 1 time  
  ^        start of line
  $        end of line
  [...]    any character between brackets
  [^..]    any character not in the brackets
  [a-z]    any character between a and z
  \        prevents interpretation of following special char
  \|       or
  \w       word constituent
  \b       word boundary
  \sc      character with c syntax (e.g. \s- for whitespace char)
  \( \)    start\end of group
  \< \>
  start\end of word
  \_< \_>  start\end of symbol
  \` \'    start\end of buffer\string
  \1       string matched by the first group
  \n       string matched by the nth group
  \{3\}    previous character or group, repeated 3 times
  \{3,\}   previous character or group, repeated 3 or more times
  \{3,6\}  previous character or group, repeated 3 to 6 times
  \=       match succeeds if it is located at point

.?, +?, and ?? are non-greedy versions of ., +, and ? – see NonGreedyRegexp. Also, \W, \B, and \Sc match any character that does not match \w, \b, and \sc.

Characters are organized by category. Use C-u C-x = to display the category of the character under the cursor.

  \ca      ascii character
  \Ca      non-ascii character (newline included)
  \cl      latin character
  \cg      greek character

Here are some syntax classes that can be used between brackets, e.g. [[:upper:]\|[:digit:]\.].

  [:digit:]  a digit, same as [0-9]
  [:alpha:]  a letter (an alphabetic character)
  [:alnum:]  a letter or adigit (an alphanumeric character ()
  [:upper:]  a letter in uppercase
  [:space:]  a whitespace character, as defined by the syntax table
  [:xdigit:] an hexadecimal digit
  [:cntrl:]  a control character
  [:ascii:]  an ascii character

Syntax classes:

  \s-   whitespace character        \s/   character quote character
  \sw   word constituent            \s$   paired delimiter         
  \s_   symbol constituent          \s'   expression prefix        
  \s.   punctuation character       \s<   comment starter          
  \s(   open delimiter character    \s>   comment ender            
  \s)   close delimiter character   \s!   generic comment delimiter
  \s"   string quote character      \s|   generic string delimiter 
  \s\   escape character            

You can see the current syntax table by typing C-h s. The syntax table depends on the current mode. As expected, letters a..z are listed as word constituents in text-mode. Other word constituents in this mode include A..Z, 0..9, $, %, currency units, accented letters, kanjis. See EmacsSyntaxTable for details.

Idiosyncrasies of Emacs Regular Expressions

    In an interactive search, a space character stands for one or more whitespace characters (tabs are whitespace characters). You can use M-s SPC while searching or replacing to toggle between this behavior and treating spaces as literal spaces. Or put the following in your InitFile to override this behaviour.

                 (setq search-whitespace-regexp nil)

    [^ … ] matches all characters not in the list, even newlines. Put a newline in the list if you want it not to be matched. You can enter a newline character using ‘C-o’, ‘C-q C-j’, or ‘C-q 012 RET’. Note also that \s- matches space, tab, newline and carriage return. This can be handy in a [^ … ] construct.
    Default case handling for replacing commands executes case conversion. This means that both upper and lower case match in the regexp, whereas the case in the replacement string is chosen according to the match syntax. Try for example replacing john by harry below. Case conversion can be toggled on/off by typing ‘M-c’ in the minibuffer during search. You can also set the variable case-fold-search to nil to disable case conversion; see CaseFoldSearch for more details. In the following example, only the last line would then be replaced.

                           John  =>  Harry
                           JOHN  =>  HARRY
                           john  =>  harry
 

    Backslashes must be double-quoted when used in Lisp code. Regular expressions are often specified using strings in EmacsLisp. Some abbreviations are available: \n for newline, \t for tab, \b for backspace, \u3501 for character with unicode value 3501, and so on. Backslashes must be entered as \\. Here are two ways to replace the decimal point by a comma (e.g. 1.5 -> 1,5), first by an interactive command, second by executing Lisp code (type C-x C-e after the expression to get it executed).

           M-x replace-regexp RET \([0-9]+\)\. RET \1, RET
          (while (re-search-forward "\\([0-9]+\\)\\." nil t)
                        (replace-match "\\1,"))

Some Regexp Examples

 [-+[:digit:]]                     digit or + or - sign
 \(\+\|-\)?[0-9]+\(\.[0-9]+\)?     decimal number (-2 or 1.5 but not .2 or 1.)
 \(\w+\) +\1\>                     two consecutive, identical words
 \<[[:upper:]]\w*                  word starting with an uppercase letter
  +$                               trailing whitespaces (note the starting SPC)
 \w\{20,\}                         word with 20 letters or more
 \w+phony\>                        word ending by phony
 \(19\|20\)[0-9]\{2\}              year 1900-2099
 ^.\{6,\}                          at least 6 symbols
 ^[a-zA-Z0-9_]\{3,16\}$            decent string for a user name
 <tag[^> C-q C-j ]*>\(.*?\)</tag>  html tag

Some Emacs Commands that Use Regular Expressions

 C-M-s                   incremental forward search matching regexp
 C-M-r                   incremental backward search matching regexp 
 replace-regexp          replace string matching regexp
 query-replace-regexp    same, but query before each replacement
 align-regexp            align, using strings matching regexp as delimiters
 highlight-regexp        highlight strings matching regexp
 occur                   show lines containing a match
 multi-occur             show lines in all buffers containing a match
 how-many                count the number of strings matching regexp
 keep-lines              delete all lines except those containing matches
 flush-lines             delete lines containing matches
 grep                    call unix grep command and put result in a buffer
 lgrep                   user-friendly interface to the grep command
 rgrep                   recursive grep
 dired-do-copy-regexp    copy files with names matching regexp
 dired-do-rename-regexp  rename files matching regexp 
 find-grep-dired         display files containing matches for regexp with Dired

Note that list-matching-lines is an alias for occur and delete-matching-lines is an alias for flush-lines. The command highlight-regexp is bound to C-x w h. Also query-replace-regexp is bound by default to C-M-%, although some people prefer using an alias, like M-x qrr. Put the following in your InitFile to create such alias.

   (defalias 'qrr 'query-replace-regexp)

See also: IncrementalSearch, ReplaceRegexp, AlignCommands, OccurBuffer, DiredPower

Tools for Constructing Regexps

    Command ‘re-builder’ constructs a regular expression. You enter the regexp in a small window at the bottom of the frame. The first 200 matches in the buffer are highlighted, so you can see if the regexp does what you want. Use Lisp syntax, which means doubling backslashes and using \\\\ to match a literal backslash.
    Macro ‘rx’ provides user-friendly syntax for regular expressions. For example, (rx (one-or-more blank) line-end) returns the regexp string "\\(?:[[:blank:]]+$\\)". See rx.
    SymbolicRegexp is similar in aim to ‘rx’.

Study and Practice

    Read about regexps in the Elisp manual). See also RegexpReferences. Study EmacsLisp code that uses regexps.
    Regexp searching (‘C-M-s’) is a great way to learn about regexps – see Regexp Searches. Change your regexp on the fly and see immediately what difference the change makes.
    Some examples of use (see also ReplaceRegexp and EmacsCrashRegexp):

 Search for trailing whitespace							: C-M-s SPC+$
 Highlight all trailing whitespace						: M-x highlight-regexp RET SPC+$ RET RET
 Delete trailing whitespace							: M-x replace-regexp RET SPC+$ RET RET (same as ‘M-x delete-trailing-whitespace’)
 Search for open delimiters							: C-M-s \s(
 Search for duplicated words (works across lines)				: C-M-s \(\<\w+\>\)\s-+\1
 Count number of words in buffer							: M-x how-many RET \< RET
 Align words beginning with an uppercase letter followed by a lowercase letter	: M-: (setq case-fold-search nil) RET then M-x align-regexp RET \<[[:upper:]][[:lower:]] RET
 Replace word foo by bar (won’t replace fool by barl)				: M-x replace-regexp RET \<foo\> RET bar
 Keep only the first two words on each line					: M-x replace-regexp RET ^\(\W*\w+\W+\w+\).* RET \1 RET
 Suppress lines beginning with ;;						: M-x flush-lines RET ^;; RET
 Remove the text after the first ; on each line					: M-x replace-regexp RET \([^;]*\);.* RET \1 RET
 Keep only lines that contain an email address					: M-x keep-lines RET \w+\(\.\w+\)?@\(\w\|\.\)+ RET
 Keep only one instance of consecutive empty lines				: M-x replace-regexp RET ^C-q C-j\{2,\} RET C-q C-j RET
 Keep words or letters in uppercase, one per line				: M-x replace-regexp RET [^[:upper:]]+ RET C-o RET
 List lines beginning with Chapter or Section					: M-x occur RET ^\(Chapter\|Section\) RET
 List lines with more than 80 characters						: M-x occur RET ^.\{81,\} RET

Use Icicles to Learn about Regexps

Icicles provides these interactive ways to learn about regexps:

    `C-`’ (‘icicle-search’) shows you regexp matches, as does ‘C-M-s’, but it can also show you (that is, highlight) regexp subgroup matches. Showing matched subgroups is very helpful for learning, and Icicles is unique in this. There are two ways that you can use this feature:
        You can seach for a regexp, but limit the search context, used for further searching, to a particular subgroup match. For example, you can search for and highlight Lisp argument lists, by using a regexp subgroup that matches lists, placing that subgroup after ‘defun’: (defun [^(]*\(([^(]*)\), that is, defun, followed by non-`(’ character(s), followed by `(’, possibly followed by non-`)’ character(s), followed by `)’.
        You can search for a regexp without limiting the search context to a subgroup match. In this case, Icicles highlights each subgroup match in a different color. Here’s an example, showing how each subgroup of the complex regexp (\([-a-z*]+\) *\((\(([-a-z]+ *\([^)]*\))\))\).* is matched:

    IciclesSearchContextLevelsScreenshot

    `C-`’ also helps you learn by letting you use two simple regexps (search within a search) as an alternative to coming up with a single, complex regexp to do the same job. And, as with incremental search, you can change the second regexp on the fly to see immediately what difference the change makes. See Icicles - Search Commands, Overview
    ‘S-TAB’ during minibuffer input shows you all matches for your input string, which can be a regexp. So, just type a regexp whenever the minibuffer is active for completion and hit ‘S-TAB’ to see what the regexp matches. Try this with command input (‘M-x’), buffer switching (‘C-x b’), file visiting (‘C-x f’), help (‘C-h f’, ‘C-h v’), and so on. Almost any time you type input in the minibuffer, you can type a regexp and use ‘S-TAB’ to see what it matches (and then choose one of the matching candidates to input, if you want).

Questions

Does Emacs support lookahead/lookbehind?

    No, Emacs does not support Perl-style lookahead/lookbehind expressions.

The escape sequence \cC represents any character of category “C”, and according to Emacs documentation invoked by “M-x describe-categories”, \c6 ought to match any digit. Yet the ASCII digits 0-9 are not matched by \c6. Is this an error, or just something on the to-do list?

CategoryRegexp CategoryGlossary
Español Add Translation
Edit this page View other revisions Administration
Last edited 2014-02-01 20:19 UTC by DrewAdams (diff)
CC-GNU GPL

This work is licensed to you under version 2 of the GNU General Public License. Alternatively, you may choose to receive this work under any other license that grants the right to use, copy, modify, and/or distribute the work, as long as that license imposes the restriction that derivative works have to grant the same rights and impose the same restriction. For example, you may choose to receive this work under the GNU Free Documentation License, the CreativeCommons ShareAlike License, the XEmacs manual license, or similar licenses.


-------------------------------------------------------------------------------------------------
web page :- http://ergoemacs.org/emacs/emacs_regex.html

This page is a tutorial on emacs regex.

Emacs's regex is not based on Perl or Python's, but is very similar. In emacs regex, the parenthesis characters () are literal. If you want to capture a pattern, you need to escape the paren like this: \(pattern\).
your regex brain
Common Patterns
Pattern	Matches
.	Any single character
\.	One period
[0-9]+	Sequence of digits
[A-Za-z]+	Sequence of letters
[-A-Za-z0-9]+	Sequence of letter, digit, hyphen
[_A-Za-z0-9]+	Sequence of letter, digit, underscore
[-_A-Za-z0-9]+	Sequence of letter, digit, hyphen, underscore
[[:ascii:]]+	Sequence of ASCII chars.
[[:nonascii:]]+	Sequence of none ASCII chars (⁖ Unicode chars)
Pattern	Matches
"\([^"]+\)"	capture text between double quotes.
Pattern	Matches
+	match previous pattern 1 or more times
*	match previous pattern 0 or more times
?	match previous pattern 0 or 1 time
+?	match previous pattern 1 or more times, but with minimal match (aka non-greedy)
Pattern	Matches
^…	Beginning of {line, string, buffer}
…$	End of {line, string, buffer}
\`…	Beginning of {string, buffer}
…\'	End of {string, buffer}
\b	word boundary marker
Matching Newline

When using interactive commands for find ＆ replace, emacs won't understand \t, \n.

    To enter a Tab character, press 【Ctrl+q Tab ↹】
    To enter a new line, press 【Ctrl+q Ctrl+j】

(For explanation, see: Emacs's Key Notations Explained (/r, ^M, C-m, RET, <return>, M-, meta)).

In elisp code, you can use \t for tab and \n for newline inside a string. You can use [\t\n ]+ for sequence of {tab, newline, space}. (literal tab/newline will also work.)

When a file is opened in Emacs, newline is always \n, regardless whether your file is from Unix, Windows, Mac. Do NOT manually do find/replace on newline chars for file newline convention. 〔☛ Emacs: Newline Representations ^M ^J ^L〕
Case Sensitivity

When using [a-z], it is not case sensitive by default. Case sensitivity is controlled by the variable “case-fold-search”. Call toggle-case-fold-search to toggle it.

Do not use [A-z], because that'll match some punctuation chars too. Use [A-Za-z].
Perl Regex vs Emacs Regex

Here are some practical major differences.
	perl	emacs
Capture	(…)	\(…\)
digit	\d	[[:digit:]]
word	\w	[[:word:]]
space	\s	[[:space:]]
newline	\n	\n in elisp string, or 【Ctrl+q Ctrl+j】 in interactive command.

For example, Perl's \d+ is emacs's [[:digit:]]+.

IMPORTANT: the meaning of a character class in emacs is dependent on the current major mode's syntax table. For example, what chars are considered “word” in [[:word:]] depends on how its defined in syntax table of current major mode. Syntax table is hard to work with. Best is just to put the chars you want explicitly in your regex, ⁖ [A-Za-z].
Interactive Emacs Regex Mode

Emacs has a interactive regex mode. It show matches as you type. To go into the mode, call regexp-builder. (I don't use this)

Alternatively, call query-replace-regexp to test your pattern. Ι prefer this.
Regex in Emacs Lisp Code

Regex is used in elisp code too, just like Perl as a language.
How to Test Regex in Elisp Code

To test regex in your elisp code, open a empty file and place the regex function at top and the text you want to match below it, like this:

(search-forward-regexp "yourRegex")

whatever text here

Then, put your cursor to the right of the closing parenthesis, then call eval-last-sexp 【Ctrl+x Ctrl+e】. If your regex matches, it'll move cursor to the last char of the matched text. If you get a lisp error saying search failed, then your regex didn't match. If you get a lisp syntax error, then you probably screwed up on the backslashs.
Double Backslash in Lisp Code

In a lisp regex function that takes a regex string (⁖ search-forward-regexp), you will need to use double backslash. This is because, in elisp string, a backslash needs to be prefixed with a backslash, then, this interpreted string is passed to emacs's regex engine.

Here's General Rule:

    For regex that has a backslash, it needs to be double backslash, except {\n, \t, …}.
    Any double straight ASCII quote " needs to have a backslash in front, i.e. \"

For example, suppose you have this text:

<img src="cat.jpg" alt="my cat" width="795" height="183" />

When you call a command such as query-replace-regexp, you can type the regex in the prompt. Example:

<img src="\([^"]+?\)" alt="\([^"]+?\)" width="\([0-9]+\)" height="\([0-9]+\)" />

But in lisp code, the same regex needs to have many backslash escapes, like this:

(search-forward-regexp
"<img src=\"\\([^\"]+?\\)\" alt=\"\\([^\"]+?\\)\" width=\"\\([0-9]+\\)\" height=\"\\([0-9]+\\)\" />" )

The following should have single backslash only: {\n, \t, \"}.


================================================================================

Start file

foo = a
      ab
      abc

End file

foo = "a"
      "ab"
      "abc"

solution :- 
M-x rx
first :-  \([[:space:]]\{1\}\)\([a-z]+\)\([[:space:]]\{1\}\)
second:-   "\2"



================================================================================

input:-
 a 
 ab 
 abc 
 abc abc 
 abc abc abc 

output:-
'a'
'ab'
'abc'
'abc abc'
'abc abc abc'

;; regex by rx 
(defun test0 ()
(interactive)       
(query-replace-regexp
(rx
 (group-n 1  (repeat 1 space))
 (or
  (group-n 2  (repeat 1 4 (any "a-z")) space (repeat 1 4 (any "a-z")) space (repeat 1 4 (any "a-z")))
  (group-n 2  (repeat 1 4 (any "a-z")) space (repeat 1 4 (any "a-z")))
  (group-n 2  (repeat 1 4 (any "a-z")))
 )
 (group-n 3  (repeat 1 space))
)
" '\\2' "
))


M-x query-replace-regexp 
;; "\\(?1:[[:space:]]\\{1\\}\\)\\(?:\\(?2:[a-z]\\{1,4\\}[[:space:]][a-z]\\{1,4\\}[[:space:]][a-z]\\{1,4\\}\\)\\|\\(?2:[a-z]\\{1,4\\}[[:space:]][a-z]\\{1,4\\}\\)\\|\\(?2:[a-z]\\{1,4\\}\\)\\)\\(?3:[[:space:]]\\{1\\}\\)"
;; " '\\2' "

================================================================================
Start file

J=J-y(i)*log(h)-(1-y(i))*log(1-h)+(lambda/2)*sumtheta2;

End file

J = J - y(i) * log(h) - (1 - y(i)) * log(1 - h) + (lambda / 2) * sumtheta2;

solution :- 
M-x rx
first :-  [-+=/*]
second:-    \& 
note that before \& and after it there is a space
or or or by rx
(defun test0 ( )
(interactive)       
(query-replace-regexp (rx(any "-+=/*"))  " \\& " )
)

================================================================================
abc
ABC

select only lower case

solution
(case-fold-search nil) c-x-e
then
[a-z]
===============================================================================
Start file

Leave only the
numbered lines.
HI
LINE 1
LINE 2
LINE 3
That's all.
Thank you
very much.

End file

LINE 1
LINE 2
LINE 3

M-x dnml or keep-lines
first :-  ^LINE [1-3]
second:-   space key
===============================================================================
add zeros  to numbers lile this
1   will be 0001
02  will be 0002
003 will be 0003

M-x qr  ^[0-9]$           000\&
M-x qr  ^[0-9][0-9]$       00\&
M-x qr  ^[0-9][0-9][0-9]$   0\&
===============================================================================
=========================== end of  regex ===================================== 



;; when using M-x replace-string 
;; if  case-replace  true   change it to false, 
;; if  case-replace  false  change it to true 
;; when case-replace is true 
;; M-x replace-string will be emacs Emacs EMACS  => gnu Gun GNU 
;; when case-replace is false
;; M-x replace-string will be emacs Emacs EMACS  => gnu gnu gnu
(defun my-toggle-case-replace ()
(interactive)
(if (eq case-replace  nil)
    (setq case-replace t)
  (setq case-replace nil))
(message "case-replace  status is %s" case-replace )
)
;;; or use M-x set-variable  case-replace t or nil from -learning gun emacs- chm  book


================================================================

[done]
;; emacs help 
install emacs documentation c-h i, elisp doc,  in /usr/share/info/emacs-25/
apt-get install emacs25-common-non-dfsg
c-h i
s  => search document
[] => next/previous
u  => up 
i  => index view
================================================================
;;from elisp-notes.txt
(calc-eval "5^4000-2*4")
(calc-eval "5^2 , 2*2 , 3*2") ==> "25, 4, 6"
(calc-eval "16#deadbeef")
(calc-eval "8#111")
(calc-eval "10#256")
(calc-eval "2#101010001010")
(random 55)


;; disable quote  by , with `````(thal char)   not '''''''''
(setq a 20)
'(a b c)      ; => (a  b c)
'(,a b c)     ; => (a  b c)
`(a b c)      ; => (a  b c)
`(,a b c)     ; => (10 b c)


================================================================
[done]
;; stop synchronized file editing by stop  .#file--> user@cpu-id , and ask about lock file , 

;; this message appear when two user try to edit file,
;; this file locked for user s,p,q  s=steal locks   p = proceed to your own, q=quit
;;(setq create-lockfiles t) ;; default

;; this message appear when two user try to edit file.txt, 
;; file.txt has changed since visited or saved. save anyway ? y or no
(setq create-lockfiles nil)

 
M-x set-variable 
M-x find-variable 

[done]

;; increase emacs stack 
(setq max-specpdl-size 30000)   ;; (* 30 1300)
(setq max-lisp-eval-depth 25000) ;; (* 30 800)
 

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;



;; put it in  emacs_config 
;; trailing whitespace is the space at the end lines
;; delete trailing whitespace of region without select the region
;; it is better than use M-\ or M-SPC
;;
;; if no selected region then delete trailing whitespace of current region without select the region (current pragraph),
;; if selected region then delete the trailing-whitespace at the selected region only
;;
(defun my-delete-trailing-whitespace-of-region ()
"if no selected region then delete trailing whitespace of current region without select the region, if selected region then delete the trailing-whitespace at the selected region only "
(interactive)
(if (eq mark-active nil)
;;;; if true condition
(progn
(save-excursion
(mark-paragraph)  ;; M-h
(call-interactively 'delete-trailing-whitespace) ;; delete white spaces at end lines
(setq deactivate-mark t) ;; deactivate mark region
);; end save-excursion
);; end first progn
;;;; if else condition
(progn
(save-excursion
(call-interactively 'delete-trailing-whitespace) ;; delete white spaces at end lines
(setq deactivate-mark t) ;; deactivate mark region
);; end save-excursion
);; end second progn
);; end if
)  ;; end defun

(defalias 'ts 'my-delete-trailing-whitespace-of-region)


==================jdee flycheck==============================
'(flychefck-check-syntax-automatically (quote (idle-change mode-enabled)))
;; change it to, so flycheck will work after save(c-x c-s not autosave), after insert char 'idle-change', and after insert new line==> 
 '(flycheck-check-syntax-automatically (quote (save idle-change new-line)))

;; Flycheck Idle Change Delay  => put it 1.5 
 How many seconds to wait after a change before checking syntax.
   This variable has no effect, if ‘idle-change’ is not contained in
   ‘flycheck-check-syntax-automatically’.

;; Maximum errors allowed per syntax checker.
 '(flycheck-checker-error-threshold 100)

;; activate flycheck mode with jdee-mode
 '(jdee-flycheck-enable-p t)

;;  jdee  in checkers list is 
jdee-flycheck-javac-checker

M-x flycheck-error-list-set-filter, or reset it to this value
M-x cs Flycheck Error List Minimum Level 
(*) All locations
( ) Informational messages
( ) Warnings
( ) Errors
================== end of jdee flycheck ==============================




;; view-mode to view as read 

[done]
remove  (defalias 'rx 'replace-regexp)
(defalias 'rreg 'replace-regexp) instead of 'rx
apt-get install wkhtmltopdf




[done]

;; default is dynamic according to paragraph (nil)
(setq bidi-paragraph-direction 'left-to-right)

(defun my-toggle-bidi-direction-and-input-method ()
"just type c-\\ to toggle direction and input-method (arabic and english)"
(interactive)
(if (eq bidi-paragraph-direction 'left-to-right)
    ;; if english change it to  arabic
    (progn 
      (set-input-method "arabic")
      (setq bidi-paragraph-direction 'right-to-left)
     )
   ;; if arabic change it to nil(english as default)
   (progn 
      ;;(call-interactively 'toggle-input-method)
      (set-input-method nil) ;; default is english 
      (setq bidi-paragraph-direction 'left-to-right)
    ))
 )  ;; end defun

;; default key c-\  toggle-input-method
(global-set-key (kbd "C-\\")   'my-toggle-bidi-direction-and-input-method)


;; put it in  emacs_config
;; trailing whitespace is the space at the end lines
;; delete trailing whitespace of region without select the region
;; it is better than use M-\ or M-SPC
;;
;; if no selected region then delete trailing whitespace of current region without select the region (current pragraph),
;; if selected region then delete the trailing-whitespace at the selected region only
;;
(defun my-delete-trailing-whitespace-of-region ()
"if no selected region then delete trailing whitespace of current region without select the region, if selected region then delete the trailing-whitespace at the selected region only "
(interactive)
(if (eq mark-active nil)
;;;; if true condition
(progn
(save-excursion
(mark-paragraph)  ;; M-h
(call-interactively 'delete-trailing-whitespace) ;; delete white spaces at end lines
(setq deactivate-mark t) ;; deactivate mark region
);; end save-excursion
);; end first progn
;;;; if else condition
(progn
(save-excursion
(call-interactively 'delete-trailing-whitespace) ;; delete white spaces at end lines
(setq deactivate-mark t) ;; deactivate mark region
);; end save-excursion
);; end second progn
);; end if
)  ;; end defun
                          
(defalias 'ts 'my-delete-trailing-whitespace-of-region)

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;;
;;"just type c-\\ to toggle direction and input-method (arabic and english)"
;;


;; default is dynamic according to paragraph (nil)
;; put it in the above custom-set-variables
;;(setq bidi-paragraph-direction 'left-to-right)


(defun my-toggle-bidi-direction-and-input-method ()
"just type c-\\ to toggle direction and input-method (arabic and english)"
(interactive)
(if (eq bidi-paragraph-direction 'left-to-right)
    ;; if english change it to  arabic
    (progn 
      (set-input-method "arabic")
      (setq bidi-paragraph-direction 'right-to-left)
     )
   ;; if arabic change it to nil(english as default)
   (progn 
      ;;(call-interactively 'toggle-input-method)
      (set-input-method nil) ;; default is english 
      (setq bidi-paragraph-direction 'left-to-right)
    ))
 )  ;; end defun

;; default key c-\  toggle-input-method
(global-set-key (kbd "C-\\")   'my-toggle-bidi-direction-and-input-method)



;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;




;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
[not work] change usb keyboard by  ctrl to alt as old lisp keyboard  by one command

https://github.com/MMcM/lmkbd2#space-cadet-direct
return to original keyboard of emacs 
https://askubuntu.com/questions/337411/how-to-permanently-assign-a-different-keyboard-layout-to-a-usb-keyboard

setxkbmap -model space_cadet
xinput -list | grep -i  "usb"
xinput
setxkbmap -device "${ID}" -layout "${usbkbd_layout}"
GASIA USB KB V11                        	id=12	[slave  pointer  (2)]
GASIA USB KB V11                        	id=13	[slave  keyboard (3)]
GASIA USB KB V11                        	id=14	[slave  keyboard (3)]

# change the keyboard to old emacs keyboard
setxkbmap -device "12"  -model space_cadet
setxkbmap -device "13"  -model space_cadet -verbose -print
setxkbmap -device "14"  -model space_cadet -verbose -print


================================================================


# seach jar files by zipgrep
# search zip files by zipgrep
# zipgrep search inside *.zip but cant visit file
apt-get install xz-utils - XZ-format compression utilities; for zgrep 
{} the matching file
-execdir run command in the same file dir
-exec    run command here
find . -iname '*.zip'  -exec zipgrep  -nHi -e  "exit" {} +
# wow search inside jar files by zipgrep 
find . -iname '*.jar'  -exec zipgrep  -nHi  -e "exit" {} +

;; merge jars into one jar
 mkdir tmp
 cd tmp
 unzip -ou  ../aa1.jar     ;; -ou o->override u->update
 unzip      ../aa2.jar
 unzip      ../aa3.jar
 cd ..
 jar -cvf combined.jar -C tmp .


=========
# Change the color of the word temporarily
M-x facemenu-set-foreground

================
# apt-get install html2text
html2text command 
html2text file.html  >> out.text
# hahahiii it is already in /usr/share/info/emacs-25/emacs.info.gz


wget https://www.gnu.org/software/emacs/manual/html_mono/emacs.html
html2text emacs.html  >> emacs_manual_full.text
# hahahiii it is already in /usr/share/info/emacs-25/emacs.info.gz


wget https://www.gnu.org/software/emacs/manual/html_mono/elisp.html
html2text emacs.html  >> elisp_manual_full.text
;;; hahahhiii it is already in /usr/share/info/emacs-25/elisp.info.gz
;;;; https://packages.debian.org/buster/all/emacs-common-non-dfsg/download for version 26.1

;; wow .emacs setting 
;; wow .emacs setting 
;; wow .emacs setting 
;; wow .emacs setting 
;; wow .emacs setting 
http://nullman.net/emacs/files/init-emacs.org.html
http://nullman.net/emacs/files/init-emacs.org.html
;; wow .emacs setting
;; wow .emacs setting
;; wow .emacs setting
;; wow .emacs setting
wow flymake-error-minibuffer in nullman 




===================== emacs 26.1 =================================
wow wow wow
java jvm as alone by => oracle
when extract it, you will see the java folder and jre and src,  all in one seperated folder
jdk-11.0.2_linux-x64_bin.tar.gz
jdk-8-_linux-x64_bin.tar.gz


;; update M-x list-packages
;; focus about deleted pacakges in emacs M-x package-autoremove

;; solve  flymake error (quote) and error at java assertion errors
;; this is the error  Error running timer ‘flymake-on-timer-event’: (void-function flymake--log-1)
use hard flymake by
;; `flymake-allowed-file-name-masks' to (\"\\.java\\'\" jdee-ecj-flymake-init jdee-ecj-flymake-cleanup)"
dont use this, server start bean-shell twice
;; `flymake-allowed-file-name-masks' to (\"\\.java\\'\" jdee-ecj-server-flymake-init jdee-ecj-flymake-cleanup)"


;; put all openjdk  to /opt/ 8,9,10,11, 
https://jdk.java.net/java-se-ri/8

;; how flymake works in jdee 
(1)--->>  flymake (2)--->>  server(/root/.emacs.d/jdee-server-master/target/*.jar) (3)--> ecj --> 4-openJDK

[do it]
1- use old jdee-server-master which build by (jdk-8), or use jdee-server-maseter  which build by (jdk-11)
2- use old flymake from the website 0.3 from plugin
3- update all emacs package M-x list-packages U 
4- jdee-ecj-server-flymake-init without word server, it is heavy but work (no assertion errors)
5- modify this hook and add it to the end of  .emacs
 (add-hook
  'jdee-mode-hook
  (lambda()
    (flycheck-mode -1)
    (flymake-mode 1)
    ))

=== new ecj ===

download new ecj or jdt-core  from here 
https://download.eclipse.org/eclipse/downloads/drops4/S-4.11RC1-201903010040/
https://download.eclipse.org/eclipse/downloads/


ecj-4.9-from-tomcat9.jar
ecj is now jdt => org.eclipse.jdt.core_3.16.0.v20181130-1748.jar
http://blog.deepakazad.com/2010/05/ecj-eclipse-java-compiler.html

[dont use this jdt-core]
java -jar org.eclipse.jdt.core_3.16.0.v20181130-1748.jar -version
java -jar org.eclipse.jdt.core_3.16.0.v20181130-1748.jar  ;; without -version 

same as 
java -jar ecj-4.9-from-tomcat9.jar -version
java -jar ecj-4.9-from-tomcat9.jar ;; without version
==================


[not done]
'(jdee-ant-user-jar-files (quote ("/usr/share/java/ant-contrib-1.0b5-SNAPSHOT.jar")));; must install ant ant-contrib

[not done]
;; add notes to prj.el
;; this line of code for flymake, when change any char in java code then will call flymake like this flymake--> server-master--> ecj.jar -->jdk
;; so if you remove target and source, the default target =1.6 ,and defult source = 1.6
;; flycheck --> jdee-server-master -> ecj   g d target  source and warn are options in ecj.jar try this java -jar ecj.jar to see all options 
 '(jdee-ecj-command-line-args  (list  "-g" "-d" my-Application-Path-Build "-source"  "10" "-target"  "10"  "-warn:-serial")) ;; this is for flymake , it is already contains -Xemacs  -noExit to hook ecj.jar  into flymake, see  /root/.emacs.d/elpa/jdee-20160728.1152/jdee-ecj-flymake.el 


;; notes: add it to prj.el
;; when press c-c c-v c-c (compile) the  source and target taken from ecj.jar
;; the default target 1.6 and the default source 1.6
  '(jdee-compile-option-source (quote ("10")))
  '(jdee-compile-option-target (quote ("10")))


;; both flymake c-c c-v c-c(cmpiler) using ecj.jar, because the option -Xemacs -noExit in java -jar ecj.jar only 


;; new ecj.jar here https://download.eclipse.org/eclipse/downloads/
;; use always from apache to make it compatible with j2ee 
'(jdee-compiler (quote (("eclipse java compiler server" "/home/jdee_workspace/sourcePathx/jars/private_JAR/ecj-4.7.3a-from-tomcat9.jar"))))


;; use the new one.
;; put jdee-server-master  jdee-bundle-${version}.jar  to private dir 
'(jdee-server-dir "/home/jdee_workspace/sourcePathx/jars/private_JAR/jdee-server-master/target") ;; one.jar not two jars files in this path for jdee-server; how to build it => https://github.com/jdee-emacs/jdee-server



;; [use it] 
;; server faster than without server(start Beanshell twice)
    (("\\.java\\'" jdee-ecj-server-flymake-init jdee-ecj-flymake-cleanup))))

;; use it 
 (add-hook
  'jdee-mode-hook
  (lambda()
    (flycheck-mode -1)
    (flymake-mode 1)
    ))


;; all openjdk here https://jdk.java.net/java-se-ri/8 9 10 11
  '(jdee-jdk-registry (quote (("1.10" . "/home/jdee_workspace/sourcePathx/openJDK/jdk-10"))))

;; that is true 
;; must be 1.10 not 10 or error message like no arg "10" will appears
'(jdee-jdk-registry (quote (("1.10" . "/home/jdee_workspace/sourcePathx/openJDK/jdk-10"))))


[important]
old flymake 0.3 by Pavel Kobyakov's no more update,
and he let's the developer named  illusori to update flymake
new flymake 0.4  by  illusori https://github.com/flymake/emacs-flymake
new flymake 0.4  by  illusori https://github.com/flymake/emacs-flymake
new flymake 0.4  by  illusori https://github.com/flymake/emacs-flymake
read emacs wiki about flymake https://www.emacswiki.org/emacs/FlyMake
emacs26 flymake 0.3 in location
/usr/share/emacs/26.1/lisp/progmodes/flymake.el.gz


;; flymake , to make it slow, put thread 1 not 4 
Show ValFlymake Max Parallel Syntax Checks  4, may be heavy
   If non-nil, the maximum number of syntax checks to run in parallel before queuing.


;; flymake
Show Value Flymake Number Of Errors To Display 1, must be all error  messages)

;; log ~/flymake.log  , (3 all)
Flymake Log Level: 3
set-variable  flymake-log-level = 3,  to see log file  ~/flymake.log

;; flymake 
Flymake Start Syntax Check On Find File => off


read readme.mkdn for flymake(0.4) new one
new flymake 0.4  by  illusori https://github.com/flymake/emacs-flymake
;; Nope, I want my copies in the system temp dir.
(setq flymake-run-in-place nil)
;; This lets me say where my temp dir is.
;; this is tmp for all emacs, not only for flymake
(setq temporary-file-directory "~/.emacs.d/tmp/")

;; I want to see all errors for the line.
(setq flymake-number-of-errors-to-display nil)

;; I don't want no steek in limits.
(setq flymake-max-parallel-syntax-checks nil)


read readme.mkdn for flymake(0.4) new one
new flymake 0.4  by  illusori https://github.com/flymake/emacs-flymake


 '(flymake-allowed-file-name-masks
   (quote
    (("\\.java\\'" jdee-ecj-flymake-init jdee-ecj-flymake-cleanup))))
 '(flymake-log-level -1)
 '(flymake-max-parallel-syntax-checks 16)
 '(flymake-no-changes-timeout 2)
 '(flymake-number-of-errors-to-display nil)
 '(flymake-proc-allowed-file-name-masks
   (quote
    (("\\.java\\'" jdee-ecj-flymake-init jdee-ecj-flymake-cleanup))))
 '(flymake-start-syntax-check-on-find-file nil)
 '(flymake-start-syntax-check-on-newline nil)


;; use flymake.el v 3.0 not 4.0
 '(flymake-allowed-file-name-masks
   (quote
    (("\\.java\\'" jdee-ecj-flymake-init jdee-ecj-flymake-cleanup))))
 '(flymake-no-changes-timeout 2)
 '(flymake-proc-allowed-file-name-masks
   (quote
    (("\\.java\\'" jdee-ecj-flymake-init jdee-ecj-flymake-cleanup))))
 '(flymake-start-syntax-check-on-find-file nil)
 '(flymake-start-syntax-check-on-newline nil)



[dont do it]
'(flymake-run-in-place nil);; dont do this , must be t (default)
;; no need, it will be in /tmp/
 '(temporary-file-directory "~/.emacs.d/tmp/")





;; work
;; flymake start after save c-x c-s not auto-save 
;; (eval-after-load "flymake"
;;   '(progn
;;      (defun flymake-after-change-function (start stop _len)    
;;       "Start syntax check for current buffer if it isn't already running."
;;       ;; Do nothing, don't want to run checks until I save.
;;       )))



[wow]
install package flymake-cursor ;; display error in minibuffer



;;[not done]
 '(emms-volume-change-amount 10)


;; reduce frequency of garbage collections
   (setq gc-cons-threshold  20000000)      
;; set max variable bindings
   (setq max-specpdl-size 40000)           
;; set max eval depth
   (setq max-lisp-eval-depth 30000)        
;; set max message log size
   (setq message-log-max 2048)             
;; set max history list size
   (setq history-length 250)               
;; remove duplicates from history lists
   (setq history-delete-duplicates t)      

;; wow, 
(add-hook 'flymake-mode-hook 'flymake-cursor-mode) ;; flymake then flymake-cursor


[not work good]
 '(flymake-allowed-file-name-masks
   (quote
    (("\\.java\\'" jdee-ecj-flymake-init jdee-ecj-flymake-cleanup))))
       '(flymake-cursor-auto-enable t)
       '(flymake-cursor-error-display-delay 1)
       '(flymake-cursor-number-of-errors-to-display nil)
 '(flymake-max-parallel-syntax-checks 8)
x '(flymake-no-changes-timeout 2)
x '(flymake-number-of-errors-to-display nil)
 '(flymake-proc-allowed-file-name-masks
   (quote
    (("\\.java\\'" jdee-ecj-flymake-init jdee-ecj-flymake-cleanup))))
 '(flymake-start-syntax-check-on-find-file nil)
 '(flymake-start-syntax-check-on-newline nil)



[work]
[work]
[work]
;; use flymake 0.3 (old) 
;; http://cvs.savannah.gnu.org/viewvc/emacs/emacs/lisp/progmodes/flymake.el
 '(flymake-allowed-file-name-masks
   (quote
    (("\\.java\\'" jdee-ecj-flymake-init jdee-ecj-flymake-cleanup))))
 '(flymake-cursor-auto-enable t)
 '(flymake-cursor-error-display-delay 1.5)
 '(flymake-cursor-number-of-errors-to-display nil)
 '(flymake-start-syntax-check-on-find-file nil)
 '(flymake-start-syntax-check-on-newline nil)


[work]
[work]
[work] (0.4)
;; flymake 0.4  by  illusori https://github.com/flymake/emacs-flymake
 '(flymake-allowed-file-name-masks
   (quote
    (("\\.java\\'" jdee-ecj-flymake-init jdee-ecj-flymake-cleanup))))
 '(flymake-check-file-limit nil t)
 '(flymake-cursor-auto-enable t)
 '(flymake-cursor-error-display-delay 1.5)
 '(flymake-cursor-number-of-errors-to-display nil)
 '(flymake-master-file-count-limit 64)
 '(flymake-max-parallel-syntax-checks 8)
 '(flymake-no-changes-timeout 2)
 '(flymake-number-of-errors-to-display nil)
 '(flymake-proc-allowed-file-name-masks
   (quote
    (("\\.java\\'" jdee-ecj-flymake-init jdee-ecj-flymake-cleanup))))
 '(flymake-proc-check-file-limit nil t)
 '(flymake-proc-master-file-count-limit 64)
 '(flymake-start-syntax-check-on-find-file nil)
 '(flymake-start-syntax-check-on-newline nil)


[error]
(flymake 0.4)
when visit remote java file outside the package like String.java, then close the String.java, flymake stopped, so please use flymake(0.3)

 					 

;; [flymake error]
;; [flymake error]
;; [flymake error]
;; flymake(0.3) or (0.4)
;;  Error running timer ‘flymake-on-timer-event’: (wrong-number-of-arguments (1 . 1) 0)
;;  it is from M-x cs flymake then when open java file the above errors appears
;;  it is not not from  '(flymake-no-changes-timeout 2)
;;  (defun  flymake-start-syntax-check () ) ;; now it is return nil to be correct
;;  (load "~/.emacs.d/plugins/flymake.el") ;; load the original functions 
;;  solution :- load .emacs
;;  solution :- dont custome flymake from M-x cs flymake then return to java files, so must restart emacs first
;;  or just load .emacs to solve the error above 

;; [flymake error]
;; [flymake error]
;; [flymake error]
;; flymake(0.3) or (0.4)
;; solve  flymake error (quote) and error at java assertion errors
;; this is the error  Error running timer ‘flymake-on-timer-event’: (void-function flymake--log-1)
;; the solution is 
;;; use hard flymake by
;;;  `flymake-allowed-file-name-masks' to (\"\\.java\\'\" jdee-ecj-flymake-init jdee-ecj-flymake-cleanup)"
;;; dont use this, server start bean-shell twice
;;;  `flymake-allowed-file-name-masks' to (\"\\.java\\'\" jdee-ecj-server-flymake-init jdee-ecj-flymake-cleanup)"


;;  [error]
;;  (flymake 0.4)
;;  when visit remote java file outside the package like String.java, then close the String.java, flymake stopped, so please use flymake(0.3)

# [error] 
jdk-10 cant be read-only, because the beanshell not work(will open fast)


===================== end of  emacs 26.1 =================================

note:- 
emacs bug number 85715(gtk gnome-toolkit),generated by C-x 8 Ret Tab
the problem in gnome not emacs, because when run emacs -nw (now window) the problem will  will disappear

 


============================================================================================
xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx printed book for  emacs manual xxxxxxxxxxxxxxxxxxxxxx
============================================================================================
printed book for  emacs lisp

M-SPC  just-one-space, use it instead of M-\, or use M-x ts => (my-delete-trailing-whitespace-of-region)
-------------------------------
M-n/p in minibuffer
M-r   earlier item in minibuffer
M-s   later item in minibuffer

;; fix errors in emacs by 
to see what happend in emacs in progress, which emacs called function in memory and cpu
M-x profile-start
M-x profile-report
M-x profire-stop

[not done]
remove  (defalias 'rx 'replace-regexp)

best regex is by using rx 
http://francismurillo.github.io/2017-03-30-Exploring-Emacs-rx-Macro/
;; M-x regexp-builder, [important] C-c TAB => string then use one \ not \\
(require 're-builder)
(setq reb-re-syntax 'string)  ;; c-c tab => to use \ not \\ type string


(setq reb-re-syntax 'rx)  ;; to use rx  c-c tab => to use rx type rx
M-x regex-builder C-c tab rx
'(or "Mary" "Jane" "Sue")'
C-c C-c  to toggle case , or M-x reb-change-syntax rx


;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

;; [wow work]
;; use rx like this  in rx.el read it 
;; use rx like this  in rx.el read it 
(rx (or "Mary" "Jane" "Sue"))
"\\(?:Jane\\|Mary\\|Sue\\)"
(string-match-p (rx (or "ahmad" (or "hi" "bye")) )  "ok hi bye ok")
(s-match-strings-all (rx (repeat 4 6 (or "a" "d"))) "axx ccc aaaaa" )
(s-match-strings-all (rx "ahmad" (zero-or-more anything) "omar")  "what is ahmad ali omar ahmad a omar")

-------------------------------
M-SPC    just-one-space 
c-x c-n  goal column then when press c-n c-p will move as that column
c-u c-x c-n remove goal column
M-x      suspend-frame, minimize emacs, in terminal use %emacs to view it again
M-r      Without moving the text on the screen, reposition cursor like c-l
M-g TAB  move to column n 
-------------------------------
M-x toggle-truncate-lines 
M-x set-variable global-visual-line-mode nil  ;; Toggle Visual-Line mode in all buffers. c-n/c-p


M-x visual-line-mode(dont use it, with fringe-indicator  to display of little arrow or hide)
 (setq visual-line-fringe-indicators (quote (left-curly-arrow right-curly-arrow)))
 (setq visual-line-fringe-indicators (quote (nil nil)))


--------------------------------------




[wow]
[done]
M-x global-visual-line-mode     ===> to change truncate lines globally, but M-x toggle-truncate-lines 
M-x toggle-truncate-lines with  ===> (put it as default) '(truncate-lines t) for current buffer only
M-x toggle-word-wrap            ===> (put it as default) '(word-wrap t)
M-x set-variable line-move-visual nil   ===> (put it as default) '(line-move-visual nil)
'(global-visual-line-mode t)
'(visual-line-fringe-indicators (quote (left-curly-arrow right-curly-arrow)))
M-x set-variable truncate-partial-width-windows nil
(setq truncate-partial-width-windows t) ;; no truncate at all


'(truncate-lines t) ;; must be true, keep it
'(word-wrap t)
'(line-move-visual nil)
'(global-visual-line-mode t)
'(visual-line-fringe-indicators (quote (left-curly-arrow right-curly-arrow)))

;; when use macro stop toggle-truncate-line off hahahahiiiiiiiiiiiiii

;; c-n/c-p on or off  up/down arrow key 
(defun my-toggle-line-move-visual ()
  "Toggle behavior of up/down arrow key, by visual line vs logical line."
  (interactive)
  (if line-move-visual
      (setq line-move-visual nil)
    (setq line-move-visual t))
    (message "line-move-visual status is %s" line-move-visual)
)

--------------------------------------

[not done] 
M-x set-variable line-move-visual (put nil as default) ;;When non-nil, moves point by visual lines. c-n/c-p , hhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhiiii
set-variable (setq truncate-partial-width-windows nil) turn wrapping on in horizontally-split windows

[wow, truncate only in diff-mode]
(add-hook 'diff-mode-hook (lambda () (setq truncate-lines t)))

-------------------------------
M-=       Display the number of lines, words, and characters,(count-words-region)
C-u M-=   Displays a count for the entire buffer
C-x =     (what-cursor-position) Char: = (61, #o75, #x3d) point=111722 of 2171013 (5%) column=6
-------------------------------
C-u C-u C-n  every c-u is 4, c-u c-u is 4*4 
c-x z zzzz   repeat last command by pressing z
-------------------------------
in minibuffer // A double slash causes Emacs to ignore everything before the second slash in the
in remote minibuffer /// Typing three slashes in a row ignores everything in remote file names.
in minibuffer c-q c-j ==> new line
-------------------------------
Emacs normally disallows most commands that use the minibuffer while the
minibuffer is active. To allow such commands in the minibuffer, set the
variable enable-recursive-minibuffers to t.
-------------------------------
read-file-name-completion-ignore-case is nil 
-------------------------------
C-h i d m emacs <RET> i TOPIC <RET> indices of emacs info 
C-h i d m emacs <RET> s TOPIC <RET> searches the emacs info

C-h I METHOD <RET>   Describe the input method METHOD (describe-input-method). languages
C-x C-x  Set the mark at point, and activate it; then move point where the  mark used to be (exchange-point-and-mark).
M-h M-h M-h (mark-paragraph) more paragraphs	    
M-x eval-region 
C-x C-u  (upcase-region)
M-x delete-selection-mode t ==> delete selected region, and write over it if it is (non-nil)
-------------------------------
set-mark-command-repeat-pop t  ==> c-spc c-spc then can use c-u c-spc then c-spc many time, to break the ring c-g
or use the c-u c-spc then c-x zzzz
-------------------------------
mark  means => select region or just type c-spc twice, cursor will refer to the begging of selected region
point means => current cursor location
mark-ring-max         ==> change it to 32, c-u c-spc to cycles through the positions
global-mark-ring-max  ==> change it to 32, c-x c-spc to cycles through the positions
    c-x c-x (exchange-point-and-mark) with    selected region (Transient Mark)
c-u c-x c-x (exchange-point-and-mark) without selected region (Transient Mark)
-------------------------------
M-\      Delete spaces ffand tabs around point (delete-horizontal-space)
M-SPC    (just-one-space)
C-x C-o  Delete blank lines around the current line (delete-blank-lines)
C-M-o    split-line 
M-^      Join two lines 
C-S-backspace  Kill an entire line at once (kill-whole-line)
-------------------------------
variable ‘kill-read-only-ok’ t ,they just print a message in the echo area without beep
C-s C-w C-w  increase selected region
C-M-w   C-k  (append-next-kill) 
C-u   C-y  instead leaves the cursor in front of the inserted text
C-u 4 C-y  reinserts the fourth most recent kill.
C-h v kill-ring view all kill ring
-------------------------------
C-x r M-w  Save the text of the region-rectangle as the last killed rectangle (copy-rectangle-as-kill)
C-x r y    insert rectangle
C-x SPC    region-rectangle is highlighted

-------------------------------
c-h f tab ;; list all functions
c-h a .   ;; list all command

;;[wow] what is my current text properties at point
M-x describe-text-properties
c-u c-x =
-------------------------------
C-u NUMBER C-x r n R   ==>  Store NUMBER into register R (number-to-register).
C-u NUMBER C-x r + R   ==>  increment the number in that register by  NUMBER. 
C-x r i R              ==>  Insert the number from register R into the buffer.       
-------------------------------
use only  M-x bookmark-save
(global-set-key (kbd "C-x ps") 'bookmark-save)  ;; save bookmark to file /home/importantDIR/EmacsBookmark/bookmarks
-------------------------------
M-x view-mode ==> read only mode SPC(forward) / S-SPC(previous)
M-x list-colors-display
M-x list-faces-display
-------------------------------
;; c-x c-0  default font size
(global-set-key [C-kp-add] 'text-scale-increase)      ;; c-x c-= or c-x c-+
(global-set-key [C-kp-subtract] 'text-scale-decrease) ;; c-x c--
-------------------------------
M-x highlight-changes-mode   highlight last changes 
M-x ts  my-delete-trailing-whitespace-of-region
M-x whitespase-mode
M-x whitespase-mode
(setq visible-bell nil)
C-s  M-e(edit) M-c(case-sensitive )
-------------------------------
          C-s    
M-s e    (edit)
M-s c    (case-sensitive)
M-s SPC 
M-s w    (word)
M-s r    (regex)
M-s _    (symbol)
M-s '    (char-fold)
M-s o    (occur)
M-s h  l (highlight line)
M-s h  u (unhighlight line)

-------------------------------
C-M-w to delete character from end of search string.
C-M-y to yank char from buffer onto end of search string and search for it.
M-s C-e to yank rest of line onto end of search string and search for it.
C-y to yank the last string of killed text.
M-y to replace string just yanked into search prompt  with string killed before it.
C-q to quote control character to search for it.
C-x 8 RET to add a character to search by Unicode name, with completion.
C-g while searching or when search has failed cancels input back to what has  been found successfully.

M-c    to toggle search case-sensitivity.
M-s i  to toggle search in invisible text.
M-r    to toggle regular-expression mode.
M-s w  to toggle word mode.
M-s _  to toggle symbol mode.
M-s '  to toggle character folding.

Type M-s SPC to toggle whitespace matching.
In incremental searches, a space or spaces normally matches any whitespace
defined by the variable ‘search-whitespace-regexp’; see also the variables
‘isearch-lax-whitespace’ and ‘isearch-regexp-lax-whitespace’.

M-s e to edit the search string in the minibuffer.

Also supported is a search ring of the previous 16 search strings.
M-n to search for the next item in the search ring.
M-p to search for the previous item in the search ring.
C-M-i to complete the search string using the search ring.

M-% to run ‘query-replace’ with string to replace from last search string.
C-M-% to run ‘query-replace-regexp’ with the last search string.
M-s o to run ‘occur’ that shows the last search string.
M-s h r to run ‘highlight-regexp’ that highlights the last search string.


-------------------------------
[ very important ] http://ergoemacs.org/emacs/emacs_hotkey_open_file_fast.html

-------------------------------


-------------------------------


-------------------------------


-------------------------------
M-x visual-line-mode better than M-x toggle-truncate-lines
    but i need to change the variable ()
-------------------------------
[not done, read it ]
M-x ts       my-delete-trailing-whitespace-of-region or paragraph, instead of M-\ or M-SPC(one-space)
M-x delete-trailing-whitespace  ;; (region/no region) delete trailing-whitespace
M-x whitespaces-cleanup          ;; (region/no region) delete trailing-whitespace
variable delete-trailing-lines ==> If non-nil, M-x delete-trailing-whitespace deletes trailing lines
M-x whitespace-mode visible   visible  whitespace 
M-x global-whitespace-mode    visible  whitespace 
http://ergoemacs.org/emacs/emacs_set_keys_for_major_mode.html
http://ergoemacs.org/emacs/reclaim_keybindings.html
http://ergoemacs.org/emacs/minor_mode_key_priority.html
http://ergoemacs.org/emacs/emacs_keybinding_power_of_keys_sequence.html

[ very important ] http://ergoemacs.org/emacs/emacs_hotkey_open_file_fast.html

http://ergoemacs.org/emacs/elisp_search_documentation.html
note :  c-h f Function ==> In emacs, “commands” are a subset of “functions”
       To search variable names, Alt+x apropos-variable.
       To search variable values, Alt+x apropos-value.
       To search all symbols space (commands, functions, variables, faces), Alt+x apropos.
Alt+x elisp-index-search to find a function's documentation in the emacs lis
Alt+x emacs-index-search to find a function's documentation in the emacs manual.
To search command by name, Alt+x apropos-command 【Ctrl+h a】.
To search both function and command names, Alt+x apropos-command with a empty argument, like this: 【Ctrl+u Ctrl+h a】.
http://ergoemacs.org/emacs/elisp_universal_argument.html
http://ergoemacs.org/emacs/elisp_make-backup.html
http://ergoemacs.org/emacs/elisp_script_examples_index.html


# show all minor modes 
(message "all minor modes  %s" minor-mode-list)
# show major  modes 
(message "major modes is  %s" major-mode)


============================================================================================
xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx end of printed book for emacs manual xxxxxxxxxxxxxx
============================================================================================

what is eldoc-mode  ?
ElDoc mode is a buffer-local minor mode.  When enabled, the echo
area displays information about a function or variable in the
text where point is.



[done]
;; add to clean (defvar mode-line-cleaner-alist
;; to remove Wrap in mode-line
 (visual-line-mode  ."") 
 (eldoc-mode . "")      

;; run emacs as a server, or can use systemd( read wiki emacs), put must save desktop session 
;; when using systemd use command systemctl enable --user emacs  and  systemctl start --user emacs 
emacs  --daemon   ;; no remote server
emacsclient -c   ;; new Frame, can't connect to remote server


;; print current directory only not file (file-name-directory  filepath)
(lambda (fPath) (let ((process-connection-type nil)) (start-process "" nil "pcmanfm" (file-name-directory  fPath)  ))) ξfile-list))))))

 '(flymake-check-file-limit nil t)
 '(flymake-check-file-limit nil t)

 '(flymake-check-file-limit nil)






[work]
[work]
[work]
[work] (flymake 0.3)
 '(flymake-allowed-file-name-masks
   (quote
    (("\\.java\\'" jdee-ecj-flymake-init jdee-ecj-flymake-cleanup))))
 '(flymake-check-file-limit 250000 t)
 '(flymake-cursor-auto-enable t)
 '(flymake-cursor-error-display-delay 1.5)
 '(flymake-cursor-number-of-errors-to-display nil)
 '(flymake-master-file-count-limit 10000)
 '(flymake-no-changes-timeout 2)
 '(flymake-proc-allowed-file-name-masks
   (quote
    (("\\.java\\'" jdee-ecj-flymake-init jdee-ecj-flymake-cleanup))))
 '(flymake-proc-check-file-limit 250000 t)
 '(flymake-proc-master-file-count-limit 10000)
 '(flymake-start-syntax-check-on-find-file nil)
 '(flymake-start-syntax-check-on-newline nil)

;; work
;;(flymake 0.3) 
 '(flymake-allowed-file-name-masks
   (quote
    (("\\.java\\'" jdee-ecj-flymake-init jdee-ecj-flymake-cleanup))))
 '(flymake-check-file-limit 250000 t)
 '(flymake-compilation-prevents-syntax-check t)
 '(flymake-cursor-auto-enable t)
 '(flymake-cursor-error-display-delay 1.5)
 '(flymake-cursor-number-of-errors-to-display nil)
 '(flymake-master-file-count-limit 10000)
 '(flymake-no-changes-timeout 2)
 '(flymake-proc-allowed-file-name-masks
   (quote
    (("\\.java\\'" jdee-ecj-flymake-init jdee-ecj-flymake-cleanup))))
 '(flymake-proc-check-file-limit 250000 t)
 '(flymake-proc-compilation-prevents-syntax-check t)
 '(flymake-proc-master-file-count-limit 10000)
 '(flymake-start-syntax-check-on-find-file nil)
 '(flymake-start-syntax-check-on-newline nil)



================================================================              
;; (jdee-error) 
;; jdk-10 cant be read-only, because the beanshell not work(will open fast)
;; ================================================================


[note]
Exclude java.lang and many packages start with com sun ...and Exclude current package
jdee-import-excluded-classes

 '(jdee-import-excluded-classes (quote (("^java\\.lang\\.[^.]*$" . t)  (jdee-import-current-package-p . t))))



;; zip 
new 25.1 can copress zip file by command in dired by select files then press c ==> to zip 
new 25.1 can copress zip file by command in dired by select files then press Z ==> folder.tar.gz


;; [jdee-error]
The JDE does not recognize JDK 1.11 javac. Assume JDK 10.0 javac? y
Error running timer ‘flymake-on-timer-event’: (error "The ecj option for flymake can only be set when the jdee-compiler is also set to ecj")
The JDE does not recognize JDK 1.11 javac. Assume JDK 10.0 javac? (y or n) y
jdee-ecj-flymake-init: The ecj option for flymake can only be set when the jdee-compiler is also set to ecj



;;(require 'jdee)
;; clean compile 
(defun my-jdee-compile ()
"delete build folder  then call jdee-compile"
  (interactive)
  (delete-directory my-Application-Path-Build  1)
  (mkdir my-Application-Path-Build )
  (call-interactively  'jdee-compile)
)
(define-key jdee-mode-map  (kbd "C-c C-d c")  'my-jdee-compile)


================================================================              
[not done]
# java heap
-Xms              set initial Java heap size
-Xmx              set maximum Java heap size

-Xms250m or -Xms250M    
-Xmx2g or -Xmx2G

root     19444  342 37.6 5250032 2252140 ?     Ssl  01:08   2:51 /home/jdee_workspace/sourcePathx/openJDK/jdk-10/bin/java -classpath /home/jdee_workspace/app2/build/:/home/jdee_workspace/app2/src/resources/:/home/jdee_workspace/sourcePathx/jars/public_JAR/mariadb-java-client-2.3.0.jar:/home/jdee_workspace/sourcePathx/jars/public_JAR/spring/spring-framework-5.1.0.RELEASE/libs/spring-aop-5.1.0.RELEASE.jar:/home/jdee_workspace/sourcePathx/jars/public_JAR/spring/spring-framework-5.1.0.RELEASE/libs/spring-beans-5.1.0.RELEASE.jar:/home/jdee_workspace/sourcePathx/jars/public_JAR/spring/spring-framework-5.1.0.RELEASE/libs/spring-context-5.1.0.RELEASE.jar:/home/jdee_workspace/sourcePathx/jars/public_JAR/spring/spring-framework-5.1.0.RELEASE/libs/spring-core-5.1.0.RELEASE.jar:/home/jdee_workspace/sourcePathx/jars/public_JAR/spring/spring-framework-5.1.0.RELEASE/libs/spring-expression-5.1.0.RELEASE.jar:/home/jdee_workspace/sourcePathx/jars/public_JAR/spring/spring-framework-5.1.0.RELEASE/libs/spring-jcl-5.1.0.RELEASE.jar:/home/jdee_workspace/sourcePathx/jars/public_JAR/spring/spring-framework-5.1.0.RELEASE/libs/spring-jdbc-5.1.0.RELEASE.jar:/home/jdee_workspace/sourcePathx/jars/public_JAR/spring/spring-framework-5.1.0.RELEASE/libs/spring-tx-5.1.0.RELEASE.jar  -Xms250m -Xmx2g  algo.HK_Paths


;; min heap  = -Xms250M ;; max heap = -Xmx2G
;; min heap  = 250m     ;; max heap = 2G
 '(jdee-run-option-heap-profile (quote (nil "./java.hprof" 500 2000 "Allocation objects")))
 '(jdee-run-option-heap-size (quote ((250 . "megabytes") (2 . "gigabytes"))))



================================================================              
[jdee note]
;; only classes in this file can be automatically imported as jdk source path
/home/jdee_workspace/sourcePathx/openJDK/jdk-10/lib/classlist

in  jdk-10 rt.jar in files like *.jmod
 "/home/jdee_workspace/sourcePathx/openJDK/jdk-10/jmods/java.base.jmod"

================================================================              
 [jdee-error number 5] not solved 
 cant automatically  import java.swing.JFrame
 rt.jar changed to *.jmod, to add it here, must change extension  from .jmod to .jar
 rt.jar is included by default to classpath 
   "/home/jdee_workspace/sourcePathx/openJDK/jdk-10/jmods/java.desktop.jmod"

 solution :- edit file /lib/classlist
 by adding not replacement  /home/jdee_workspace/sourcePathx/openJDK/my-classlist-for-jdk-10 to
 /home/jdee_workspace/sourcePathx/openJDK/jdk-10/lib/classlist

Q:-Speed up application start by adding own application classes to classes.jsa (java stands alone) ?
The classes.jsa is created by the command
java -Xshare:dump
https://stackoverflow.com/questions/4692076/speed-up-application-start-by-adding-own-application-classes-to-classes-jsa#
================================================================              

[not done]
;; add *.log to ignored fiplr
;; ignore  files and dir
;; ignore  backup files and classes
;; (files ("*.jpg" "*.png" "*.zip" "*~"))))
(setq fiplr-ignored-globs '((directories (".git" ".svn" "xrefdb" "target"))
                            (files ("*.class" "*~" "*.log"))))




================================================================              

# java debug db jdb 
# remove word -launch
root@zink:/home/jdee_workspace/app2/src/mySort# /home/jdee_workspace/sourcePathx/openJDK/jdk-10/bin/jdb  -classpath /home/jdee_workspace/app2/build/:/home/jdee_workspace/app2/src/resources/:/home/jdee_workspace/sourcePathx/jars/public_JAR/mariadb-java-client-2.3.0.jar:/home/jdee_workspace/sourcePathx/jars/public_JAR/spring/spring-framework-5.1.0.RELEASE/libs/spring-aop-5.1.0.RELEASE.jar:/home/jdee_workspace/sourcePathx/jars/public_JAR/spring/spring-framework-5.1.0.RELEASE/libs/spring-beans-5.1.0.RELEASE.jar:/home/jdee_workspace/sourcePathx/jars/public_JAR/spring/spring-framework-5.1.0.RELEASE/libs/spring-context-5.1.0.RELEASE.jar:/home/jdee_workspace/sourcePathx/jars/public_JAR/spring/spring-framework-5.1.0.RELEASE/libs/spring-core-5.1.0.RELEASE.jar:/home/jdee_workspace/sourcePathx/jars/public_JAR/spring/spring-framework-5.1.0.RELEASE/libs/spring-expression-5.1.0.RELEASE.jar:/home/jdee_workspace/sourcePathx/jars/public_JAR/spring/spring-framework-5.1.0.RELEASE/libs/spring-jcl-5.1.0.RELEASE.jar:/home/jdee_workspace/sourcePathx/jars/public_JAR/spring/spring-framework-5.1.0.RELEASE/libs/spring-jdbc-5.1.0.RELEASE.jar:/home/jdee_workspace/sourcePathx/jars/public_JAR/spring/spring-framework-5.1.0.RELEASE/libs/spring-tx-5.1.0.RELEASE.jar -Xms200m -Xmx1g mySort.DVDTest

/home/jdee_workspace/sourcePathx/openJDK/jdk-10/bin/jdb -launch -classpath /home/jdee_workspace/app2/build/:/home/jdee_workspace/app2/src/resources/:/home/jdee_workspace/sourcePathx/jars/public_JAR/mariadb-java-client-2.3.0.jar:/home/jdee_workspace/sourcePathx/jars/public_JAR/spring/spring-framework-5.1.0.RELEASE/libs/spring-aop-5.1.0.RELEASE.jar:/home/jdee_workspace/sourcePathx/jars/public_JAR/spring/spring-framework-5.1.0.RELEASE/libs/spring-beans-5.1.0.RELEASE.jar:/home/jdee_workspace/sourcePathx/jars/public_JAR/spring/spring-framework-5.1.0.RELEASE/libs/spring-context-5.1.0.RELEASE.jar:/home/jdee_workspace/sourcePathx/jars/public_JAR/spring/spring-framework-5.1.0.RELEASE/libs/spring-core-5.1.0.RELEASE.jar:/home/jdee_workspace/sourcePathx/jars/public_JAR/spring/spring-framework-5.1.0.RELEASE/libs/spring-expression-5.1.0.RELEASE.jar:/home/jdee_workspace/sourcePathx/jars/public_JAR/spring/spring-framework-5.1.0.RELEASE/libs/spring-jcl-5.1.0.RELEASE.jar:/home/jdee_workspace/sourcePathx/jars/public_JAR/spring/spring-framework-5.1.0.RELEASE/libs/spring-jdbc-5.1.0.RELEASE.jar:/home/jdee_workspace/sourcePathx/jars/public_JAR/spring/spring-framework-5.1.0.RELEASE/libs/spring-tx-5.1.0.RELEASE.jar -Xms200m -Xmx1g mySort.DVDTest

stop in mySort.DVDTest.main

;; [jdee-error 7]
;; M-x jdee-debug
;; error in process filter: Wrong type argument: stringp, #<buffer Reflection.java (src_jdk_10.zip)>
;; jdee jdb debug work
;; java debug db jdb 
;; remove word -launch by these steps 
;; root@zink:/home/jdee_workspace/app2/src/mySort# /home/jdee_workspace/sourcePathx/openJDK/jdk-10/bin/jdb  -classpath /home/jdee_workspace/app2/build/:/home/jdee_workspace/app2/src/resources/:/home/jdee_workspace/sourcePathx/jars/public_JAR/mariadb-java-client-2.3.0.jar:/home/jdee_workspace/sourcePathx/jars/public_JAR/spring/spring-framework-5.1.0.RELEASE/libs/spring-aop-5.1.0.RELEASE.jar:/home/jdee_workspace/sourcePathx/jars/public_JAR/spring/spring-framework-5.1.0.RELEASE/libs/spring-beans-5.1.0.RELEASE.jar:/home/jdee_workspace/sourcePathx/jars/public_JAR/spring/spring-framework-5.1.0.RELEASE/libs/spring-context-5.1.0.RELEASE.jar:/home/jdee_workspace/sourcePathx/jars/public_JAR/spring/spring-framework-5.1.0.RELEASE/libs/spring-core-5.1.0.RELEASE.jar:/home/jdee_workspace/sourcePathx/jars/public_JAR/spring/spring-framework-5.1.0.RELEASE/libs/spring-expression-5.1.0.RELEASE.jar:/home/jdee_workspace/sourcePathx/jars/public_JAR/spring/spring-framework-5.1.0.RELEASE/libs/spring-jcl-5.1.0.RELEASE.jar:/home/jdee_workspace/sourcePathx/jars/public_JAR/spring/spring-framework-5.1.0.RELEASE/libs/spring-jdbc-5.1.0.RELEASE.jar:/home/jdee_workspace/sourcePathx/jars/public_JAR/spring/spring-framework-5.1.0.RELEASE/libs/spring-tx-5.1.0.RELEASE.jar -Xms200m -Xmx1g mySort.DVDTest
;; 1- replace (list "-launch") by   (list "") in file  /root/.emacs.d/elpa/jdee-20190217.1029/jdee-jdb.el
;; 2- M-x jdee-debug
;; 3- stop in mySort.DVDTest.main
;; 4- run

;; clear breakpoint
clear  mySort.DVDTest.main
clear  mySort.DVDTest:22



[not done]
8jdb8 ==> exclude  com.sun.*,com.oracle.*,java.*,javax.*,jdk.*,micro.*,netscape.*,org.*,sun.*,
change it  M-x cs  Jdee Db Option Stack Size:

 '(jdee-mode-line-format
   (quote
    ("-" mode-line-mule-info mode-line-modified mode-line-frame-identification mode-line-buffer-identification "   " global-mode-string "   %[(" mode-name mode-line-process minor-mode-alist "%n" ")%]--"
     (line-number-mode "(%l,")
     (column-number-mode "%c)")
     (jdee-which-method-mode
      ("--" jdee-which-method-format "--"))
     "-%-")))


================================================================              


==> svg is a xml file 
M-x auto-image-file-mode t => view color svg as good image  ==> image[svg] not image[imageMagick]

[do this to open svg with good colors and good view]
M-x  disable auto-image-file-mode
or tweak image-file-name-extensions.

M-x auto-image-file-mode t => view color svg as good image  ==> image[svg] not image[imageMagick]


================================================================              

[jdb debug jdee]
# all local variables 
c-c c-a c-x help  ==> view object of ref help (view the object of ref)
main[1] dump help
 help = {
}
c-c c-a c-e help  ==> local variable
main[1] eval help
 help = "chain_of_Responsibility.King@4c3e4790"
main[1] locals 
Method arguments:
help = instance of chain_of_Responsibility.King(id=501)
Local variables:

dump help.help.help      ==> will be the king
eval help.help.help.help ==> will be the king

# jdb help 
Startup commands can be placed in either "jdb.ini" or ".jdbrc" in user.home or user.dir

trace methods
monitor [command] => repeat command
cont

monitor locals  ==> monitor [command] repeat command every time
monitor locals  ==> monitor [command] repeat command every time
cont            ==> continue to the next breakpoint 




================================================================              
[done]
M-x jdee-javadoc-make  ==> genreate JavaDoc folder for html document for package and tree inheritance
M-x my-jdee-javadoc  ==> genreate JavaDoc folder for html document for package and tree inheritance

add dist,build to fiplr filter 
(setq fiplr-ignored-globs '((directories (".git" ".svn" "xrefdb" "target" "dist" "build"))


(defun my-jdee-import-all ()
"it is collection of command, first upate classPath, then import all,then kill-extra-import"
  (interactive)
  (auto-save-mode -1)   ;;stop auto-save  so can move java file from package to other packages 
  (jdee-load-project-file) ;; load prj.el 
  (jdee-package-update)  ;;  it is change the cursor location, so i am using  (save-excursion) in jdee-package.el to save cursor location
  (jdee-project-update-class-list) ;; c-c c-v c-q, update classPath to add new created classes to classPath
  (jdee-complete-flush-classinfo-cache)
  (call-interactively  'jdee-import-all)
  (call-interactively  'jdee-import-kill-extra-imports)
  (auto-save-mode 't)  ;; run auto-save again
  (call-interactively  'save-buffer)
)



;;(require 'jdee)
(defun my-jdee-compile ()
"delete build folder  then call jdee-compile"
  (interactive)
  (delete-directory my-Application-Path-Build  1)
  (mkdir my-Application-Path-Build )
  (call-interactively  'jdee-compile)
)
(define-key jdee-mode-map  (kbd "C-c C-d c")  'my-jdee-compile)


;; execute command javadoc -d  -classpath  then package
(defun my-jdee-javaDoc()
  " generate javaDoc for current package to my-list-doc-jdee-help-docsets
    /home/jdee_workspace/sourcePathx/doc/myAppDoc/JavaDoc
    then visit it by c-c c-v c-w"
  (interactive)
  (my-jdee-import-all)
  ;; my app javaDoc
  ;; M-x set-variable jdee-javadoc-gen-packages ==>  ("upDownCast") must be between ("package") then jdee-javadoc-make
  ;; extract package and pass it to jdee-javadoc-gen-packages
  ;;'(jdee-javadoc-gen-packages (list  "upDownCast"))
  (setq jdee-javadoc-gen-packages (list  (replace-regexp-in-string  " "   "" (replace-regexp-in-string  ";"   "" (replace-regexp-in-string  "^package "   "" (jdee-package-generate-package-statement))))))
  ;; generate javaDoc html at path /home/jdee_workspace/sourcePathx/doc/myAppDoc/JavaDoc  then visit it by c-c c-v c-w(setq my-list-doc-jdee-help-docsets)
  (setq jdee-javadoc-gen-destination-directory "/home/jdee_workspace/sourcePathx/doc/myAppDoc/JavaDoc")
  ;; generate javaDoc html files,
  (jdee-javadoc-make-internal)
 )



================================================================              
[done]

;; use c-c c-v c-w if not work, use the M-x jdee-help-class
;; javadoc argument to generate subpackages also
 '(jdee-javadoc-gen-args (quote ("-subpackages")))


etags ctags is a part of emacs /opt/emacs_webkit/emacs-26/bin/


================================================================              
[very-bad cscope]
cscope like etags ctags 
1- aptitude  install xcscope-el 
2-M-x list-packages ==>   xcscope            20180426.712  installed             cscope interface for (X)Emacs
3- add .emacs
 (require 'xcscope)
 (cscope-setup)
;; 	(define-key global-map [(control f3)]  'cscope-set-initial-directory)
;; 	(define-key global-map [(control f4)]  'cscope-unset-initial-directory)
;; 	(define-key global-map [(control f5)]  'cscope-find-this-symbol)
;; 	(define-key global-map [(control f6)]  'cscope-find-global-definition)
;; 	(define-key global-map [(control f7)]  'cscope-find-global-definition-no-prompting)
;; 	(define-key global-map [(control f8)]  'cscope-pop-mark)
;; 	(define-key global-map [(control f9)]  'cscope-history-forward-line)
;; 	(define-key global-map [(control f10)] 'cscope-history-forward-file)
;; 	(define-key global-map [(control f11)] 'cscope-history-backward-line)
;; 	(define-key global-map [(control f12)] 'cscope-history-backward-file)
;;      (define-key global-map [(meta f9)]  'cscope-display-buffer)
;;      (define-key global-map [(meta f10)] 'cscope-display-buffer-toggle)

4- cd /home/jdee_workspace/app2/src/
5- find ./ -name *.java > cscope.files 
6- cscope-set-initial-directory ==> /home/jdee_workspace/app2/src/
7- M-x cscope-find-this-symbol

================================================================              
# edit 2 files .jdbrc and myjdb 
exclude com.sun.*,com.oracle.*,java.*,javax.*,jdk.*,micro.*,netscape.*,org.*,sun.*,
monitor where  #  view stack 
monitor locals # view local variables
monitor dump this  # view this object fields(instance variables)
monitor eval this  # view this object id 



exclude com.sun.*,com.oracle.*,java.*,javax.*,jdk.*,micro.*,netscape.*,org.*,sun.*,
monitor where
monitor locals
monitor dump this
monitor eval this


================================================================              
;;  jdee format code 
;;  clang-format jdee format code like eclipse 
;;  apt-get install clang-format
;;  https://clang.llvm.org/docs/ClangFormatStyleOptions.html
;;
;; .clang-format file  config to format code example
;; if i use style option, no need to determine .clang-format, because every style having its own .clang-format
;; clang-format --style=llvm -dump-config > .clang-format
;;
;; apt-get install clang-format then clang-format.el will be in /usr/share/emacs/site-lisp/ because clang-format worked with clang 
;;   (load "/usr/share/emacs/site-lisp/clang-format-7/clang-format.el") ;; just M-x list-packages clang-format
   (global-set-key (kbd "C-x ps") 'clang-format-buffer)
;; the default is "file" (means looking for .clang-format in current/up direcotory), but if i use (LLVM, Google, Chromium, Mozilla, WebKit) then will not looking for .clang-format in directory
   (setq-default  clang-format-style "Google") ;;the option are   LLVM, Google, Chromium, Mozilla, WebKit
;; ‘setq-default’ to set variable  as local buffer

command line example
clang-format -i -style=Google File.java
================================================================              

;; apt-get install festival, then festival.el will be install in /usr/share/emacs/site-lisp/ 
(load "/usr/share/emacs/site-lisp/festival")

(defalias 'reader 'festival-say-region)

;; [old] ~/.emacs.d/plugins/festival.el ==> move it to ~/.emacs.d/old_plugins/festival.el
;;(require 'festival) ;

================================================================              


[done]
;; warn when opening files bigger than 300MB
;; (setq large-file-warning-threshold 300000000)


;; [old]
;; [old], it is for java only, so i install format-all.el for all languages like java,web,sql
;;  jdee format code 
;;  clang-format jdee format code like eclipse 
;;  apt-get install clang-format
;;  https://clang.llvm.org/docs/ClangFormatStyleOptions.html
;;
;; .clang-format file  config to format code example
;; if i use style option, no need to determine .clang-format, because every style is have its own .clang-format
;; clang-format --style=llvm -dump-config > .clang-format
;;
;; apt-get install clang-format then clang-format.el will be in /usr/share/emacs/site-lisp/ because clang-format worked with clang, or the same file(clang-format.el) in elpa just M-x list-packages,
;; or just M-x list-packages then install clang-format
;; [old]   (load "/usr/share/emacs/site-lisp/clang-format-7/clang-format.el");; just M-x list-packages clang-format 
;;
;;;;; uncomment to run it ;;;;;;;;;  (global-set-key (kbd "C-x ps") 'clang-format-buffer)
;;
;; the default is "file" (means looking for .clang-format in current/up direcotory), but if i use (LLVM, Google, Chromium, Mozilla, WebKit) then will not looking for .clang-format in directory
;;;;; uncomment to run it ;;;;;;;;; (setq-default  clang-format-style "Chromium") ;;the option are   LLVM, Google, Chromium, Mozilla, WebKit, or file =(then will looking for .clang-format in up/current-direcotory from buffer code)
;; setq-default to set variable  as local buffer




;; 
;; [new]
;; [new]
;; format-all.el 
;; format-all java,web,sql,and all languages bly format-all.el
;;
;; apt-get install clang-format  # format jdee-mode c,java 
;; apt-get install npm 
;; npm install --global prettier # format web-mode,html-mode html,css,js,json
;; apt-get install sqlformat     # format sql-mode sql 
;;
;; there is more formatter for all languages, just install programmes(read format-all.el)
;; 
;; (prettier) JavaScript/JSON/JSX/CSS/Less/SCSS ==> web-modejs-mode js2-mode js3-mode,json-mode,css-mode,scss-mode,less-css-mode,
;; (tidy)      HTML/XHTML/XML                   ==> web-mode
;; (sqlformat) SQL                              ==> sql-mode
;; (clang-format) c,java                        ==> jdee-mode
;;
;; there is more formatter for all languages, just install programmes(read format-all.el)
;;
;;
;;
;; override 
;; override, so be carefull when update,
;; override /root/.emacs.d/elpa/format-all-20190408.1319/format-all.el
;; override define-format-all-formatter to change  (jdee-mode ".java") 
;; override define-format-all-formatter to add      "-style=Chromium"
;;
(require 'format-all)          
(define-format-all-formatter clang-format
  (:executable "clang-format")
  (:install (macos "brew install clang-format"))
  (:modes
   (c-mode ".c")
   (c++-mode ".cpp")
   (jdee-mode ".java")
   (objc-mode ".m")
   (protobuf-mode ".proto"))
  (:format
   (format-all-buffer-easy
    executable
    "-style=Chromium"
;;  "-style=Google"
;;  notes for Ahmed :-command clang-format with argument  style=file this is the default, so it will looking for .clang-foramt in current/up directories, waste cpu time,so i change it to -style=Chromium, 
    (let ((assume-filename (or (buffer-file-name) mode-result)))
      (when assume-filename (concat "-assume-filename=" assume-filename)))
))) 
;;
;; format all languages like (java,web,sql, and more by one command) 
;; read the file format-all.el to see all languages and programmes 
   (global-set-key (kbd "C-x ps") 'format-all-buffer)
;;
;;
;; when update be carefull
;; 5-take a look to  /root/.emacs.d/elpa/format-all-20190408.1319/format-all.el
;; i override the function above (define-format-all-formatter clang-format, just be carefull if the original developer(format-all) change the function,
;;

================================================================              
[not done]
[not done]
[not done]

1- update all packages
2- check all override
3- fix notes  update in .emacs at the last 5 notes
4- add (format-all-buffer) and save-excursion to 

(defun my-jdee-import-all ()
"it is collection of command, first upate classPath, then import all,then kill-extra-import"
  (interactive)
  (auto-save-mode -1)   ;;stop auto-save  so can move java file from package to other packages 
  (jdee-load-project-file) ;; load prj.el 
  ;; return the cursor to original location, because the jdee-package-update will change the cursor location
  (save-excursion 
  (jdee-package-update)  ;;  it is change the cursor location, so i am using  (save-excursion) in jdee-package.el to save cursor location
  ) ;;end of save-excursion
  (jdee-project-update-class-list) ;; c-c c-v c-q, update classPath to add new created classes to classPath
  (jdee-complete-flush-classinfo-cache)
  (call-interactively  'jdee-import-all)
  (call-interactively  'jdee-import-kill-extra-imports)
  (format-all-buffer)  ;; format by clang-format  c-x ps
  (auto-save-mode 't)  ;; run auto-save again
  (call-interactively  'save-buffer) ;; c-x c-s
)


5- format-all change it like this
-style='{key1: value1, key2: value2, ...}'
"-style={BasedOnStyle: Chromium,AlignConsecutiveAssignments: true}"
BasedOnStyle: Chromium              ==> 8 space in main 

AlignConsecutiveAssignments: true   ==>
int a      = 1
int bbbbbb = 2
int cc     = 3
https://clang.llvm.org/docs/ClangFormatStyleOptions.html


(define-format-all-formatter clang-format
  (:executable "clang-format")
  (:install (macos "brew install clang-format"))
  (:modes
   (c-mode ".c")
   (c++-mode ".cpp")
   (jdee-mode ".java")
   (objc-mode ".m")
   (protobuf-mode ".proto"))
  (:format
   (format-all-buffer-easy
    executable
    "-style={BasedOnStyle: Chromium,AlignConsecutiveAssignments: true}"
    (let ((assume-filename (or (buffer-file-name) mode-result)))
      (when assume-filename (concat "-assume-filename=" assume-filename))))))

;; can add many style options  -style='{key1: value1, key2: value2, ...}'
;; https://clang.llvm.org/docs/ClangFormatStyleOptions.html


;;;;;;;;;;;;;;;;; begining of  my battery checker ;;;;;;;;;;;;;;;;;;;;;;;;
;;;;;;;;;;;;;;;;; begining of  my battery checker ;;;;;;;;;;;;;;;;;;;;;;;;


(require 'battery)

(setq *my-battery-checker-stop-checking* nil)  ;; put it t to stop my-battery-checker
(setq battery-load-critical 15)    ;; when 10 percentage show the warrning and read the massages below

(defun my-battery-checker ()
  (interactive)
  (when (and (string-equal (cdr (assoc 66 (battery-linux-sysfs))) "Discharging")
             (not *my-battery-checker-stop-checking*)
             (< (string-to-number (cdr (assoc 112 (battery-linux-sysfs))))
                battery-load-critical)) ;; 10 percentage
    (progn
    (shell-command  (concat " echo \"Battery WARNING, Battery WARNING, Battery WARNING, Battery WARNING, Battery WARNING \" | festival --tts" ))
    (shell-command  (concat " xmessage -center Battery WARNING, Battery WARNING, Battery WARNING, Battery WARNING, Battery WARNING          " ))
    )
    ) ;; end of when

       ;; 
       ;; battery.txt log file for battery percentage, 
       ;;                                           date = 2019-09-02 time = 08:32:25   battery percentage = 30.8
       (write-region (concat  (format-time-string " date = %Y-%m-%d time = %T  ")  " battery percentage = " (cdr (assoc 112 (battery-linux-sysfs))) "\n" )  nil  "/home/battery.txt" t)
       ;;
  ) ;; end of the function my-battery-checker

   ;; repeat every 5 minutes
   ;; (run-with-timer 0 (* 4 60) 'my-battery-checker)   ;; call function my-battery-checker  every 4 minutes
   ;; (run-with-timer SECS REPEAT FUNCTION &rest ARGS)  ;; repeat every five minutes, zero seconds, run the function  my-battery-checker

;; (when (true) (do these messags)  else-not-exist)
;;
;; (when (= 1 1)
;;  progn( (message "bye1")
;;         (message "bye2")
;;         (message "bye3")))
;;


;;  (battery-linux-sysfs) c-x c-e 
;;  ((99 . "956636.7425456877")
;;   (114 . "17.4")
;;   (109 . "45")
;;   (104 . "0")
;;   (116 . "0:45")
;;   (100 . "N/A")
;;   (66 . "Charging")
;;   (112 . "47.4")  ==> look at this battery percentage
;;   (76 . "N/A"))


;;;;;;;;;;;;;;;;; end of  my battery checker ;;;;;;;;;;;;;;;;;;;;;;;;
;;;;;;;;;;;;;;;;; end of  my battery checker ;;;;;;;;;;;;;;;;;;;;;;;;






[not done]
[not done]

;; update emacs packages in ~/.emacs.d/elpa/ and plugins when change emacs version then compile it B,
;; because the .elc work with emacs version only
;; 
;; in hi.txt put
;;
;; (setq package-archives
;;    (quote
;;     (("gnu" . "https://elpa.gnu.org/packages/")
;;      ("melpa" . "https://melpa.org/packages/")
;;      ("marmalade" . "https://marmalade-repo.org/packages/")
;;      )))
;; (package-reinstall   'package)
;; (package-reinstall   'package)
;; (package-reinstall   'package)
;; all packages like this 



 (setq package-archives
   (quote
    (("gnu" . "https://elpa.gnu.org/packages/")
     ("melpa" . "https://melpa.org/packages/")
     ("marmalade" . "https://marmalade-repo.org/packages/"))))

;; dont touch these packages 
;; (package-reinstall   'ido-ubiquitous     )
;; (package-reinstall   'ido-completing-read+)




(package-reinstall   'web-completion-data)
(package-reinstall   'emms-info-mediainfo)
(package-reinstall   'ac-emmet           )
(package-reinstall   'ac-html            )
(package-reinstall   'ace-mc             )
(package-reinstall   'ace-window         )
(package-reinstall   'ant                )
(package-reinstall   'anzu               )
(package-reinstall   'apt-utils-ido      )
(package-reinstall   'auto-complete-nxml )
(package-reinstall   'bash-completion    )
(package-reinstall   'chm-view           )
(package-reinstall   'deferred           )
(package-reinstall   'dic-lookup-w3m     )
(package-reinstall   'dired-avfs         )
(package-reinstall   'dired-dups         )
(package-reinstall   'dired-efap         )
(package-reinstall   'dired-filter       )
(package-reinstall   'dired-imenu        )
(package-reinstall   'dired-k            )
(package-reinstall   'dired-narrow       )
(package-reinstall   'dired-open         )
(package-reinstall   'dired-rainbow      )
(package-reinstall   'dired-ranger       )
(package-reinstall   'dired-single       )
(package-reinstall   'dired-subtree      )
(package-reinstall   'dired-toggle       )
(package-reinstall   'dired-toggle-sudo  )
(package-reinstall   'diredfl            )
(package-reinstall   'direx-grep         )
(package-reinstall   'dirtree            )
(package-reinstall   'eimp               )
(package-reinstall   'elmacro            )
(package-reinstall   'emms-mark-ext      )
(package-reinstall   'emms-soundcloud    )
(package-reinstall   'expand-region      )
(package-reinstall   'fiplr              )
(package-reinstall   'flymake-cursor     )
(package-reinstall   'format-all         )
(package-reinstall   'fuzzy              )
(package-reinstall   'golden-ratio       )
(package-reinstall   'google-maps        )
(package-reinstall   'google-translate   )
(package-reinstall   'goto-chg           )
(package-reinstall   'htmlize            )
(package-reinstall   'iedit              )
(package-reinstall   'jdee               )
(package-reinstall   'jtags              )
(package-reinstall   'look-dired         )
(package-reinstall   'magit              )
(package-reinstall   'mark-multiple      )
(package-reinstall   'monochrome-theme   )
(package-reinstall   'move-dup           )
(package-reinstall   'multi-term         )
(package-reinstall   'pdf-tools          )
(package-reinstall   'plantuml-mode      )
(package-reinstall   'rainbow-delimiters )
(package-reinstall   'rainbow-mode       )
(package-reinstall   'restclient         )
(package-reinstall   'runner             )
(package-reinstall   'simple-httpd       )
(package-reinstall   'smartparens        )
(package-reinstall   'smex               )
(package-reinstall   'sos                )
(package-reinstall   'soundklaus         )
(package-reinstall   'sx                 )
(package-reinstall   'symon              )
(package-reinstall   'vlf                )
(package-reinstall   'web-beautify       )
(package-reinstall   'web-mode           )
(package-reinstall   'which-key          )
(package-reinstall   'widget-mvc         )
(package-reinstall   'yasnippet          )
(package-reinstall   'ztree              )
(package-reinstall   'ace-jump-mode      )
(package-reinstall   'apt-utils          )
(package-reinstall   'async              )
(package-reinstall   'auto-complete      )
(package-reinstall   'avy                )
(package-reinstall   'dash               )
(package-reinstall   'dired-hacks-utils  )
(package-reinstall   'direx              )
(package-reinstall   'emmet-mode         )
(package-reinstall   'emms               )
(package-reinstall   'epl                )
(package-reinstall   'f                  )
(package-reinstall   'flycheck           )
(package-reinstall   'git-commit         )
(package-reinstall   'grizzl             )
(package-reinstall   'look-mode          )
(package-reinstall   'markdown-mode      )
(package-reinstall   'memoize            )
(package-reinstall   'multiple-cursors   )
(package-reinstall   'pkg-info           )
(package-reinstall   'popup              )
(package-reinstall   'request            )
(package-reinstall   's                  )
(package-reinstall   'stem               )
(package-reinstall   'tablist            )
(package-reinstall   'transient          )
(package-reinstall   'tree-mode          )
(package-reinstall   'undo-tree          )
(package-reinstall   'w3m                )
(package-reinstall   'windata            )
(package-reinstall   'with-editor        )




================================================================              
ido-ubiquitous and  'ido-completing-read+ ==> produce this error
;; dont touch these packages 
;; (package-reinstall   'ido-ubiquitous     )
;; (package-reinstall   'ido-completing-read+)

Warning (bytecomp): reference to free variable ‘ido-cur-item’
Warning (bytecomp): reference to free variable ‘ido-default-item’
Warning (bytecomp): reference to free variable ‘ido-cur-list’
(defvar ido-cur-item nil)                                                                            
(defvar ido-default-item nil)                                                                        
(defvar ido-cur-list nil)                                                                            



================================================================              
[done]
remove this line, Original value was "/tmp/docview0"
 '(doc-view-cache-directory "/home/importantDIR/Doc-view")

================================================================              

;; how visit directory of the softlink symbolik
(setq find-file-visit-truename t)   ;; when press c-x c-k will be in directory of file
(setq find-file-visit-truename nil) ;; when press c-x c-k will be in directory of link symbolic(default)

M-x set-variable find-file-visit-truename t/nil

================================================================              

[the solution] :- no need to convert \\ to \ because the string regex in elisp use \\ , but regex string in  emacs by M-x it is use \ not \\
(replace-regexp-in-string   (rx (or "Mary" "Jane" "Sue"))  "ok" "hi sir mary or jane ok sue ")
(replace-regexp-in-string  1-regex  2-replace-by 3-replace in string)

=================================================================-
latex org pdf 
    sudo apt-get install texlive-fonts-recommended
        sudo apt-get install cm-super
sudo apt-get install texlive-latex-extra 

=================================================================-

 (insert (kill-new  (concat "package "package-name "\n\n" "public class " (file-name-base (or (buffer-file-name)(buffer-name)))    )))

(defun print_current_file_name_without_extension()
  (interactive)
  (insert (file-name-base (or (buffer-file-name)(buffer-name))))
  (insert "\n")
  (insert(expand-file-name "")) ;; print current absolute path 
)


emacs_notes
/home/notes_files


(expand-file-name "")

(file-name-directory buffer-file-name)
(file-name-directory buffer-file-name)



energy full : 44638



;;;;;;;;;;;;;;;;;;;;start of defun;;;;;;;;;;;;;;;;;;;;;;;;;;
;;; ;; print file name without extension
;;; (file-name-base (or (buffer-file-name)(buffer-name)))
;;; hi
;;; 
;;; ;; print absolute path without / at the end 
;;; (expand-file-name "")
;;; "/home/temp/srco/sprites/src/first/second/third"
;;; 
;;; ;; print absolute path with / at the end 
;;; (file-name-directory buffer-file-name)
;;; "/home/temp/srco/sprites/src/first/second/third/"
;;;
;;; 
(defun my-lsp-new-class ()
  (interactive)
  "create  new class with package name "
   (call-interactively  'find-file-at-point) ;; to create file without ido mode, same as  c-x c-f c-f 
                            ;; (call-interactively  'make-directory)     ;; to create directory (or not, just press enter ) same as  c-x d alt-m , or in dired use ( + c-f )
   (call-interactively  'save-buffer)        ;; save buffer to the file (because it is empty it will not saved yet)
   (revert-buffer t t)                       ;; without confirm (y)  in dired press g means refresh it, go lsp server  can see the file 

   ;; this line will print package name after the src folder and replace  / by . 
   ;; package first.second.third;
   (insert (concat "package " (replace-regexp-in-string  "/"   "."  (replace-regexp-in-string  ".*/src/"   ""  (expand-file-name "")))) "; \n\n"  )

   ;; this line will print class name without extension
   ;; public class Hi{ }
   (insert (concat "public class "(file-name-base (or (buffer-file-name)(buffer-name)))) "{\n\n}"  )


   (call-interactively  'save-buffer)        ;; save buffer to the file (because it is empty it will not saved yet)
   (revert-buffer t t)                       ;; without confirm (y)  in dired press g means refresh it, go lsp server  can see the file 

   )
   ;; end of defun

;;
(global-set-key (kbd "C-c C-d C-n")   'my-lsp-new-class)
;;;;;;;;;;;;;;;;;;;;end of defun;;;;;;;;;;;;;;;;;;;;;;;;;;


;; problem when M-x list-packages
Failed to verify signature archive-contents.sig:
No public key for 066DAFCB81E42C40 created at 2019-09-21T20:56:45+0300 using RSA
Command output:
gpg: WARNING: unsafe permissions on homedir '/root/.emacs.d/elpa/gnupg'
gpg: Signature made Sat 21 Sep 2019 08:56:45 PM EEST
gpg:                using RSA key C433554766D3DDC64221BFAA066DAFCB81E42C40
gpg: Can't check signature: No public key

;; add the https 
 '(package-archives
   (quote
    (("gnu" . "https://elpa.gnu.org/packages/")
     ("melpa" . "https://melpa.org/packages/")
     ("marmalade" . "https://marmalade-repo.org/packages/"))))

;; solution is :- 
find /root/.emacs.d/elpa/gnupg  -type f -exec chmod 600 {} \;
find /root/.emacs.d/elpa/gnupg  -type d -exec chmod 700 {} \;


;; problem when M-x list-packages
Failed to verify signature archive-contents.sig:
No public key for 066DAFCB81E42C40 created at 2019-09-21T20:56:45+0300 using RSA
Command output:
gpg: Signature made Sat 21 Sep 2019 08:56:45 PM EEST
gpg:                using RSA key C433554766D3DDC64221BFAA066DAFCB81E42C40
gpg: Can't check signature: No public key

;; solution is :-
aptitude install emacs 
aptitude install gpg
================================================================              
;; how to compile c++
;; by command line 
clang++  Hi.cpp ;; put -g to debug like this  clang++ -g Hi.cpp -o Hi.out
./a.out 
;; run c++ by emacs
;; M-x compile then Alt+& then ./a.out




;; how to debug c++ ???
clang++ -g  Hi.cpp  -o Hi.out ;; must but -g to debug, put also -o to output 
;; by M-x gdb ===> gdb -i=mi Hi.out
;; b main  ==> set breakpoint to main or 
;; break 7 ==> put break at line 7, clear ==> to remove breakpoint 
;; run   ==> start debugging
;; n     ==> next or just [enter means repeat last command]
;; step  ==> stepin or enter
;; stepi ==> step in one by one
;; watch i  ==> print i value if changed 
;; print i  ==> print value of modifier i 
;; quit   ==> exit 
;; help   ==> print help 


[done]
delete one zero 
 '(undo-outer-limit 1200000000)


nyan-mode 

(defvar my-hostname (concat "♥♥" (system-name)))
(setq global-mode-string (append global-mode-string '(my-hostname)))


(defvar my-heart-name (concat " ♥♥ " ))
(setq global-mode-string (append global-mode-string my-heart-name))
(setq global-mode-string (append my-heart-name   '(display-time-string battery-mode-line-string) ))



(defvar my-hostname (concat "♥" ))
(setq global-mode-string (append global-mode-string '(my-hostname)) )

lsp-ui-doc-webkit-client-path
lsp-ui-doc-use-webkit
xwidget-webkit-last-session-buffer
xwidget-webkit-activeelement-js
xwidget-webkit-mode-hook
xwidget-webkit-mode-abbrev-table
xwidget-webkit-mode-syntax-table
xwidget-webkit-mode-map


(defun my-emacs-webkit-version-mode-line ()
(interactive)
(if (eq webkit-  nil)
    (setq case-replace t)
  (setq case-replace nil))
(message "case-replace status is %s" case-replace)
)

;; Can Emacs detect the path of its executable emacs ?
by variable invocation-name  ==> "emacs2" 
(expand-file-name invocation-name invocation-directory) ;; "/usr/bin/emacs2"
(file-name-base (or (buffer-file-name)(buffer-name)))


;; how to insert special char in emacs ?
   c-x 8 enter tab ☻ ♥ ☺

;; ☻ ♥ ☺ ♛ ⨄ ↯ ⚓ ⌷ 🁢 🁨 ䷚
ANCHOR (⚓) 
APL FUNCTIONAL SYMBOL DEL DIAERESIS (⍢) 	APL FUNCTIONAL SYMBOL DEL STILE (⍒)
APL FUNCTIONAL SYMBOL SLASH BAR (⌿) 	APL FUNCTIONAL SYMBOL SQUISH QUAD (⌷)
APPROXIMATELY EQUAL TO (≅) 	APPROXIMATELY EQUAL TO OR THE IMAGE OF (≒)
ASTERISK OPERATOR (∗) 	ASTERISM (⁂)
DARK SHADE (▓) 	DARK SUNGLASSES (🕶)
DOMINO TILE HORIZONTAL-06-06 (🁡) 	DOMINO TILE VERTICAL BACK (🁢)
DOMINO TILE VERTICAL-00-04 (🁧) 	DOMINO TILE VERTICAL-00-05 (🁨)
HEXAGRAM FOR MOUTH CORNERS (䷚) 	HEXAGRAM FOR OBSTRUCTION (䷦)



[not done yet]
;; chagne the battery formating in mode-line 
    (setq battery-mode-line-format "🁨%b%p%% ")


[not done yet]
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;; run more then one emacs and change icons ;;;;;;;;;;;;;;;;;;;;;



;;Q:-  how can run more than one emacs like emacs1 emacs2 emacs3 emacs4, and change icons ? 
easy way by command line  is
emacs -name first ;; will appear in title bar word (first) always 
emacs -name second ;; will appear in title bar word (first) always 
emacs -T   third  ;; will appear in title bar word (first) always 


;;
;; add invocation-name variable to print (name of the link in /usr/bin/emacs1  emacs2  emcs3 or emacs4  ln -s ),
;; add invocation-name to frame-title-format as below
ln -s /opt/emacs_webkit/emacs-26-1-second/bin/emacs-26.1              /usr/bin/emacs2
ln -s /opt/emacs_webkit/emacs-26-1-third/bin/emacs-26.1               /usr/bin/emacs3
ln -s /opt/emacs_webkit/emacs-26-2-fourth/emacs-26-2/bin/emacs-26.2   /usr/bin/emacs4
ln -s /opt/emacs_webkit/emacs-26-3-fifth/emacs-26-3/bin/emacs-26.3    /usr/bin/emacs5

(setq mode-line-format
   (quote
    ("%e" invocation-name  mode-line-front-space mode-line-mule-info mode-line-client mode-line-modified mode-line-remote mode-line-frame-identification mode-line-buffer-identification "   " mode-line-position
     (vc-mode vc-mode)
     "  " mode-line-modes mode-line-misc-info mode-line-end-spaces)))

;; then then then
;; then then then
;; change the name of the title bar and alt-tab by by change adding invocation-name to variable frame-title-format like this 
(setq frame-title-format
  '(:eval
  (concat invocation-name " ♥ " 
    (if buffer-file-name
        (replace-regexp-in-string
         "\\\\" "/"
         (replace-regexp-in-string
          (regexp-quote (getenv "HOME")) "~"
          (convert-standard-filename buffer-file-name)))
      (buffer-name))
    )
  ))
;; then then then
;; then then then , Numix theme
change the font size from
customize look and feel ==> window border tab ==> title bar ==> font for active window title 16 
                                              ==> title bar ==> font for inctive window title 16 
customize look and feel ==> misc tab ==> font for on-screen display 15 bold
                                     ==> font for  inactive  on-screen display 11  

  lrwxrwxrwx  1 root root       23 Mar  4  2019 emacs -> /etc/alternatives/emacs
  lrwxrwxrwx  1 root root       50 Oct  4 06:06 emacs2 -> /opt/emacs_webkit/emacs-26-1-second/bin/emacs-26.1
  lrwxrwxrwx  1 root root       49 Oct  4 06:06 emacs3 -> /opt/emacs_webkit/emacs-26-1-third/bin/emacs-26.1
  lrwxrwxrwx  1 root root       61 Oct  4 06:06 emacs4 -> /opt/emacs_webkit/emacs-26-2-fourth/emacs-26-2/bin/emacs-26.2
  lrwxrwxrwx  1 root root       60 Oct  4 06:06 emacs5 -> /opt/emacs_webkit/emacs-26-3-fifth/emacs-26-3/bin/emacs-26.3


so, emacs ==>  emacs-26.1
   emacs2 ==>  emacs-26.1
   emacs3 ==>  emacs-26.1
   emacs4 ==>  emacs-26.2
   emacs5 ==>  emacs-26.3




;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;run more then one emacs and change icons ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

 
تشغيل اكثر من نسخة ايماكس معا !
لا يوجد طريقة محدد لعمل ذلك.
لذلك اقترح هذه الطريقة لتشغيل اكثر من نسخة ايماكس معا
===========================
الفكرة الاولى :-
لان الايقونات تدمج مع الملف التنفيذي للايماكس . 
ستقوم بتنزيل السورس كود للايماكس وتعديل الايقونات
ولكن هذه الطريقة طويلة وصعبة .
===========================
الفكرة الثانية :-
هي اضافة كلمة
emacs1  emacs2 emacs3 emacs4 or emacs5
ولكن ما هذه الكلمات ؟
هذه هي الاوامر التي تستدعي الايماكس
او قل هذه هي اللنكات او الروابط  التي تستدعي الايماكس
مثال :-
ln -s /usr/bin/emacs-26.1 /usr/bin/emacs1
ln -s /usr/bin/emacs-26.1 /usr/bin/emacs2
ln -s /usr/bin/emacs-26.1 /usr/bin/emacs3
ln -s /opt/emacs-26.3     /usr/bin/emacs4
الان لتشغيل الايماكس نكتب الامر مثلا
emacs1
emacs2
emacs3
emacs4 
emacs5
.
اختر اي امر تشاء ولنفترض انه كان
emacs3
وهناك داخل لغة اللسب متغير يعطيك اسم الامر الذي شغلت الايماكس منه وهو 
invocation-name
وطبعا ستكون النتيجة في حالتنا هي اسم ايماكس1 او ايماكس2 او ايماكس3 وهكذا
بعبارة اخرى سيظهر اسم اللنك او الرابط  
الان كل ما نحتاج اليه هو كتابة دالة او اقتران ليظهر 
اسم الامر الذي شغلت الايماكس منه
=================
ولكن اين تريد ان يظهر اسم الايماكس مع الرقم ؟
اريدها ان تظهر في شريط العنوان وداخل شريط الحالة ؟
title-bar and mode-line
الاقتران الاول لاضافة اسم الامر المستدعي الى شريط العنوان

(setq frame-title-format
  '(:eval
  (concat invocation-name " ♥ " 
    (if buffer-file-name
        (replace-regexp-in-string
         "\\\\" "/"
         (replace-regexp-in-string
          (regexp-quote (getenv "HOME")) "~"
          (convert-standard-filename buffer-file-name)))
      (buffer-name))
    )
  ))





الاقتران الثاني لاضافة اسم الامر المستدعي الى شريط الحالة 

(setq mode-line-format
   (quote
    ("%e" invocation-name  mode-line-front-space mode-line-mule-info mode-line-client mode-line-modified mode-line-remote mode-line-frame-identification mode-line-buffer-identification "   " mode-line-position
     (vc-mode vc-mode)
     "  " mode-line-modes mode-line-misc-info mode-line-end-spaces)))


or or or or easy way is
or or or or easy way is
or or or or easy way is
or or or or easy way is

emacs -name first ;; will appear in title bar word (first) always 

ولكن اذا اردت حلا سريعا جدا لتغيير شريط العنوان
   title-bar  دون كتابة الاكواد . فكل ما تحتاج اليه هو تشغيل الايماكس بهذه الطريقة 
نكتب الامر داخل التيرمنال او داخل alt+F2
emacs -name first 
emacs -name second
emacs -name third
or
emacs -T first 
emacs -T first 
ولكن في هذه الحالة لن يظهر امتدا الملفات الحالية داخل شريط العنوان
ولن يظهر اسم ايماكس داخل شريط الحالة
. ولكنه حل سريع جدا ومفيد  :) 

================================================================
;; how debug elisp function 
M-x debug-on-entry the-function RET


;; full config lsp-mode; 
;; https://emacs.nasy.moe/ ==>  i put it in one file here /home/notes_files/amazing_emacs_config_with_usepackage

================================================================              
notes from this youtube
https://www.youtube.com/watch?v=bdcqRziKYT0&list=PL8Bwba5vnQK14z96Gil86pLMDO2GnOhQ6

================================================================              

;; [done]
;; translate from arabic to english
(defun my-google-translate-arabic-to-english()
"translate from arabic to english"
(interactive)
(let (
      (google-translate-default-source-language "ar")
      (google-translate-default-target-language "en")
      )
      (google-translate-at-point)
  )
)
(defalias 'gta 'my-google-translate-arabic-to-english)


;; [done]
;; translate from english to arabic
(defun my-google-translate-english-to-arabic()
"translate from english to arabic"
(interactive)
(let (
      (google-translate-default-source-language "en")
      (google-translate-default-target-language "ar")
      )
      (google-translate-at-point)
  )
)
(defalias 'gt 'my-google-translate-english-to-arabic)



;;[done]
(require 'dired)
(require 'dired-subtree)
(use-package dired-subtree
        :ensure t
        :bind (:map dired-mode-map
                    ("i" . dired-subtree-insert)
                    ("r" . dired-subtree-remove)
                    ("h" . dired-subtree-up)
                    (";" . dired-subtree-down)
		    ))




[done]
;; looking for classes inside workspace ?
   M-x lsp-ui-find-workspace-symbol 
   ("C-c C-d C-f"        .  lsp-ui-find-workspace-symbol) ;; search inside workspace, but c-c c-d f(format code)



[[done]]
(defun my-lsp-FDQN-dot()
  (interactive)
  "copy relative package name with dot"
  (message (kill-new (concat (replace-regexp-in-string  "/"   "." (replace-regexp-in-string ".*/src/"  "" (expand-file-name ""))) "."  (file-name-base (or (buffer-file-name)(buffer-name))))))
  )
(defalias 'rc-dot   'my-lsp-FDQN-dot)
;;  M-x rc-dot


(defun my-lsp-FDQN-slash()
  (interactive)
  "copy relative package name with slash"
  (message (kill-new (concat (replace-regexp-in-string  ""   "" (replace-regexp-in-string ".*/src/"  "" (expand-file-name ""))) "/"  (file-name-base (or (buffer-file-name)(buffer-name))))))
  )
(defalias 'rc-slash   'my-lsp-FDQN-slash)
;;  M-x rc-slash



[[done]]
(setq fiplr-root-markers '(".git" ".svn" "prj.el" ".project"  "pom.xml"  ".classpath"))




;; [not done] ;; mode line resize from 1.0 to 0.95
 '(mode-line ((t (:background "black" :foreground "#bdbdbd" :box (:line-width 1 :color "white" :style released-button) :height 0.95))))
 '(mode-line-buffer-id ((t (:foreground "yellow3"))))
 '(mode-line-highlight ((t (:box (:line-width 1 :color "grey40" :style released-button)))))
 '(mode-line-inactive ((t (:background "black" :foreground "#4d4d4d" :box (:line-width 1 :color "white" :style released-button) :height 0.95))))



[done];; remove it form emacs_config and put it inside .emacs
;; clean lsp java temp folders and files 
(defun my-cleaner-lsp-temp()
 "clean lsp java temp folders and files emacs.d/workspace/ and .emacs.d/.lsp-session-v1 "
 (interactive)
 (shell-command "rm -rf  /root/.emacs.d/workspace")  ;; remove it when no c-j work
 (shell-command "rm      /root/.emacs.d/.lsp-session-v1")  ;; this will duplicate projects 
 (shell-command "rm      /root/.emacs.d/.cache/treemacs-persist")  ;; this will view old project in treemacs
)



[done]
;;    (java-mode . "J♥") 
  (lsp-mode . " LSP ") 




;; [done]
;; clean ~/.emacs.d/plugins
 keep only redo+.el 


;; [not done]
;; install package ==> company-edbi
(require 'company-edbi)
(add-to-list 'company-backends 'company-edbi)


;; [done]
 '(display-time-format " ♥%I:%M %p♥")





[done]
change all (defun ) to my- in .emacs file 




;;;;;;;;;;;;;;;;;;;;;;;;;;;; start  mvn maven ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

;; (add-to-list 'load-path "~/.emacs.d/plugins")
;; (add-to-list 'load-path  "/home/importantDIR/EmacsElisp")
;; search http://search.maven.org
;; M-x maven-search
(require 'maven-search) ;;  ~/.emacs.d/plugins/maven-search.el
;; the end


;; M-x list-packages ==> then install mvn
;; M-x mvn-clean
;; M-x mvn-compile
;; M-x mvn then tab to write maven command by selecting command 
;;;;;;;;;;;;;;;;;;;;;;;;;;;; end of mvn maven ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;



[done]
mvn                20181002.1617 new        melpa      helpers for compiling with maven
M-x mvn then tab  ===> to write maven command by selecting command 


[done]
not im melpa 
looking for maven package by website 
https://github.com/syohex/emacs-maven-search 
(maven-search "spring-webmvc")
M-x maven-search   in ~/.emacs.d/plugins


[dnoe ]
;; i changed these functions to my-
my-dired-w3m-find-file 
my-w3m-copy-url-at-point
my-w3m-copy-url-at-point
my-my-mycu
my-transparency-ring
my-ytt
my-yt
my-cu1
my-cu0
my-save-current-kbd-macro-to-dot-emacs
my-sql_all_tables
my-sql-columns
my-sql-diagram
my-copy-line-or-region
my-Spell  
my-yas
my-gpg2
my-GPG_Dired
my-dired-open-in-external-app
my-dired-open-in-desktop
my-dired-zip-files
my-concat-string-list
my-insert-date
my-radio
my-sleep
(defalias 'my-pom   'lsp-java-update-project-configuration) ;;  update pom.xml prject, M-x my-pom inside pom.xml xml-mode not java-mode
(defalias 'my-boot  'my-toggle-spring-boot-server-on-off) ;; (defalias 'my-boot  'my-toggle-spring-boot-server-on-off) ;; 


[done] ;; put it in .emacs

;; how to search then replace matched string 
;;   (search-forward ":")
;;   (replace-match"</groupId>\n<artifactId>")
(defun my-maven-replace-colon-by-tags()
  "replace : by maven tags after search by M-x maven-search "
  (interactive)
  (call-interactively  'move-beginning-of-line)
  (insert "<dependency>\n    <groupId>")
  (search-forward ":")
  (replace-match"</groupId>\n    <artifactId>")
  (search-forward ":")
  (replace-match"</artifactId>\n    <version>")
  (call-interactively 'move-end-of-line)
  (insert "</version>\n</dependency>")
  )




;; [done] ;; replace in .emacs 
(defun my-lsp-find-in-project-as-grep ()
"search inside all files in project like this 
 /home/myLSP/lspWorkspace/web03/
 in grep use wildcards 
 "
(interactive)
 (let (
  ;; find '/home/myLSP/lspWorkspace/web03' -iname '*'  -type f -exec grep  --color  -nHi -e 'leagueList' {} +

  ;; "/home/myLSP/lspWorkspace/web03/"
    (my-lsp-project-name-for-search (format "/home/myLSP/lspWorkspace/%s"  (replace-regexp-in-string  "/.*" ""  (replace-regexp-in-string "/home/myLSP/lspWorkspace/"  "" (expand-file-name "")))))

  (my-lsp-project-search-for-word-as-grep (format "%s" (read-string "find as grep : ")))  
  ) ;; end of let definition
  (find-grep (format "find '%s' -iname '*'  -type f -exec grep  --color  -nHi -e '%s' {} +" my-lsp-project-name-for-search   my-lsp-project-search-for-word-as-grep))
  ) ;; end of let
 ) ;; end of my-lsp-generate-javadoc-html

(global-set-key (kbd "C-c C-d C-f")   'my-lsp-find-in-project-as-grep)



[done]
;; unformat comment in lsp java
/(setq lsp-java-format-comments-enabled nil)
lsp-java-format-comments-enabled nil    ;;;;  unformat comment in lsp java



[done]  ;; put it at the beginging of .emacs 
(global-unset-key (kbd "C-c C-d")) ;; undefined key must be first,so i can use c-c c-d with other keys like c-c c-d i
(global-unset-key (kbd "C-c SPC")) ;; undefined key must be first,so i can use c-c spc ,stop key c-c spc for (comint-accumulate) in *buffers*



[done];; put it in .bashrc
myspacemacsConverter(){
mv ~/.emacs.d/             ~/myemacs.emacs.d
mv ~/.emacs                ~/myemacs.emacs
mv ~/spacemacs.emacs.d/    ~/.emacs.d/
mv ~/spacemacs.spacemacs   ~/.spacemacs
}


myemacsCoverter(){
mv  ~/.emacs.d/          ~/spacemacs.emacs.d/   
mv  ~/.spacemacs         ~/spacemacs.spacemacs  
mv  ~/myemacs.emacs.d    ~/.emacs.d/         
mv  ~/myemacs.emacs      ~/.emacs         
}

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;




;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

[forget it]
[forget it]

;; stop fiplr and use projectile

M-x projectile-grep   ==> (global-set-key (kbd "C-c C-d C-f")   'my-lsp-find-in-project-as-grep)
			      ;; it is better than my (defun my-lsp-find-in-project-as-grep ())

M-x projectile-find-file   ==>  (global-set-key (kbd "C-c g")   'fiplr-find-file)  ;; find files
M-x projectile-find-dir    ==>  (global-set-key (kbd "C-c G")   'fiplr-find-directory) ;; find directory


(setq fiplr-root-markers '(".git" ".svn" "prj.el" ".project" "pom.xml"  ".classpath"))
Projectile Project Root Files:           pom.xml  prj.el
Projectile Project Root Files Bottom Up: .projectile  .classpath .project 


(setq fiplr-ignored-globs '((directories (".git" ".svn" "xrefdb" "target" "dist" "build" ".settings"))
                            (files ("*.class" "*~" "*.log"))))
Projectile Globally Ignored Directories: .git .svn xrefdb target dist build  .settings
Projectile Globally Ignored File Suffixes: .class .log



(require 'projectile)

(use-package projectile
  :ensure t
  :init
    (setq
        projectile-globally-ignored-directories    (quote     (".idea" ".ensime_cache" ".eunit" ".git" ".hg" ".fslckout" "_FOSSIL_" ".bzr" "_darcs" ".tox" ".svn" ".stack-work" "xrefdb"  "target" "dist" "build" ".settings"))
        projectile-globally-ignored-file-suffixes (quote ("class"))
        projectile-project-root-files   (quote     ("rebar.config" "project.clj" "build.boot" "deps.edn" "SConstruct" "pom.xml" "build.sbt" "gradlew" "build.gradle" ".ensime" "Gemfile" "requirements.txt" "setup.py" "pyproject.toml" "tox.ini" "composer.json" "Cargo.toml" "mix.exs" "stack.yaml" "info.rkt" "DESCRIPTION" "TAGS" "GTAGS" "configure.in" "configure.ac" "cscope.out" ".classpath" ".project" "prj.el"))
    )
  :bind (
         ;; this one is global-set-key
         ("C-c g"         . projectile-find-file) ;; 
         ("C-c C-g"       . projectile-find-dir) ;; 
         ("C-c C-d C-f"   . projectile-grep) ;; 
       )

  :config
  (projectile-mode t)
  )


;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;


[done]
'(which-key-idle-delay 1.0)


(defun my-lsp-find-in-project-as-grep ()
  "search inside all files in project like this 
   /home/myLSP/lspWorkspace/web03/ get project root name by fiplr
   in grep use wildcards 
   can also search all projects in workspace 
   M-x find-grep use find and grep ==> M-x fg 
   "
  (interactive)
    ;; M-x find-grep use find and grep ==> M-x fg 
    ;; find '/home/myLSP/lspWorkspace/web03' -iname '*'  -type f -exec grep  --color  -nHi -e 'leagueList' {} +
    ;;  or 
    ;; find '/home/myLSP/lspWorkspace/' -iname '*'  -type f -exec grep  --color  -nHi -e 'leagueList' {} +
    ;;
    ;; "/home/myLSP/lspWorkspace/web03/" get project root by regexp
    ;; (my-lsp-project-name-for-search (format "/home/myLSP/lspWorkspace/%s"  (replace-regexp-in-string  "/.*" ""  (replace-regexp-in-string "/home/myLSP/lspWorkspace/"  "" (expand-file-name ""))))  )
    ;;
    ;;
    ;; use the fiplr to get current the root of project
    ;;; by these steps
    ;; 1-  (require 'fiplr)
    ;; 2-  (setq fiplr-root-markers '(".git" ".svn" "prj.el" ".project"  "pom.xml"  ".classpath"))
    ;; 3-  (fiplr-find-root "/home/myLSP/lspWorkspace/web03/notes/soccer.sql" fiplr-root-markers)
    ;;
   (let (
         ;; "/home/myLSP/lspWorkspace/web03/" get project root  by fiplr 
         (my-lsp-project-name-for-search (format "%s" (fiplr-find-root (expand-file-name "") fiplr-root-markers)))

         (my-lsp-project-search-for-word-as-grep (format "%s" (read-string "find as grep : ")))  
    ) ;; end of let definition

      (cd my-lsp-project-name-for-search)  ;; to hide the absolute path in find grep , toggle H by h ==>> H(Print the file name for each match.) (h)==>> --no-filenameby  in grep  -nHi 
      (find-grep (format "find  .   -iname '*' ! \\( -iname '*.log' -or -iname '*.class'  \\)  -type f -exec grep --color  -niH -e '%s'    {} +"                                  my-lsp-project-search-for-word-as-grep))


;;    (find-grep (format "find '%s' -iname '*' ! \\( -iname '*.log' -or -iname '*.class'  \\)  -type f -exec grep --color -i -n -e '%s'    {} +" my-lsp-project-name-for-search   my-lsp-project-search-for-word-as-grep))
;;    (find-grep (format "find '%s' -iname '*' ! \\( -iname '*.log' -or -iname '*.class'  \\)  -type f -exec grep  --color  -nHi -e '%s' {} +" my-lsp-project-name-for-search   my-lsp-project-search-for-word-as-grep))
    ) ;; end of let
   ) ;; end of my-lsp-generate-javadoc-html
  
  (global-set-key (kbd "C-c C-d C-f")   'my-lsp-find-in-project-as-grep)




[done]   (require 'fiplr)
  (global-set-key (kbd "C-c g")   'fiplr-find-file)  ;; find files
  (global-set-key (kbd "C-c G")   'fiplr-find-directory) ;; find directory
  (global-set-key (kbd "C-c C-g") 'fiplr-clear-cache)  ;; clear cache
  ;; read this please 
  ;; read this please 
  ;; read this please 
  ;; fiplr up up up to .git or prj.el  file or folder  and stop 
  ;; By default it looks through all the parent directories of the file you're editing
  ;; until it finds a .git, .hg, .bzr or .svn directory. You can customize this list of root markers by setting fiplr-root-markers.
  (setq fiplr-root-markers '(".git" ".svn" "prj.el" ".project"  "pom.xml"  ".classpath"))
  
  ;; ignore  files and dir
  ;; ignore  backup files and classes
  ;; (files ("*.jpg" "*.png" "*.zip" "*~"))))
  (setq fiplr-ignored-globs '((directories (".git" ".svn" "xrefdb" "target" "dist" "build"  ".settings"))
                              (files ("*.class" "*~" "*.log"))))
  



;; use the fiplr to get current the root of project
;;; by these steps
;; 1-  (require 'fiplr)
;; 2-  (setq fiplr-root-markers '(".git" ".svn" "prj.el" ".project"  "pom.xml"  ".classpath"))
;; 3-  (fiplr-find-root "/home/myLSP/lspWorkspace/web03/notes/soccer.sql" fiplr-root-markers)
;;;
;;;      ;; "/home/myLSP/lspWorkspace/web03/"
;;     (fiplr-find-root (expand-file-name "") fiplr-root-markers)


;;  "/home/myLSP/lspWorkspace/web03/" project root by regex
;;    (my-lsp-project-name-for-search (format "/home/myLSP/lspWorkspace/%s"  (replace-regexp-in-string  "/.*" ""  (replace-regexp-in-string "/home/myLSP/lspWorkspace/"  "" (expand-file-name ""))))  )
;;  "/home/myLSP/lspWorkspace/web03/" project root  by fiplr 
;;    (my-lsp-project-name-for-search (format "%s" (fiplr-find-root (expand-file-name "") fiplr-root-markers)))





;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
[done]
;; for M-x projectile-grep 
       M-x projectile-find-file
 '(projectile-globally-ignored-directories
   (quote
    (".idea" ".ensime_cache" ".eunit" ".git" ".hg" ".fslckout" "_FOSSIL_" ".bzr" "_darcs" ".tox" ".svn" ".stack-work" "xrefdb"  "target" "dist" "build" ".settings")))
 '(projectile-globally-ignored-file-suffixes (quote ("class")))
 '(projectile-project-root-files
   (quote
    ("rebar.config" "project.clj" "build.boot" "deps.edn" "SConstruct" "pom.xml" "build.sbt" "gradlew" "build.gradle" ".ensime" "Gemfile" "requirements.txt" "setup.py" "pyproject.toml" "tox.ini" "composer.json" "Cargo.toml" "mix.exs" "stack.yaml" "info.rkt" "DESCRIPTION" "TAGS" "GTAGS" "configure.in" "configure.ac" "cscope.out" ".classpath" ".project" "prj.el")))


;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
[not done]
[very important] when update check if treemacs-persist file location exist or not 
because lsp-java server changed from
 /root/.emacs.d/eclipse.jdt.ls/server:
to .emacs.d/.cache/lsp/

;; clean lsp java temp folders and files 
(defun my-cleaner-lsp-temp()
 "clean lsp java temp folders and files emacs.d/workspace/ and .emacs.d/.lsp-session-v1 "
 (interactive)
 (shell-command "rm -rf  /root/.emacs.d/workspace")  ;; remove it when no c-j work
 (shell-command "rm      /root/.emacs.d/.lsp-session-v1")  ;; this will duplicate projects 
 (shell-command "rm      /root/.emacs.d/.cache/treemacs-persist")  ;; this will view old project in treemacs
)

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

;; [not done] it is in emacs_config put it in .emacs at the beginning of the file
;; stop keys C-c spc and c-c c-d so can use it for c-c c-d , so can use it for c-c spc abcdefghigh
(global-unset-key (kbd "C-c C-d")) ;; undefined key must be first,so i can use c-c c-d with other keys like c-c c-d i
(global-unset-key (kbd "C-c SPC")) ;; undefined key must be first,so i can use c-c spc ,stop key c-c spc for (comint-accumulate) in *buffers*

;; sotp c-c space in shell mode, so can i use c-c space abcdefg
(defun my-stop-keys-comint-mode-hook ()
  (define-key comint-mode-map "\C-c " 	  'nil) ;; sotp c-c space in shell mode
;; add other keys to disabled it from 'comint-mode , stop keys not functions
)
(add-hook 'comint-mode-hook  'my-stop-keys-comint-mode-hook)


;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
[not done]

 ;; execlude folders and files in find grep
 ;; ./.settings not work because it start with dot .settings 
 (find-grep (format " find  . -type d \\( -path ./target -prune     -or -path ./bin -prune     -or -path ./.settings -prune   \\)   -or   \\( -not -iname '*.log'     -and -not -iname '*.class'   -and -not -iname '*.jar' \\)  -type f  -exec grep  --color  -n -i -e '%s'   {}  +" my-lsp-project-search-for-word-as-grep))
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;



[[important when update]]
[[ important update ]]
[[not done]]
[[not done]]

;; remove this function  after update google-translate, it will work
;; from /home/importantDIR/EmacsElisp/emacs_config.el 
(require 'google-translate-core)
 (defun google-translate-json-suggestion (json)
  "Retrieve from JSON (which returns by the
`google-translate-request' function) suggestion. This function
does matter when translating misspelled word. So instead of
translation it is possible to get suggestion."
  (let ((info (aref json 7)))
    (if (and info (> (length info) 0))
        (aref info 1)
      nil)))   




================================================================              
gif 

f     ==> forward frame
b     ==> backward frame 
ss 2  ==> zoom in 
s 0   ==> default size
enter ==> animate gif auto, 
a +   ==> image-increase-speed



gif images  gif ==> f b 
;; for gif images f next frame, b back frame , ss for zoom in , S 0 for default size
f    ===> next frame
b    ===> pre  frame
ss 2 ===> zoom in 2
s 0  ===> default size
enter  animate gif images or press enter , a + image-increase-speed

[new]
gif ===> press [f] only , frame by frame  forward
You can run the command ‘image-next-frame’ with f
gif ===> press [b] only , frame by frame  backword 

ss 2 ===> zoom in 2
s 0  ===> default size

;; for gif images f next frame, b back frame , ss for zoom in , S 0 for default size
M-x image-transform-set-scale 1.5  ;; scale image 1.5 zoom in, 0.5 zoom-out ==>>  s s 




================================================================              
https://gitlab.com/ps.ahmad.saleh/atm-task

=================start of emacs 27.1  ===============================================              
# problem 1
   emacs: On startup e complains: Symbol's value as variable is void: ispell-menu-map-needed
fix the problem by 
sudo apt install dictionaries-common 


# problem 2
M-x md-duplicate-down not exisit
fixed  by repled by move-dup-duplicate-down

# problem 3



================= end of  emacs 27.1  ===============================================              
github first time  by git 
https://docs.github.com/en/github/importing-your-projects-to-github/importing-source-code-to-github/adding-an-existing-project-to-github-using-the-command-line

# Initialize the local directory as a Git repository.
git init -b main

# Adds the files in the local repository and stages them for commit. To unstage a file, use 'git reset HEAD YOUR-FILE'.
git add .

# Commits the tracked changes and prepares them to be pushed to a remote repository. To remove this commit and modify the file, use 'git reset --soft HEAD~1' and commit and add the file again.
git commit -m "First commit"

# Sets the new remote
git remote add origin  https://github.com/rmbxz2/ProblemSolving.git

# Verifies the new remote URL
git remote -v

# Pushes the changes in your local repository up to the remote repository you specified as the origin
git push origin main
or or 
git push -u origin master #push to github
git commit -m "initial commit"
git push origin master


================================================================              
last emacs update hanging M-x dap-java-debug ==>
the solution :-
M-x dap-debug java-run-configuration
M-x dap-debug-edit-template 

================================================================              



(setq sql-connection-alist
      '((pgsql-prod (sql-product 'postgres)
                    (sql-port 5432)
                    (sql-server "db.prod.com")
                    (sql-user "user")
                    (sql-password "password")
                    (sql-database "my-app"))
        (pgsql-staging (sql-product 'postgres)
                       (sql-port 5432)
                       (sql-server "db.staging.com")
                       (sql-user "user")
                       (sql-password "password")
                       (sql-database "my-app"))
        (mysql-dev (sql-product 'mysql)
                   (sql-port 3306)
                   (sql-server "localhost")
                   (sql-user "user")
                   (sql-password "password")
                   (sql-database "some-app"))))


export PGPASSFILE='/home/ahmad/.pgpass'
export PGPASSFILE="~/.pgpass"


(setq sql-postgres-options '("-P" "pager=off"))
(setq sql-postgres-options '("-U" "-W" "-d"))
(setq sql-postgres-options '("-d" "-W"))
(setq sql-postgres-options '("-U" "-W" "pager=off"))
(setq sql-postgres-options '(""))



(setq sql-connection-alist
      '((my-db (sql-product 'postgres)
               (sql-database "postgresql://ahmad:ahmadjar@localhost:5432/emp"))))


(setq sql-connection-alist
      '((my-db (sql-product 'postgres)
               (sql-database "postgresql://ahmad:ahmadjar@localhost:5433/emp"))))

.emacs comment it  temp
(sql-set-product-feature 'mysql :prompt-regexp "^\\(MariaDB\\|MySQL\\) \\[[_a-zA-Z]*\\]> ")




'((user :default "ahmad")
  (database :default "ahmad" :completion
	    #[771 "\211\242\302=\206\n \211\303=?\2053 r\301\204 p\202( \304 \305!\203% \306!\202& p\262q\210\307\300!$)\207"
		  [#[257 "\300 \207"
			 [sql-postgres-list-databases]
			 2 "\n\n(fn _)"]
		   nil boundaries metadata minibuffer-selected-window window-live-p window-buffer complete-with-action]
		  8 "\n\n(fn STRING PRED ACTION)"]
	    :must-match confirm)
  server)



(setq sql-connection-alist
      '((postgresql-db (sql-product 'postgres)
               (sql-database "postgresql://ahmad:ahmadjar@localhost:5432/emp"))))

=========== work postgresql ========
work ==> dont enter localhost, keep it empty like this
psql -U ahmad -d emp -W  

M-x getenv ==> PGPASSFILE    ~/.pgpass
export  PGPASSFILE=/home/ahmad/.pgpass
sql-connection-alist = nil
(setq sql-postgres-options '("-P" "pager=off" "-W" ))   ;; -W means include password


~/.pgpass
localhost:*:*:ahmad:ahmadjar
chmod 600 ~/.pgpass

=========== work postgresql ========

${1: type} ${2: name} = new $1($3);$0
${1: type} ${2: name} = new $1($3);$0
${1: type} ${2: name} = new $1($3);$0


1.1
12.12
123;123
1234.1234

M-x query-replace-regexp
first :-  \([0-9]+\):\([[:alpha:]]\)
second:-  \1: \2









================================================================              
(line-number-at-pos)16153 15712 15274 15077 15050 14954 14882 14882 14827  
================================================================
