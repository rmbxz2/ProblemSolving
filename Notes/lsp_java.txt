======================= lsp zobda  =============================1
lsp doc ==> vs code https://github.com/microsoft/vscode-java-debug/blob/main/Configuration.md
lsp doc ==> vs code https://github.com/microsoft/vscode-java-debug/blob/main/Configuration.md

lsp servers ==> https://github.com/emacs-lsp/lsp-mode/blob/ccf68971deb8b8872847a9030f28b3315088f99a/docs/lsp-clients.json
======================= lsp zobda  ========================== 
lsp-java settings :- https://xpressrazor.wordpress.com/2020/11/04/java-programming-in-emacs/
from https://github.com/emacs-lsp/lsp-java


*** yas snippet short keys ****
short keys inside the template C-c C-d g 

jsp files 
        C-c C-c e ----> el
        C-c C-c d ----> directive 


*** fix errors ****
  c-c c-v k ;; restart jdtls
  M-x my-cleaner-lsp-temp then restart 
  check pom.xml
  check archtype maven-archetype (desktop or web or spring )
[important]  M-x lsp-install-server jdtls   ==> eclipse server
[important]  M-x lsp-install-server xmlls   ==> then restart emacs
[important]  M-x lsp-install-server html-ls  ==> then restart emacs
[important]  M-x lsp-install-server json-ls  ==> then restart emacs




*** run java ***
  C-c C-v C-b  build project 
  C-c C-v C-d  run java, but before close all sessions  C-c C-v C-s

***  create new project ***
  M-x my-maven-create-new-project-web
  M-x my-maven-create-new-project-desktop

** how to add/remove  project **
  M-x  lsp-describe-session  
  M-x lsp-workspace-folders-add    ;; add project folder (not workspace folder)
  M-x lsp-workspace-folders-remove ;; del project folder (not workspace folder)
  open any java file in the second project then select D (to add it in the blacklist)
  c-c c-v k ;; restart jdtls


** how to add project **
  by two ways ?
  M-x  lsp-describe-session  

  1-(the best way) lsp-server jdtls for every project [use it for huge java project to use a little of file watchers]
     M-x lsp-workspace-folders-add    ;; add project folder (not workspace folder)
     M-x lsp-workspace-folders-remove ;; del project folder (not workspace folder)
     M-x lsp-workspace-folders-switch ;; jump between projects
     M-x lsp-workspace-folders-open   ;; open root of current project
     M-x lsp-workspace-blacklist-remove ;; remove from blacklist

  2-(the worst way) lsp-server jdtls for workspace [use it for many lsp-servers many languages]
     M-x lsp-workspace-folders-add      ;; add workspace folder 
     M-x lsp-workspace-folders-remove   ;; del workspace folder 
     M-x lsp-workspace-blacklist-remove ;; remove from blacklist
     [note] :-
     can also by this way add more lsp-servers jdtls py clang workspaces by this way to work with it at same time


*** maven ***
M-x mvn then [tab or SPS]  to write maven command by selecting command  ;; from mvn package not from lsp
  M-x mvn clean,package ==> seperated by comma , ==> mvn clean package 
  M-x my-maven-search or maven-search  ;; search maven repository  from  ~/.emacs.d/plugins/maven-search.el  then c-x c-q (not read-only) convert it to tags by my-maven-replace-colon-by-tags
  M-x my-maven-replace-colon-by-tags  ;; "replace : by maven tags after search by M-x maven-search "


*** classPaths ***
  C-c C-v C-l  ==> gui maven dependencies + classpath => M-x lsp-treemacs-java-deps-list
  mvn dependency:list
  M-x  my-lsp-show-ClassPath-for-currentProject
  M-x  my-lsp-show-ClassPath-for-project
  to add external-package add it to .classpath as eclipse doing ==>  	<classpathentry kind="lib" path="/home/myLSP/myPath/javax.servlet-api-4.0.1.jar"/>


*** javadoc ***
  M-x my-maven-javadoc  (generate then visit the site )  ;; need javadoc plugin  in pom.xml 
  M-x my-maven-javadoc-visit-current-site() (dont generate, just visit the the site) 

  M-x my-lsp-generate-javadoc-html   (mine)
  C-x r b  doc-          ;; to visit html documents for all library in bookmarks
  c-c c-v C-Shift-W         my-toggle-lsp-ui-doc-show-and-hide ;; hide/show web javadoc, for all lsp
  C-c c-v c-w            ;; java doc for java members, or current method args, to open link in doc  M-x lsp-ui-doc--open-markdown-link
  c-c c-v w               method(put cursor at args) view doc for methods param lists (signaure) ==> (M-n/p) to view overloading methods docs) ==> ;==> M-x lsp-signature-toggle-full-docs  ==>
                         

*** hierarchy  ***
       C-c SPC h  M-x  lsp-java-type-hierarchy  view call class hierarchy at point at point at point
C-u 0  C-c SPC h             With prefix 0 show sub-types.    c-u 0 M-x lsp-java-type-hierarchy
C-u 1  C-c SPC h             With prefix 1 show super-types.  c-u 1 M-x lsp-java-type-hierarchy
C-u 2  C-c SPC h (default)   With prefix 2 show both.         c-u 2 M-x lsp-java-type-hierarchy

  C-c M-j     view call (method/var/constructor) hierarchy  M-x lsp-treemacs-call-hierarchy  With a prefix argument, show the outgoing call hierarchy. c-u [] C-c M-j

  c-c c-j    (C-c J)       references (who is called me -class),  lsp-find-implementation ==>  create hierarchy as plate, who is implement this interface, n/p for neviage, in future must be hierarchy like eclipse (Ctrl+t)
  C-c C-v m  (c-c c-v c-m) references (who is called me -method),  lsp-find-references ;; M-?  find referense and sort it as list, n/p to neviage

  M-x umlx   (x means d directory )folder generate  => classDiagram.svg and classDiagram.txt
  M-x uml    modify classDiagram.txt to generate classDiagram.svg
  M-x umlGUI  dynamically  change classDiagram to svg file 

*** find  ***
  C-c C-d   f    [eclipse Ctrl+Shift+F] M-x lsp-format-buffer  ;; format code, when  (setq lsp-java-format-on-type-enabled t)  it will autoformat when type ; } enter
  C-c C-d C-f    my-lsp-find-in-project-as-grep ;; search all files in current project in (set key in global and local)
                 can also search all projects in workspace  by regex
  C-c C-d C-S-F  lsp-ui-find-workspace-symbol ;; search inside .emacs.d/workspace, but c-c c-d f(format code)


*** how to debug ***
1-    M-x dap-breakpoint-add or by mouse 
2-    C-c C-v C-d  dap-java-debug, but close all sessions C-c C-v C-s
      M-x dap-tooltip-mode hide/show
3-    M-x my-dap1 (call it once) in java buffer to off breakpoint window,
4-    hide breakpoint window by right click or or or close it by c-x 0
5-    M-x my-dap2 (call many times) in all windows [not not not java window], so can resize windows by mouse drag.
  6-    M-x my-face-small ;; set font 12
  7-    M-x my-face-default ;; set font 16
8-     M-x golden-ratio-mode  enable it after debug,


*** how to debug threads***
1-    M-x dap-breakpoint-add or by mouse
2-    M-x by mouse select producer thread then continue (c), then stop it 
3-    M-x by mouse select main thread then next-step , 
4-    M-x by mouse select consumer  thread then continue(c) , then stop it
5-    the above-icons arrows are related with thread. so when thread stoping(like producer), select the second thread(like consumer) then next-step


*** build project ***
[auto] M-x lsp-java-build-project     C-c C-v C-b   Perform project build action.
[auto] M-x my-pom   update pom.xml


*** errors ***
c-c e       nex-error
c-c r       prev-error
c-c w       list-error, f to filter 
C-c C-v C-r = list all errors (enter,x,=)  (then tab to view the errors dynamically), fix error by press (x) , (enter) to visit file, (=) to view only errors/warnings/notifications 
C-c c-v r   list all errors (not dynamically)
C-c C-d s   ==> lsp-execute-code-action, fix errors helper
C-c C-d C-s ==> lsp-execute-code-action, fix errors helper
C-2 c       ==> lsp-execute-code-action
C-2 o        override methods
C-2 i        add unimplemented necessarily methods
M-x lsp-workspace-shutdown ;; yes yes this is for shutdown lsp serveres like jdtls,ls-boot or xmlls
M-x lsp-workspace-restart ;; restart lsp serveres like jdtls,ls-boot or xmlls 
  M-x lsp-describe-session  ;; to view the working servers like jdtls,ls-boot,xmlls
M-x my-cleaner-lsp-temp  ;; delete workspace temp

C-c C-v k   restart jdtls


**** important keys  ****
 c-c c-d c-i(tab)  new iterface    
 c-c c-d c-n       new class, c-c c-d c-n (c-x c-f to stop autocomplete)
 C-c j        [eclipse F3         ] lsp-ui-peek-find-definitions          ;; M-.  open decleration, c-c s for return
 C-c s        [eclipse Alt+left   ] pop-tag-mark, for return after c-c j 
 M-x rc       my-lsp-FDQN  ,need for java file and lsp to copy relative class with dot 
 M-x rc-dot   my-lsp-FDQN-second,can also copy relative folders with/without classes, without lsp 
 M-x rc-slash my-lsp-FDQN-third,can also copy relative folders with/without classes, without lsp
 C-2 m        lsp-java-extract-method, or use C-c c-d s
 C-2 r        lsp-rename  ;; rename class,rename method, rename variable
 C-2 l        extract to local variable; int x = 5 ==> int x = i ; int i =5;
 C-c C-d   j C-l    lsp-ui-imenu     ;; view members, must rescan after update by c-l
 C-c C-d C-j C-l    imenus     ;; view members, to update select c-c c-d c-j *Rescan* C-l ==>rescan instead of M-r in imenu[s].el (with s) 
 C-c C-d i    lsp-java-organize-imports  ;; import all classes
 C-c i        lsp-java-generate-getters-and-setters ;; getter and setter
 C-c t        lsp-java-generate-equals-and-hash-code ;; Generates an equals(), a hashCode()  method.
 C-c T        lsp-java-generate-to-string ;; Generates an toString()
 C-M-n        next method
 C-M-p        pre  method
 C-M-u/d      [eclipse] backward-up-list
 C-M-h        mark function/medtho/defun  (){}
 C-c C-d g    company-yasnippet      
 c-c spc g  or  c-c & c-s  company-yasnippet
 doc  then tab then C-.  ;; how to generate java doc for methods ?
 docc then tab           ;; how to generate java doc for methods ?
 C-.             company-complete, c-. twice to hide c-z menu
 C-z             auto-complete
 C-tab or C-c f  hippie-expand
 C-c C-d s 
          move... ==>  will move classes to another packages
c-)  mc-ace jump, then enter 
c-shift-n mc-new or just press [enter or return]
c-> select word  then =>  mc-next,
c-< deselect word 
c-c c-> mc-all-next, then c-g 
M-x mc/insert-number-or-letter
c-g to remove selection 

M-;         ;; comment at the end of line without select region
M-;         ;; uncomment select region
M-;         ;; comment select region

Q:- search classpath by C-.
Q:- [ C-. ]  commands ==> company-complete
     C-h    company-show-doc-buffer  ==> wow
     C-M-s  company-filter-candidates ==> wow
     C-s    company-search-candidates
     C-o    company-search-toggle-filtering
     M-n     company-select-next, or C-n
     M-p     company-select-previous or C-p
     return  company-complete-selection
     tab     company-complete-common, ===>> not C-i
     C-w    company-show-location
     C-s    company-search-repeat-forward
     C-r    company-search-repeat-backward

 C-2 T  [eclipse Ctrl+1] my-lsp-try-catch      
 C-2 t  [eclipse Ctrl+1] lsp-java-add-throws   
 C-c C-d C-s then surround by try catch


**** important snippet  ****
me    create new method
ma    create new abstract method
pr    System.out.print();
pri   private ;
imp   implements
new   A a = new A();
newi  A a = new B();
docc  java-doc 
doc   java-doc
main  main 
for   for(int i=0;i<size;i++)
fore  for(Object obj:arrayList)
this   this.x=x;
while
switch
re    return ;
ife   if() else{}
if    if(){} 
final final int value=uppercase
eq    public boolean equals($0 other) 

*** what new in lsp ****
M-x lsp-dired-mode ;; view erros in dired mode by colors

*** junit ***
 dap-java-run-test-class      Run JUnit test class.
 dap-java-run-test-method     Run JUnit test method.
 dap-java-debug-test-class    debug JUnit test class.
 dap-java-debug-test-method   debug JUnit test method.

 lsp-jt-browser  use x to run test ,under point; d to debug the tests under point. R to refresh. 
                (define-key (kbd "x") #'lsp-jt-run)
                (define-key (kbd "d") #'lsp-jt-debug)
                (define-key (kbd "R") #'lsp-jt-refresh)
 lsp-jt-run
 lsp-jt-debug 
 

C-c T       generate toString()
C-c t       generate hashCode, equals()
C-c i       generate getter,setter methods
C-c C-d s   generate constructors by lsp-execute-code-action
C-c C-d C-s generate constructors by lsp-execute-code-action
C-2 c       generate constructors by lsp-execute-code-action

** spring boot****
M-x my-boot   ;; toggle boot-ls enable/disable variable
M-x lsp-java-spring-initializr ;; download project from spring url by wget curl
      enter for select
      c-j   for ok
M-x lsp-ido-workspace-symbol ==> C-c SPC n
    @  shows all Spring annotations in the code
    @> shows all functions (prototype implementation)
    @+ shows all defined beans (bean name, bean type, source location)
    @/ shows all defined request mappings (mapped path, request method, source location)


***  create web project  ***
  M-x my-maven-create-new-project-web ;;       -DarchetypeArtifactId=maven-archetype-webapp  , to create springMVC  https://proliferay.com/basic-spring-mvc-project-by-maven/
  M-x my-maven-create-new-project-desktop ;;   -DarchetypeArtifactId=maven-archetype-quickstart
  M-x my-maven-create-new-project-listAll ;;   -DarchetypeArtifactId=list all by command mvn archetype:generate ;; list all  and create web spring any type of project  ;; 
  M-x my-maven-create-new-project-springMVC ;; -DarchetypeArtifactId=spring-mvc-archetype
  
  M-x  my-maven-cargo-run  ;; run web project by apache tomcat 9  file:/home/cargo/tomcat-9.0.48.zip
  M-x  my-maven-cargo-stop ;; stop web prooject 
   tomcat config ===>> target/cargo/configurations/tomcat10x/
  no need anything,
  thats it 


or or or or 

 add cargo plugins to pom.xml

https://codehaus-cargo.github.io/cargo/Starting+and+stopping+a+container.html
<build>
<plugins>
 <plugin>
 <groupId>org.codehaus.cargo</groupId>
 <artifactId>cargo-maven3-plugin</artifactId>
 <configuration>
   <container>
     <containerId>tomcat10x</containerId>
     <type>embedded</type>
   </container>
 </configuration>
 </plugin>
</plugins>
</build>

then 
mvn clean verify  org.codehaus.cargo:cargo-maven3-plugin:run
mvn               org.codehaus.cargo:cargo-maven3-plugin:stop
or 
mvn clean package  org.codehaus.cargo:cargo-maven3-plugin:run
mvn               org.codehaus.cargo:cargo-maven3-plugin:stop
or or or 
;; every time when restart the computer i need to download https://repo.maven.apache.org/maven2/org/apache/tomcat/tomcat/9.0.48/tomcat-9.0.48.zip ")
(mvn "clean verify   org.codehaus.cargo:cargo-maven3-plugin:run     -Dcargo.maven.containerId=tomcat9x          -Dcargo.maven.containerUrl=https://repo.maven.apache.org/maven2/org/apache/tomcat/tomcat/9.0.48/tomcat-9.0.48.zip ")

;; no need for download tomcat9x , just put it in file:/home/cargo/tomcat-9.0.48.zip ")
(mvn "clean verify   org.codehaus.cargo:cargo-maven3-plugin:run     -Dcargo.maven.containerId=tomcat9x          -Dcargo.maven.containerUrl=file:/home/cargo/tomcat-9.0.48.zip ")


change the port to 9090
(mvn "clean verify org.codehaus.cargo:cargo-maven3-plugin:run     -Dcargo.maven.containerId=tomcat10x          -Dcargo.maven.containerUrl=https://repo.maven.apache.org/maven2/org/apache/tomcat/tomcat/10.1.0-M8/tomcat-10.1.0-M8.zip  -Dcargo.servlet.port=9090 ")




*** git ***

------------------------------one git command ----------------------
git is just one command like this ((wow)) 
g $ zz Fu (open modified files for stash) s cc Pu , in Erorr Xh(hard reset)

Q:- how to use git github ? stash->pull->myfiles-->push
g for refresh magit
$ for view git command 
zk (delete all previos stashed)
zz (stach my modified files)

 Fu (pull from master) ==>  git pull origin master  ;; default merge  (local Master <----Master in github)
 
# stash copy paste for my modified files, then Push origin master 
# 1- git add .               // working to staged [magit s]
# 2- git commit -m "hi" .    // staged to local master  [magit cc comment C-cC-c]
# 3- git push -u origin master  --force // local master to origin/master to remote origin [magit Pu]
s cc Pu

# in Error merge pull push
# git reset --hard  hash // undo from local master to working  [magit Xh] (out<--W<----LM)
  Xh(reset hard): in Error merge pull push
------------------------------one git command ----------------------

https://github.com/rmbxz2/ProblemSolving/commits/master

(working)-->(stage)-->(localMaster)-->(Origin/Master)-->(Master in github)

(w)--1-->(s)--2-->(LM)--3-->(OM)--3-->(Master in github)

1- git add .               // working to staged [magit s]
2- git commit -m "hi" .    // staged to local master  [magit cc comment C-cC-c]
3- git push -u origin master  --force // local master to origin/master to remote origin [magit Pu]

<-13--(w)<--12--(s)<--8--(LM)<--7--(OM)<--5--(Master in github)
       |                  | |                     |
       ------<-9----------  -------<-6-------------

magit-porcess buffer to view all git command 
You can run the command ‘magit-process-buffer’ with $
$  list current git  command 

5- git fetch          (OM<----Master in github)  [magit fu]
6- git pull origin master --rebase          (local Master <----Master in github)   [magit Fu]
6- git pull origin master  ;; default merge  (local Master <----Master in github)   [magit Fu]
7- git merge origin/master    (LM<----OM)

8- git reset --soft  hash // undo from local master to stage   [magit Xs] (S<----LM)
9- git reset --hard  hash // undo from local master to working  [magit Xh] (out<--W<----LM)
9- git reset         hash // undo from local master to working [magit Xw] (W<----LM)

12-git restore --staged file // undo from staged to working [magit u] (W<----S)
13-git restore          file // undo from staged to working [magit k] (  <---W)

[first time  pull from github working 100%]
[first time  pull from github working 100%]
[first time  pull from github working 100%]
# my branch is master not main
git clone https://github.com/rmbxz2/ProblemSolving.git
cd problemSolving
#  switch from main to master in working direcotory
git branch -v -a ;; to list all branches  main and (master not exist yet)
git checkout -b master 
git pull origin master --rebase
git fetch origin
git pull origin master ;; merge
git remote add origin  https://github.com/rmbxz2/ProblemSolving.git
git remote set-url origin git@github.com:rmbxz2/ProblemSolving.git
1- git add .               // working to staged [magit s]
2- git commit -m "hi" .    // staged to local master  [magit cc comment C-cC-c]
3- git push -u origin master   // local master to origin/master to remote origin [magit Pu]
   
=========== first github clone project ==============================

git clone https://github.com/rmbxz2/ProblemSolving.git
user:  rmbxz2
user:  rmbxz2
email: ahmad.ali.omar.quran@gmail.com
pass: 
git remote add origin  https://github.com/rmbxz2/ProblemSolving.git
git remote set-url origin git@github.com:rmbxz2/ProblemSolving.git


*************

@startuml
left to right direction
skinparam shadowing false

'skinparam linetype ortho
skinparam linetype polyline

'hide org.springframework.*
'hide java.util.*
hide java.lang.*

M-x uml    ==> text to svg
M-x umlx   ==> folder to svg
M-x umlGUI ==> all text in folder to svg svg svg files

Q:- install java source code
sudo  apt install openjdk-14-doc    openjdk-14-source
sudo  dnf  install java-11-openjdk-src-fastdebug-1:11.0.10.0.9-0.fc34.x86_64                     java-11-openjdk-javadoc-1:11.0.13.0.8-2.fc34.x86_64

**** emmet html *****
bookmark emmet
C-c f  or C-tab => hippie-expand hippie-expand not from dict
C-z      ==> auto-compete menu  one word (must be the only word  means fuzzy
C-c z    emmet-mode
C-c C-z  emmet-wrap-with-markup, hi => mark it then c-c c-z then a => <a href="">hi</a> 



**** sql  ****
M-x sql-postgresql 
sql-list-table          C-.    [list columns of the table]
sql-list-all-tables     c-c s  [list all tables in the database]
send pragraph    C-c C-c 
send buffer      C-c C-b

C-c C-c  fix error in *sql*
M-x my-sql-diagram ;; build sql diagram 


******  after update packages *******
1:- jsp not work with html-ls
https://github.com/emacs-lsp/lsp-mode/pull/2872/files/feaeb5afc95cf0c021236da351fe2f72f69f3349
in lsp-mode.el -> lsp-language-id-configuration  add  (".*\\.jsp$" . "html")  then compile by B
or or or  (not good)
in lsp-mode.el -> lsp-language-id-configuration  add  (web-mode . "html") then compile by B

2- if  emacs very slow 
del /home/ahmad/.emacs.d/auto-save-list/


3 :- run jdt(eclipse) by  max hep 3G as  lsp said  and taskmanager process :
form https://github.com/emacs-lsp/lsp-java
must be same : - my lsp-java-vmargs in .emacs 
(setq lsp-java-vmargs '("-XX:+UseParallelGC" "-XX:GCTimeRatio=4" "-XX:AdaptiveSizePolicyWeight=90" "-Dsun.zip.disableMemoryMapping=true" "-Xmx3G" "-Xms250m")  )
               - lsp-java-vmargs in /home/ahmad/.emacs.d/elpa/lsp-java-20211124.605/lsp-java.el ==> 
(defcustom lsp-java-vmargs '("-XX:+UseParallelGC" "-XX:GCTimeRatio=4" "-XX:AdaptiveSizePolicyWeight=90" "-Dsun.zip.disableMemoryMapping=true" "-Xmx1G" "-Xms100m")


****************



======================= lsp zobda  ========================== 
======================= lsp zobda  ========================== 





Q;- after the update lsp-java
M-x dap-java-debug c-c c-v c-d  hang
solution1 :- use the M-x dap-debug ==> java run configuration  "this is not dap-java"
solution2 :-
(use-package dap-mode
  :init (setq 
             ;;  dap-java-args ""         ;; solve the problem of hanging  after call M-x dap-java-debug  c-c c-v c-d
	)









Q:-  c-x 1 not work ?
 temp fix c-x 1 causing by dap causing by treemacs mode
     the problem occurs after calling M-x dap-java-debug, C-c c-v c-d
     the problem from treemacs-
     C-u C-u C-x o => delete window or use c-x 0 (close current window)
     M-x delete-other-windows-internal
     M-x delete-other-windows-vertically
the temp solution is:-
(global-set-key (kbd "C-x 1")   'delete-other-windows-internal)


Q:- error without  error  ?
    because project have DOS and Linux files togather !
    *Messages* LSP :: Error from the Language Server: Internal error. (Internal Error)

   ;; remove it, causing problem in lsp unix dos files in jdtls java server 
   ;; (prefer-coding-system 'utf-8 ) ;;  in .emacs remove it 
   c-h C  enter  ==> describe the current file coding system
   C-x enter F   utf-8-unix  ==> best for lsp because it is in json transfer /home/ahmad/.emacs.d/elpa/lsp-mode-20210117.653/lsp-json.el

   how to remove ^M in files ? 
   how to convert Dos to unix file system coding ?
   by command dos2unix file.java




M-x lsp-restart-workspace	      C-c C-v k
M-x lsp-treemacs-call-hierarchy ;;   who is calling this java members,     Show the incoming call hierarchy for the symbol at point.


Q:- hide show the top path - hide dired structural path
    M-x lsp-headerline-breadcrumb-mode

use emacsw to run emacs-27.1 with json in C so, lsp-mode will be faster 

java regex with debugger
https://regex101.com/

supported servers
https://langserver.org/
in github lsp-mode see => lsp-mode/docs/lsp-clients.json (view all servers lanaguages here with installation ways) 

;;  (((( Fix any problem by )))
;;  (((( Fix any problem by )))
;;  (((( Fix any problem by )))

# json error (if not using emacs 27.1)
M-x packager-reinstall lsp-mode lsp-java lsp-ui lsp-treemacs

   [important notes]
   [important notes]
;; new functions and variables every day, so up to date every week.
;; M-x list-packages update =>  lsp-treemacs,lsp-mode,lsp-java,lsp-ui,company-lsp,imenus,dap-mode,treemacs,projectile,hydra
;;
;; [important notes]
;; to discover all keys in lsp mode just M-x fg define-key in lsp-mode lsp-ui and others packages as above
;;
;; full config lsp-mode; 
;; https://emacs.nasy.moe/ ==>  i put it in one file here /home/notes_files/amazing_emacs_config_with_usepackage


[read the errors in]
 M-x lsp-workspace-show-log  first must set-variable lsp-print-io  t, then viewt the massages
      M-: lsp-java--ls-command
      bookmark ==> lsp-log file in workspace
      and and and 
      *lsp-log* just c-x b to see the errors
      M-x lsp--erase-session-log-buffers to delete *lsp-log*
           or just close it to delete it 
	   note :- variable lsp-log-max 1000 lines, so no need to delete buffer of close it 
           ;; set max message log size
              (setq message-log-max 1000) ;; Maximum number of lines to keep in the message log buffer.


      :) :) :)
     ;; log file 
     ;; (setq lsp-log-io t) ;;reads messages from server
         M-x lsp-workspace-show-log
     ;; see also .log::process

     ;; if jdt-ls is very slow 
        the solution is https://github.com/emacs-lsp/lsp-java/issues/43


    00- if errors occur use emacs 26.3
    0- apt-get update ==> not update the system, just update list of software, use apt-get upgrade to update the system packages
     ;; how  to update package ? [dont do this]
     apt-get   upgrade 
     aptitude  upgrade 


    ;; upgrade important packages form emacs, then chaeck servies by systemctl | grep running to disable [[stoped services]] like   apparmor  arpon  cryptdisks   cron  check them by rcconf command or by [ systemctl status apparmor ]
    ;; remove apparmor clipit [apt-get remove  apparmor clipit], stop cron [systemctl disable cron]
       apt-get   build-dep emacs 


     ;; this will upgrade and update only  packages for emacs .
     apt-get   install emacs
     apt-get reinstall emacs
    

    ;; How can I install just security updates from the command line ?
    sudo apt-get install unattended-upgrades
    sudo unattended-upgrade -d --dry-run ;; check if  there is any Security Updates are available in Debian/Ubuntu
    sudo unattended-upgrade -d           ;; install available Security Updates in Debian/Ubuntu 
    sudo unattended-upgrade


=========================== staring  update ===========================
=========================== staring  update ===========================
=========================== staring  update ===========================

sudo apt-get update
sudo apt-get autoclean
sudo apt-get autoremove

return to original emacs ==> sudo mv /usr/bin/emacsx /usr/bin/emacs
my built emacs is  emacsw 

sudo aptitude install  libjansson-dev  ;; for json in emacs 27 in C++ not lisp
sudo aptitude install  libjansson-dev  ;; for json in emacs 27 in C++ not lisp

[wow]
sudo aptitude install  emacs  (this will upgrade emacs)
sudo apt      install  emacs  (this will upgrade emacs)
then restart emacs

aptitude install emacs  emacs-intl-fonts  emacs-common-non-dfsg emacs-window-layout emacs-common emacs-gtk emacs-el

;; how to  install new server (xmlls jdtls html)
;; start update servers
;; start update servers
              M-x lsp-doctor 
              M-x lsp-doctor 
              M-x lsp-doctor 
[install openjdk 14]   
0- sudo    apt    install   openjdk-14-dbg           openjdk-14-jdk           openjdk-14-jre-headless       openjdk-14-jdk-headless  openjdk-14-jre-zero       openjdk-14-doc           openjdk-14-jre           openjdk-14-source
   then restart computer 
   then restart computer 
0 - sudo aptitude install  libjansson-dev  ;; for json in emacs 27 in C++ not lisp

1- update emacs packages by
    M-x list-packages then update (very important important) M-x package-reinstall lsp-* dap-*

[important]  the new version of all servers is here /home/ahmad/.emacs.d/.cache/lsp/
[important]  the new version of all servers is here /home/ahmad/.emacs.d/.cache/lsp/
[important]  the new version of all servers is here /home/ahmad/.emacs.d/.cache/lsp/
[important]
[important] M-x lsp-install-server will execute command line, but without root password,
[important]                    so the command will not work,
[important]  		       so copy the command then execute it by root password
[important]		       note:- if the server installed will not appear in M-x lsp-install-server
[important]  remove all servers in /home/ahmad/.emacs.d/.cache/lsp/ 
[important]  M-x lsp-install-server jdtls   ==> eclipse server
[important]  M-x lsp-install-server xmlls
[important]  M-x lsp-install-server html-ls  ==> npm command 
[important ]  M-x my-cleaner-lsp-temp


2-         ;; xmlls (xml server)
              M-x lsp-install-server  xmlls (xml  server)
	    or or 
	   will be installed automatically when open any xml file. 
[old]	   the new version here  /home/ahmad/.emacs.d/.cache/lsp/xmlls/org.eclipse.lemminx-0.13.1-uber.jar

	   ;;
	   ;;
	   ;; so no need to do anything
	   ;;
           ;;   note:- ~/.lsp4xml/cache ==> list all used xsd files for xml validate and help
	   ;;
       ;; in github lsp-mode see => lsp-mode/docs/lsp-clients.json (view all servers lanaguages here with installation ways) 
       ;; https://github.com/emacs-lsp/lsp-mode/blob/ccf68971deb8b8872847a9030f28b3315088f99a/docs/lsp-clients.json
       ;; note: read lsp-xml.el to determine if there is a new version of org.eclipse.lemminx-%s-uber.jar 
                (defconst lsp-xml-jar-version "0.13.1")
                (defconst lsp-xml-jar-name (format "org.eclipse.lemminx-%s-uber.jar" lsp-xml-jar-version))
		to view the version of org.eclipse.lemminx-uber.jar looking at META-INF/maven/org.eclipse/org.eclipse.lemminx/pom.xml
		;;; [wow]
		;;; [wow]
               in lsp-xml.el ==>> (defcustom lsp-xml-jar-download-url means can download org.eclipse.lemminx-%s-uber.jar
	       dynamically from eclipse repository(repo) when open any xml file (it is called xmlls)
	       /home/ahmad/.emacs.d/.cache/lsp/xmlls/org.eclipse.lemminx-0.13.1-uber.jar
		;;
		;;lsp4xml.jar is deprecated, 
		;;
       ;; note:- ~/.lsp4xml/cache ==> location of xsd files, list all used xsd files for xml validate and help 
            ;; new xml server released
            ;; new version from here https://github.com/eclipse/lemminx  ==> click releases , download src code  then ./mvnw to build it
            ;; ./mvnw clean verify (OSX, Linux)
            ;; After successful compilation you can find the resulting `org.eclipse.lemminx-uber.jar` in the folder `org.eclipse.lemminx/target`
               rm  /home/ahmad/.emacs.d/lsp4xml/org.eclipse.lemminx-uber.jar 
3-	       cp  org.eclipse.lemminx-uber.jar  /home/ahmad/.emacs.d/lsp4xml/
	       then in .emacs change  ==> lsp-xml-jar-file "/home/ahmad/.emacs.d/lsp4xml/org.eclipse.lemminx-uber.jar" 


       ;; read also the a bove notes to determine if there is a new version of html server
       ;; https://github.com/emacs-lsp/lsp-mode/blob/ccf68971deb8b8872847a9030f28b3315088f99a/docs/lsp-clients.json


 - M-x my-cleaner-lsp-temp
   then restart emacs 
           remove ~/.emacs.d/workspace/       ;; remove it when no c-j work
           remove ~/.emacs.d/.lsp-session-v1  ;; this will duplicate projects 
           remove /root/.emacs.d/.cache/treemacs-persist  ;; this will view old project in treemacs


[old]   rm  ~/.emacs.d/lsp4xml/org.eclipse.lsp4xml-0.3.0-uber.jar
[old]   wget https://github.com/angelozerr/lsp4xml/releases/download/0.3.0/org.eclipse.lsp4xml-0.3.0-uber.jar   -O  ~/.emacs.d/lsp4xml/org.eclipse.lsp4xml-0.3.0-uber.jar
[old]   note:- ~/.lsp4xml/cache ==> list all used xsd files for xml validate and help 
[old]   lsp4xml.jar is deprecated, 



[old]       ;;htmls  html-ls (html server )
[old]   sudo apt-get install npm
[old]   sudo  npm uninstall -g  vscode-html-languageserver-bin
[old]   sudo  npm install   -g  vscode-html-languageserver-bin
[old]    the resutlt is /usr/local/bin/html-languageserver -> /usr/local/lib/node_modules/vscode-html-languageserver-bin/htmlServerMain.js
or or or
   [ new ]
   [ new ]
    M-x lsp-install-server  html-ls


[old]  rm -rf //.emacs.d/eclipse.jdt.ls/server
[old]       M-x lsp-install-server  ==> new location is /root/.emacs.d/.cache/lsp/eclipse.jdt.ls/boot-server
[old]       M-x lsp-java-update-server [old]


       ;;; remove old  servers  [xmlls jdtls html-ls]
       rm -rf /home/ahmad/.emacs.d/.cache
       rm -rf /home/ahmad/.emacs.d/.cache/lsp/xmlls
       rm -rf /home/ahmad/.emacs.d/.cache/lsp/eclipse.jdt.ls
       ;;;
       [important] ;; remove  junit-platform-console-standalone.jar for deug-run java files 
       [important] 
              rm -rf /home/ahmad/.emacs.d/eclipse.jdt.ls/
       [important] 
       [important] 



 M-x lsp-install-server  jdtls   (java server) genereate /home/ahmad/.emacs.d/.cache/lsp/eclipse.jdt.ls/
 M-x lsp-install-server  xmlls   (xml  server) genereate /home/ahmad/.emacs.d/.cache/lsp/xmlls/org.eclipse.lemminx-0.13.1-uber.jar
 M-x lsp-install-server  html-ls (html server) generate /home/ahmad/.emacs.d/.cache/lsp/npm/vscode-html-languageserver-bin/

  https://download.eclipse.org/jdtls/snapshots/latest.txt


  - sudo aptitude install  libjansson-dev  ;; for json in emacs 27 in C++ not lisp
10- then reinstall M-x package-reinstall
    lsp-java
    lsp-mode
    lsp-ui
    lsp-treemacs
    dap-mode   [[very important ]]
    to generate *.elc wiht json files after install apt-get install libjansson-dev json 
    (functionp 'json-parse-string)  t ==> must be true be check if it is support json files build by C langauge


;; finsh update servers 
;; finsh update servers 

[old]   - [old]
[old]   ;; fixed by me to the emacs master at github
[old]      lsp-java.el  M-x lsp-java-spring-initializr
[old]   ;; comment this line ==> ;; (url-copy-file download-url temp-file t)
[old]   ;; substitute (url-copy-file) by
[old]      (shell-command (format "wget  -O  %s  '%s'  " temp-file download-url))
[old]        or  or or by
[old]      (shell-command (format "curl  -o  %s  '%s' " temp-file download-url))



   12- when change from project to project type
    error message ==>> LSP :: Classpath is incomplete. Only syntax errors will be reported
    the solution  C-c C-v k  ==> (lsp-restart-workspace)
    or or or
    [watch lsp session ]
    close all files for other project
    keep open all files return to the current project

    
===========================end update===========================
===========================end update===========================
===========================end update===========================




;; ======================= start of spring  ========================== ;;
;; ======================= start of spring  ========================== ;;

;; what is my spring-boot server  version
~/.emacs.d/.cache/lsp/eclipse.jdt.ls/boot-server/spring-boot-language-server-1


;; start spring boot project 
  M-x lsp-java-spring-initializr
  enter for select
      c-j   for ok
 Do you want to import the project?    NO ;;
 Do you want to import the project?    NO ;;
 Do you want to import the project?    NO ;;
 because it will add project name as workspace in /root/.emacs.d/.lsp-session-v1
 so when M-x lsp-describe-session will view double sessions 
 then the solution is to remove /root/.emacs.d/.lsp-session-v1


   ;; where is the log file for tomcat ? 
      tcp-server-boot-ls::stderr* ==> Redirecting log output to: /tmp/sts-log-fileL71JYX.log 

   ;; how to run/stop project by spring ?
      run   ==>> M-x dap-java-debug (C-c c-v c-d)
      stop  ==>> M-x dap-disconnect (c-c c-v c-s) then dap-delete-all-sessions(c-c c-v s)
      dap-tooltip-mode ==> disable it in dap mode 

   ;;  who to use lsp in .properties and .yml files ?
       M-x my-boot ;;  toggle lsp-java-boot-enabled nil/t, then M-x lsp


   
Q:- enable/disable/shutdown/restart  spring boot ?
    comment ;; (require 'lsp-java-boot)  at .emacs 
    or
    M-x my-boot ;; toggle lsp-java-boot-enabled t/nil to enable/disable ls-boot permanently
    but for shutdown/restart boot use
    M-x lsp-workspace-shutdown ;;  shutdown temporally lsp serveres like jdtls,ls-boot or xmlls 
    ;;
    M-x lsp-workspace-restart ;; restart lsp serveres like jdtls,ls-boot or xmlls 
    M-x lsp-describe-session  ;; to view the working servers like jdtls,ls-boot,xmlls
    


;; ======================= end of spring  ========================== ;;
;; ======================= end of spring  ========================== ;;




;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;;; empty keys 
;;; empty keys C-c SPC 
;;; empty keys C-c SPC 
;;;
;;; (define-key java-mode-map (kbd "C-c C-d c") 'semantic-symref-symbol) ;; local like M-x occur 
;;; (define-key java-mode-map (kbd "C-c C-d C-c") 'semantic-symref-symbol) ;; local like M-x occur 
;;; (define-key java-mode-map (kbd "C-c C-d SPC") 'semantic-symref-symbol) ;; local like M-x occur 
;;; (define-key java-mode-map (kbd "C-c C-.") 'jdee-complete-minibuf) ;; faster complete without update, to update use c-. only
;;; (define-key java-mode-map (kbd "C-c C-d l") 'semantic-analyze-possible-completions) 
;;; (define-key java-mode-map (kbd "C-c C-d u") 'senator-go-to-up-reference) 
;;; (define-key java-mode-map (kbd "C-c C-d n") 'jdee-gen-class) ;; same as eclipse ;; use c-c c-d c-n global
;;; (define-key java-mode-map (kbd "C-c C-v z") 'my-jdee-import-all)  ;; stop key C-c c-v z  in jdee-mode , stop key not function, jdee-import-all'  
;;; (define-key java-mode-map (kbd "C-c C-d G") 'semantic-symref)        ;; current Method M-x occur 
;;; (define-key java-mode-map (kbd "C-M-x") 'kill-sexp)
;;; (define-key java-mode-map (kbd "C-c C-v J") ' jdee-javadoc-remdoc-at-line) ;; remove javadoc , add javadoc by c-c c-v j 
;;; (define-key java-mode-map (kbd "C-c C-v j") ' jdee-javadoc-remdoc-at-line) ;; remove javadoc , add javadoc by c-c c-v j 
;;; (define-key java-mode-map (kbd "C-c C-v x") 'jdee-show-interface-source) ;; visit current interface
;;;  
;;; c-c c-v C-o
;;; c-c c-v c-i
;;; empty keys 
;;; empty keys 
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;;
;; 

;; for gif images f next frame, b back frame , ss for zoom in , S 0 for default size
enter ==> play gif , dont stop playing frames
f     ==> forward frame
b     ==> backward frame 
ss 2  ==> zoom in 
s 0   ==> default size
enter ==> animate gif auto,
a +   ==> image-increase-speed
ss 1  ==> for svg 
use smplayer to view gif  forward frame by frame ......  
use smplayer to view gif  backward frame by frame ,,,,,,

M-x image-transform-set-scale 1.5  ;; scale image 1.5 zoom in, 0.5 zoom-out ==>>  s s 


M-x  my-lsp-show-ClassPath-for-currentProject
     print full classpath for the current project 
     but the workspace must named inside lspWorkspace

M-x  my-lsp-show-ClassPath-for-project
     print full classpath for the current project 
     but enter the project name.


# How do I change the version of java used by LSP?
Have a look at ~/.emacs.d/workspace/.metadata/.plugins/org.eclipse.jdt.launching/libraryInfos.xml.
If you updated your local java path and want LSP to use the new version,
try removing the ~/.emacs.d/workspace/ directory and relaunch LSP. Also see #114.
just M-x my-cleaner-lsp-temp will do it 



;; how to reduce buffers in lsp java ?
;; c-x c-b
   /r then programming then m(mark) then D(kill all marked buffers)    or (d) then (x)
   /f fiter by rgex    then D(mark for del kill buffer) then x         or (m) then (D)

;;  kinds of complete in lsp anad emacs
C-.             company-complete
C-z             auto-complete
C-tab or C-c f  hippie-expand



;; how to fix pom.xml configuration
   M-x lsp-workspace-restart  or C-c C-v k

;; create new maven project (desktop or web) by command line
;; mvn archetype:generate -DgroupId=desktopApp  -DartifactId=DesktopProject  -DarchetypeArtifactId=maven-archetype-quickstart -DinteractiveMode=false
;; mvn archetype:generate -DgroupId=webproject  -DartifactId=WebApp          -DarchetypeArtifactId=maven-archetype-webapp     -DinteractiveMode=false
   M-x my-maven-create-new-project-web
   M-x my-maven-create-new-project-desktop



;; how to show all errors in the project (red/yellow/green)
;; mode lin in lsp (green yellow) view all warring in the project like eclipse,
;; called [ LSP errors view ]  g will refresh it 
   M-x lsp-treemacs-errors-list , enter to visit file, tab to open errors
   C-c C-v C-r    or       C-c C-v r
   press key  (=) to hide (/yellow/green) errors
   press key  (x) to fix errors

;; how to describe buffers and jdls xmlls opend files, and current workspace path
   M-x lsp-describe-session



;; how to generate java doc for methods ?
/*tab
or doc then tab then C-.
or or or
jhttps://github.com/emacs-lsp/lsp-java/issues/240
/** */ then C-.   [the best]




[wow deploy web application by M-x my-maven-cargo]
[wow deploy web application by M-x my-maven-cargo]
[wow deploy web application by M-x my-maven-cargo]
Q:- how to launch run deploy web application in apache tomcat by maven  plugin
    wihout my-tomcat-start and without my-webapp-launch by mounting ?
    without copying  dependencies to /WebContent/WEB-INF/lib/ ? 
      <!-- install and run full apache tomcat 9 and run it by   -->
      <!-- mvn clean package install  -->
      <!-- mvn org.codehaus.cargo:cargo-maven2-plugin:run
            or mvn cargo:run
	    stop it by ctrl-C or by close the buffer *compilation* M-x mvn cargo:run
     the full command is   ==> mvn clean package cargo:run , seperated by comma if using M-x mvn command
      -->
      <!-- visit url  http://localhost:8080/web03/User/pages/index.html -->

1- add plugin  to pom.xml
    <plugin>
    <groupId>org.codehaus.cargo</groupId>
    <artifactId>cargo-maven2-plugin</artifactId>
    <version>1.7.9</version>
      <configuration>
        <container>
          <containerId>tomcat9x</containerId>
          <type>embedded</type>
        </container>
      </configuration>
    </plugin>

2-  the full command is   ==> mvn clean package cargo:run , seperated by comma if using M-x mvn command, kill buffer *compilation* to stop tomcat or Ctrl+c
or use the function  M-x my-maven-cargo
notes that no need to copy dependencies to /WebContent/WEB-INF/lib/




Q:-  <!-- generage javadoc in target/site/  by mvn clean package javadoc:javadoc -->
;; work pom.xml
;; work pom.xml
;; work pom.xml
;; work pom.xml
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<groupId>problemSolvingx</groupId>
	<artifactId>problemSolving1</artifactId>
	<packaging>jar</packaging>
	<version>1.0-SNAPSHOT</version>
	<name>problemSolving1</name>
	<url>http://maven.apache.org</url>
	<properties>
	<java.version>1.8</java.version>
	<maven.compiler.source>${java.version}</maven.compiler.source>
	<maven.compiler.target>${java.version}</maven.compiler.target>
	</properties>
	<build>
	<plugins>
	<plugin>
	<groupId>org.apache.maven.plugins</groupId>
	<artifactId>maven-javadoc-plugin</artifactId>
	<version>3.2.0</version>
	<configuration>
	<javadocExecutable>/usr/bin/javadoc</javadocExecutable>
	<show>private</show>
	</configuration>
	</plugin>
	</plugins>
	</build>
</project>
;; work pom.xml
;; work pom.xml
;; work pom.xml
;; work pom.xml

then mvn clean package javadoc:javadoc
or   mvn clean,package 
or  M-x my-maven-javadoc (the best ) need javadoc in pom.xml
notes :- it is better than M-x my-lsp-generate-javadoc-html



;; where is the location of struts.xml 
;; [very important note about src/strusts.xml]
   when run or deploy web app into tomcat,
   src/struts.xml will not not not  copied to tomcat9/webapps/web03/WEB-INF/classes/
   edit the src/struts.xml, then it will be copied to tomcat9/webapps/web03/WEB-INF/classes:
       best solution :-
       best solution :-
       best solution :-
       best solution :-
   put struts.xml path in 
   /src/main/resources/struts.xml
           it will be at automatically in 
           /target/classes/struts.xml

   
;; note about server
M-x lsp-install-server
because lsp-java server changed from
 /root/.emacs.d/eclipse.jdt.ls/server:
to .emacs.d/.cache/lsp/ <<== all servers here
/root/.emacs.d/.cache/lsp/eclipse.jdt.ls/boot-server    


    [wow]
Q:- can i restart emacs after mount project and start mysql ?
    yes. without stop mysql or stop mounting project

;; M-x list-packages ==> then install mvn
M-x mvn-clean      ;; from mvn package not from lsp
M-x mvn-compile    ;; from mvn package not from lsp
M-x mvn then [tab or SPS]  to write maven command by selecting command  ;; from mvn package not from lsp
M-x mvn clean,package ==> seperated by comma , ==> mvn clean package 
    
M-x my-maven-search or maven-search  ;; search maven repository  from  ~/.emacs.d/plugins/maven-search.el  then c-x c-q (not read-only) convert it to tags by my-maven-replace-colon-by-tags
M-x my-maven-replace-colon-by-tags  ;; "replace : by maven tags after search by M-x maven-search "
M-x my-maven-cargo  ;; add tag plugin to pom.xml then run apache tomcat server, no need to copy dependencies to /WebContent/WEB-INF/lib/
                    ;; it is better than M-x my-tomcat-start M-x my-webapp-lanuch then copy dependecies
M-x my-maven-javadoc ;; add tag plugin to pom.xml then generate javadoc in target/site/apidocs/index.html
                     ;; it is better than M-x my-lsp-generate-javadoc-html

Q:- what is classpath in lsp ?
    classpath from two arrays [.classpath]+[pom.xml]+ $CLASSPATH_ARGS   ==> M-x getenv then $CLASSPATH_ARGS

ex:- add classpath as jar in .classpath 
	<!--  -->
	<classpathentry kind="lib" path="/home/myLSP/myPath/javax.servlet-api-4.0.1.jar"/>
	<classpathentry kind="lib" path="/home/myLSP/myPath/mariadb-java-client-2.3.0.jar"/>
	<classpathentry kind="output" path="bin"/>
	<!--  -->



Q:- how to view full classpath ?
M-x my-lsp-show-ClassPath-for-project ;; must run the command inside the project 


Q: how to generate full javaDoc for packages ?
M-x my-lsp-generate-javadoc-html
    then project-name  web03
    then packages-name package1:package2:package3  ;; different packages 
    will generate   /home/myLSP/myPath/myDoc/index.html
    will print full-classpath in C-h e Messages,
or or or 
   M-x my-maven-javadoc (the best best best )  [important] pom.xml must added plugin named maven-javadoc-plugin

;; tool-tip quick help  when press C-. in company-lsp ?
   install package company-quickhelp
   M-x company-quickhelp-mode 



;; how to add project ?  
  by two ways ?
  1- lsp-server jdtls for every project [use it for huge java project to use a little of file watchers]
     M-x lsp-workspace-folders-add    ;; add project folder (not workspace folder)
     M-x lsp-workspace-folders-remove ;; del project folder (not workspace folder)
     M-x lsp-workspace-folders-switch ;; jump between projects
     M-x lsp-workspace-folders-open   ;; open root of current project
     M-x lsp-workspace-blacklist-remove ;; remove from blacklist

  2- lsp-server jdtls for workspace [use it for many lsp-servers many languages]
     M-x lsp-workspace-folders-add      ;; add workspace folder (not workspace folder)
     M-x lsp-workspace-folders-remove   ;; del workspace folder (not workspace folder)
     M-x lsp-workspace-blacklist-remove ;; remove from blacklist
     [note] :-
     can also by this way add more lsp-servers jdtls py clang workspaces by this way to work with it at same time


Q:- how to select lsp-server ?
    C-u M-x lsp 


[very important]
Q:- override or implement like eclipse
   1- put cursor over class name then 
   2- C-2 i implement necessarily methods
   or
   C-. then name of the method name will be override like run() in Thread or Runnable


;; in dired
 i  dired-subtree-insert
 r  dired-subtree-remove
 h  dired-subtree-up
 ;  dired-subtree-down
 o    open file in other window, and jump the cursor to new window
 C-o  open file in other window, and keep the cursor in dired.
 j    in dired to jump to file


Q:-  how to stop lsp server like stop jdtls , ls-boot, xmlls, temporally not permanently
   M-x lsp-workspace-shutdown ;; yes yes this is for shutdown lsp serveres like jdtls,ls-boot or xmlls
                              ;; lsp-java-boot-enabled t by M-x my-boot will disable/enable ls-boot permanently 
   M-x lsp-workspace-restart ;; restart lsp serveres like jdtls,ls-boot or xmlls 
   M-x lsp-describe-session  ;; to view the working servers like jdtls,ls-boot,xmlls



 Q:-  junit in lsp
      ;; lsp test support lsp-jt.el
      lsp-jt-  => java test support
      lsp-jt-browser  use x to run test ,under point; d to debug the tests under point. R to refresh. 
      lsp-jt-run
      lsp-jt-debug 
      ;;
      (defvar lsp-jt-mode-map
         (-doto (make-sparse-keymap)
          (define-key (kbd "x") #'lsp-jt-run)
          (define-key (kbd "d") #'lsp-jt-debug)
          (define-key (kbd "R") #'lsp-jt-refresh)


;; view vmargs to LSP, not to my java programs, this vmargs for (jdt eclipse), 
variable lsp-java-vmargs ==> ("-noverify" "-Xmx1G" "-XX:+UseG1GC" "-XX:+UseStringDeduplication")
Specifies extra VM arguments used to launch the Java Language Server. (jdt eclipse)

;; when open more than one project
error message :
LSP :: Classpath is incomplete. Only syntax errors will be reported
the solution  C-c C-v k  ==> (lsp-restart-workspace)


;; looking for classes inside workspace ?
   M-x lsp-ui-find-workspace-symbol 
   ("C-c C-d C-S-f"   .  lsp-ui-find-workspace-symbol) ;; search inside workspace, but c-c c-d f(format code)


;; important note about fixing erros ?
   fix errors by lsp-treemacs-quick-fix using (x) keybinding in 
   or by the fastest way is 
   C-2 c       ==> lsp-execute-code-action
   C-c C-d s   ==> lsp-execute-code-action  
   C-c C-d C-s ==> lsp-execute-code-action  


Q:- where is the java  refactor [will add new actions every day] ??
    C-2 c ==>> menu will be ( C-c C-d C-(s) )
          :) :) fix errors instead of lsp-treemacs-quick-fix (x), no need for lsp-treemacs-quick-fix just type c-2 c or  (c-c c-d c-s )  or c-c c-d s
          move...                   ==>  will move classes to another packages
	  change modifier to final  ==> cursor at instance variables will add final to (final argument )
	  invert condition          ==> cursor in if condition will add !
	  inline method             ==> cursor at the method name 
	  extract ...               ==> extract method or extract field 
	  organizing imports        ==> as c-c c-d i
	  generate                  ==> toString hashcode constroctor
	  override...               ==> override/implemnts methods
	  create annotation
	  import class
	  add cast
	  create methods 
	  ..
	  ..
	  and more


	  
Q; how to override/implemnts methods ? []
   1-  C-c C-v C-r then x (lsp-treemacs-quick-fix)
   2-  C-.
   3-  C-2 o override methods
   4-  C-2 i implement methods, put the cursor on the error red line
       :) can fix errors by c-1 c, very faster than lsp-treemacs-quick-fix 




Q:-  can i create new workspace (and  project) without eclipse ?
[new] M-x my-maven-create-new-project-desktop
[new] M-x my-maven-create-new-project-web


[old]     create pom.xml =>  will create .classpath and .projec and .settingst automatically without (mvn eclipse:eclipse)
[old]          or
[old]          create pom.xml => (mvn eclipse:eclipse)[no need] ==>  will create .classpath and .project
[old]      create folders src WebContent (target build ==>  will created  automatically)
[old]      create  /src/main/resources/struts.xml
[old]      create WebContent/WEB-INF/web.xml
[old]      create WebContent/WEB-INF/classes
[old]      create WebContent/WEB-INF/lib
[old]      create WebContent/META-INF
[old]      ---- finish ----
[old]      or or or 
[old]      or or or 
[old]      or or or 
[old]      ;;;
[old]         copy old web project this change project's name like this
[old]      ;; find all files (not folders) exclude .java extension and classes then replace web1 by web2
[old]      find . ! \( -iname '*.java' -or -iname '*.class'  \)  -type f
[old]      then t sellect all
[old]      [not work]==> then Q in dired M-x dired-do-find-regexp-and-replace
[old]                    or use M-x diredQ or  M-x 'dired-do-query-replace-regexp   web1 ==> web2
[old]                    (defalias 'diredQ   'dired-do-query-replace-regexp)
[old]      ;;     
     A    search in marked files, :) :)  M-x grep-mode to view as n/p visit files,





;; in treemacs C-c C-v C-l
   w  ==> set with size
   t w ==> unlock the two windows, so can jump between them by c-x o
   t h ==> treemacs-toggle-show-dotfiles


;; fix any problem
    M-x my-cleaner-lsp-temp then restart emacs 
             remove ~/.emacs.d/workspace/       ;; remove it when no c-j work
             remove ~/.emacs.d/.lsp-session-v1  ;; this will duplicate projects 
             remove /root/.emacs.d/.cache/treemacs-persist  ;; this will view old project in treemacs



;;  view all project dependencies
    C-c C-v C-l     lsp-treemacs-java-deps-list   ;; view project as tree, view dependents, (r g) to refresh, (q) close java file
    or or or or 
    mvn dependency:tree
    mvn dependency:list
or use C-c C-v C-l ==> r g(refresh) ,  q (close java file)
M-x lsp-treemacs-java-deps-list  then tab the maven dependents like eclipse 
C-c C-v l       treemacs ;; view project as tree, always select [workspace not project]
C-c C-v C-l     lsp-treemacs-java-deps-list   ;; view project as tree, view dependents, (r g) to refresh, (q) close java file
C-c C-v C-f     lsp-treemacs-java-deps-follow ;; in java editor, view treemacs java file location as tree, use c-c c-v c-l then c-c c-v c-f


M-x lsp-describe-session [wow Capabilities] ;; Display session folders and running servers.
    lsp-session-file  "/root/.emacs.d/.lsp-session-v1" which store inside it the workspace projects old and new dupclicate project sometimes
M-x lsp-workspace-folders-add
M-x lsp-workspace-folders-remove
M-x lsp-workspace-folders-switch ;;  Switch workspace folder
M-x lsp-workspace-blacklist-remove ;; when open file outside workspace, in minibuffer select d or D then select blacklist-Workspace, will add to blacklist wrokspace in lsp-session-file  "/root/.emacs.d/.lsp-session-v1", 
M-x lsp-workspace-folders-open  ;; open workspace folder /home/myLSP/lspWorkspace



Q:- find class in (classpath) by lsp-java by [C-.]  ?
    ;; [important] ===>>  type in class scope, don not type  under package name.
    :)    type first char then C-. ==> will search inside classpath, then type [tab] to complete class name 
    :) :) type C-. at the end of the Class name will be imported full path 
     or or  
    :)    type first char then C-. ==> will search inside classpath, then type enter to complete and import it
    :)    when C-j will open class directly  even without class package exist
    :)    when C-. then tab will switch to between completion types 
    


Q:- search classpath by C-.
Q:- [ C-. ]  commands ==> company-complete
     C-M-s  company-filter-candidates
     C-h    company-show-doc-buffer
     C-s    company-search-candidates
     C-o    company-search-toggle-filtering
     M-n     company-select-next, or C-n
     M-p     company-select-previous or C-p
     return  company-complete-selection
     tab     company-complete-common, ===>> not C-i
     C-w    company-show-location
     C-s    company-search-repeat-forward
     C-r    company-search-repeat-backward


/*tab or doc [eclipse Shift+Alt+J add java doc]  or /** */then C-.
tail -f ~/.emacs.d/workspace/.metadata/.log
bookmark ==> lsp-log
or or
or or
   *lsp-log*  just c-x b to see the errors
M-x lsp--erase-session-log-buffers to delete *lsp-log*  or kill it 



;; how to view all argument with process 
watch -n 1 "ps -w w   -eo args >> /home/temp/all.txt"


;; log file 
;; (setq lsp-log-io t) ;;reads messages from server
    M-x lsp-workspace-show-log
;; see also .log::process


 M-x lsp-java-spring-initializr       Emacs frontend for https://start.spring.io/.
 M-x lsp      ;;connect to lsp-server
 C-u M-x lsp  ;;change lsp-server
 M-x lsp-restart
 M-x lsp-disconnect		        Disconnect the buffer from the language server.

 M-x lsp-java-classpath-open
 M-x lsp-java-open-super-implementation [new]
 M-x lsp-java-update-project-uris     Update WORKSPACE project uris(files and url.
 M-x lsp-java-update-server	        (must delete it first)  Update LDT LS server form internet, update it every week
 M-x lsp-restart-workspace	         (not documented)
 M-x lsp-workspace-shutdown	         Shut the workspace WORKSPACE and the language server associated    with it


;; how to run/stop java program ?
start by :  C-c C-v C-d  ==> dap-java-debug
 stop by : dap-disconnect then dap-delete-all-sessions ex:- for spring  and desktop applications
 M-x  dap-ui-many-windows-mode  disable
 M-x  dap-tooltip-mode ==> disable it in dap mode means stop tooltip by mouse 
 M-x  golden-ratio-mode   ==> for (java frame) disable can resize frames in dap-mode
 M-x  treemacs-toggle-fixed-width  unlockded ==> for all frame (local,expression,..)) can resize frames in dap-mode 


 lsof -i tcp:8080  ;; use this command to check port 8080
 M-x my-tomcat-start ;; use this command to check port ==> lsof -i tcp:8080
 M-x my-tomcat-stop
 M-x my-tomcat-restart
 M-x my-webapp-launch ;; mount classes and WebContent, c-h e messages to view all errors
 shell-command  findmnt ==> list all mounted folders, 
 M-x my-webapp-turning-off , c-h e messages to view all errors
 M-x my-lsp-java-checkstyle
 M-x hs-minor-mode then c-c @ c-c to hide  then c-c @ c-c to show

 ;; note :- 
 ;; if edit pom.xml from outside emacs then can use M-x pom to update pom.xml with lsp server,
 ;; but pom.xml by default is updated automatically
 ;; https://github.com/emacs-lsp/lsp-java/issues/135
  M-x my-pom   lsp-java-update-project-configuration ;;  update pom.xml prject, M-x my-pom inside pom.xml xml-mode not java-mode

 M-x rc       my-lsp-FDQN  ,need for java file and lsp to copy relative class with dot 
 M-x rc-dot   my-lsp-FDQN-second,can also copy relative folders with/without classes, without lsp 
 M-x rc-slash my-lsp-FDQN-third,can also copy relative folders with/without classes, without lsp


 C-c C-d C-n  [eclipse Ctrl+N] my-lsp-new-class, in global 
 C-c C-v C-Shift-W               my-toggle-lsp-ui-doc-show-and-hide ;; hide/show web javadoc, for all lsp
 C-c C-v C-w                   lsp-describe-thing-at-point ;; visit web javadoc, c-c c-v c-w  doc childframe, for all lsp
 c-c c-v w                     lsp-signature-toggle-full-docs (M-n/p to view overloading methods docs)  ==>  method(put cursor at args) view the args doc;


 C-2 T  [eclipse Ctrl+1] my-lsp-try-catch      
 C-2 t  [eclipse Ctrl+1] lsp-java-add-throws   


 ;; in lsp-treemacs-errors-mode-map not java-mode , C-c C-v C-r then C-1, but but but using c-1 c is very faster than lsp-treemacs-quick-fix
 x or c-2 (fix) [eclipse c-1 quick Fix] lsp-treemacs-quick-fix ;; like C-1 in eclipse to fix-errors , or just c-1 c in emacs instead of lsp-treemacs-quick-fix
 r or g   (refresh)                     lsp-treemacs-java-deps-refresh ;; 
 =        (show/hide ifo/warning)       lsp-treemacs-cycle-severity ;; hide/show info,warning
 tab       view list


 C-2 a        [eclipse Ctrl+1 assign all parameters to new fields] lsp-java-assign-all                 ==> Assign to new field. sum4(int x,int y) ==> will be x5=x; y5=y; put cursor inside parenthesis()
 C-2 f        [eclipse Ctrl+1 assign     parameter  to new field ] lsp-java-assign-to-field            ==> Assign to new field. generate one which over the cursor 
 C-2 p        [eclipse Ctrl+1 create parameter]                    lsp-java-create-parameter                             ==> Create parameter refactoring. create parameter form the currrent variable and put it inside parenthesis()
 C-2 l        [eclipse Ctrl+1 assign statment to local variable]   lsp-java-extract-to-local-variable  Extract local variable refactoring.[note] must select all region without semicolon,  sx.substring(0,2); will be ==>> String substring = sx.substring(0,2);
 C-2 o or c-. [eclipse Alt+Shift+S V or Ctrl+1]                    lsp-java-generate-overrides         ==> lsp-java-generate-overrides [c-j to run] ;; Generates override methods/implements methods also, or use c-. or use helm-lsp(M-x helm-mode then c-1 o then select by ctrl-space then enter ) c-j for run, enter for select/deselect
 C-2 i or c-. [eclipse Alt+Shift+S V or Ctrl+1]                    lsp-java-add-unimplemented-methods  ==> lsp-java-add-unimplemented-methods [c-j to run], or use c-. or use helm-lsp(M-x helm-mode then c-1 i then select by ctrl-space then enter )
 C-2 c        [eclipse Alt+Shift+S O]                              lsp-execute-code-action                       ==> lsp-execute-code-action [c-j to run] ;; generate constroctors with argument, and toString,hashcode,getters,setters, or  use helm-lsp(M-x helm-mode then c-1 c then select by ctrl-space then enter ) c-j to run, enter to select/deselect
 C-2 c        [eclipse ]                                           Move..

 [same]
 C-2 c        M-x lsp-execute-code-action
 C-c C-d s    M-x lsp-execute-code-action
 C-c C-d C-s  M-x lsp-execute-code-action


 C-2 m        [eclipse C-2 m]  lsp-java-extract-method
 C-2 r        [eclipse C-2 m]  lsp-rename  ;; rename class,rename method, rename variable


C-c C-d C-j C-l    [eclipse Ctrl+o] imenus     ;; view members, to update select c-c c-d c-j *Rescan* C-l ==>rescan instead of M-r in imenu[s].el (with s) 
 C-c C-d   j C-l    lsp-ui-imenu     ;; view members, must rescan after update by c-l
 M-x lsp-treemacs-symbols                       ;; view members also  c-s to search


 c-x ps         ==> format-all,  format code like eclipse code, format all sql,web,java,c,css,xml, all languages 
 C-c C-d   f    [eclipse Ctrl+Shift+F] lsp-format-buffer          ;; format code, when  (setq lsp-java-format-on-type-enabled t)  it will autoformat when type ; } enter

 C-c C-d C-f    my-lsp-find-in-project-as-grep ;; search all files in current project in (set key in global and local)
                can also search all projects in workspace  by regex

M-x projectile-ripgrep   ;; fing ripgrep in project Must install ripgrep ;; apt-get install ripgrep
M-x projectile-grep      ;; find grep  in project , like my-lsp-find-in-project-as-grep,C-c C-d C-f
M-x projectile-find-file ;; find files in project , like fiplr

                                                                   ;; variable         (setq lsp-java-format-comments-enabled t) ;; format comments also, stop it by nil
 C-c C-d C-S-F                       lsp-ui-find-workspace-symbol ;; search inside .emacs.d/workspace, but c-c c-d f(format code)

 C-c C-d i    [eclipse Ctrl+Shift+O] lsp-java-organize-imports  ;; import all classes


 
 C-c J                   [eclipse Ctrl+T ]  lsp-find-implementation ==>  create hierarchy as plate, who is implement this interface, n/p for neviage, in future must be hierarchy like eclipse (Ctrl+t)
 C-c C-j                 lsp-treemacs-implementations, same as c-c J but as tree the result  is faster than c-c J
 M-x lsp-treemacs-call-hierarchy ;;   who is calling this java members,     Show the incoming call hierarchy for the symbol at point.

Q what is this ?
lsp-java-project-resource-filters  ????
["node_modules" ".metadata" "archetype-resources" "META-INF/maven"]


 C-c C-v   m          [eclipse Ctrl+shift+G then C-. C-,] lsp-find-references ;; M-?  find referense and sort it as list, n/p to neviage
 C-c C-v C-m          lsp-treemacs-references, same as c-c c-v m but as tree

 C-c C-v n    [eclipse Ctrl+K      ] lsp-ui-find-next-reference   ;; find next referance
 C-c C-v p    [eclipse Ctrl+Shift+K] lsp-ui-find-prev-reference   ;; find pre  referance

 C-c C-v C-m  C-c C-v m  C-c C-c n/p  [eclipse Ctrl+Alt+H ] who is called this method.

 C-M-.        [eclipse Ctrl+Shift+T]      xref-find-apropos, find class name at classpath and project, just use c-. (c-m-s) to search inside classpath for any class
 C-c s        [eclipse Alt+left   ] pop-tag-mark, for return after c-c j 
 C-.          [eclipse Ctrl+Space ] company-complete ;;                  
 C-c j        [eclipse F3         ] lsp-ui-peek-find-definitions          ;; M-.  open decleration, c-c s for return
 

 C-c i        [eclipse Alt+Shift+S R] lsp-java-generate-getters-and-setters ;; getter and setter
 C-c t        [eclipse Alt+Shift+S H] lsp-java-generate-equals-and-hash-code ;; Generates an equals(), a hashCode()  method.
 C-c T        [eclipse Alt+Shift+S S] lsp-java-generate-to-string ;; Generates an equals(), a hashCode()  method.

 C-M-n      [eclipse Ctrl+shift+up  ] next method
 C-M-p      [eclipse Ctrl+shift+down] pre  method
 C-M-a      [eclipse] begging of the  method
 C-M-e      [eclipse] endding of the   method
 C-M-u/d    [eclipse] backward-up-list
 C-M-h      mark function/medtho/defun  (){}


 C-c C-v C-b  lsp-java-build-project  
 C-c C-v   r  lsp-ui-flycheck-list     ;;show errors for workspace for all project in workspace as tree
 C-c C-v C-r  lsp-treemacs-errors-list ;;show errors for workspace for all project in workspace as list
 C-c C-v C-d  dap-java-debug, but close all session by c-c c-d c-s , close *out*
 C-c C-v   d  dap-debug ;;firt M-x dap-debug-edit-template then "java Runtime config" ==>  run/debug java with vmArgs: and :args arguments then select  "Run Configuration"1 or 2 or 3
 C-c C-v C-c  dap-hydra

 C-c C-v s     (stop) dap-disconnect  ;; stop the program then kill it by dap-delete-all-sessions
 C-c C-v C-s   (stop) dap-delete-all-sessions  ;; delete-all-sessions after kill 




 
 C-c C-d g  company-yasnippet      ;; like   c-c space g  or  c-c & c-s 
 C-c C-v k  lsp-restart-workspace  ;; M-x lsp-restart-workspace

 C-c C-v l  treemacs               ;; view project as tree
 C-c C-v C-l     lsp-treemacs-java-deps-list   ;; view project as tree, view dependents, (r g) to refresh, (q) close java file
 C-c C-v C-f     lsp-treemacs-java-deps-follow ;; in java editor, view treemacs java file location as tree, use c-c c-v c-l then c-c c-v c-f


 C-;       [eclipse Shift+Alt+up  ] er/expand-region
 C-:       [eclipse Shift+Alt+down] er/contract-region
 C-s       [eclipse Ctrl+j or Ctrl+H]    find 
 C-q       [eclipse Ctrl+q]    Last Edit Location
 C-c e     [eclipse Ctrl+.]    next-error, or C-c ! n
 C-c r     [eclipse Ctrl+,]    previos-error, or C-c ! p
 C-c w                        flycheck list errors and warnings c-c ! l , same as  C-c C-v   r  lsp-ui-flycheck-list 
 C-x c     [eclipse Ctrl+Alt+down] avy-copy-line
 M-up/down [eclipse Alt+up/down  ] move lines downl/up
 C-c g     [eclipse Ctrl+Shift+R], fiplr-find-file find files in the project
 C-M-j/k   [eclipse Alt+left/right] back/forward history 
 M-;       [eclipse Ctrl+/ un/comment] c-x c-; un/comment without select region
 C-x b	   [eclipse Ctrl+E  open editor], visit opend buffers
 	   [eclipse F12 Activate Editor]
	   [eclipse F4 show hierarchy]
	   [eclipse Shift+ctrl+L  show key assist]	 
	   [eclipse Ctrl+3  quick access to every thing]



;; how to run lsp-java ?
 create the project by eclipse then generate the pom.xml
 eclipse-> project-> config-> covert to maven
 eclipse-> project-> maven -> build
 then in emacs just type M-x dap-java-debug.
 but when auto-save it will not update-generate the target/classes. must save .java manually







;;
https://emacs-lsp.github.io/dap-mode/page/features/
look at this :-
    All that needs to be done is to add a launch.json file at the project root and to run dap-debug.
    All configurations stored in the launch.json will automatically show up in the selection.
    launch.json files in DAP are just like in VSCode and even support variables

https://github.com/microsoft/vscode-java-debug/blob/main/Configuration.md

"stepFilters": {
    "classNameFilters": [
        "java.*",
        "javax.*",
        "com.sun.*",
        "sun.*",
        "sunw.*",
        "org.omg.*"
    ]
}



;; 
;; how to pass vmargs and args (vmargs class args) ?
M-x dap-debug-edit-template "java Run Configuration"
(dap-register-debug-template "MyRun2"
  (list :type "java"
        :request "launch"
        :args "hi1 hi2 hi3"
	:vmArgs "-Dtest=123"
        :cwd nil
        :host "localhost"
        :request "launch"
        :modulePaths []
        :classPaths nil
        :name "MyRun2"
        :projectName nil
        :mainClass nil)) c-x c-e  them M-x dap-debug MyRun2

;; how to debug 
;; how to debug by dap-java-debug ?
   M-x dap-breakpoint-add then
   M-x dap-java-debug or c-c c-v c-d
   M-x dap-hydra or c-c c-v c-c or icons
   then dap-ui-many-windows-mode disable many windows
   then max java-buffer c-x 1, or right click to mode line to hide the others windows locals,expression,sessions
   the others will be in other buffers C-x b
                                dap-ui-locals
                                dap-ui-expressions for instance variables
				dap-ui-sessions to view threads
notes:-
can use also
M-x dap-breakpoint-condition ==> to enter debug in condidtion is true
see video at 8:44 at
https://www.youtube.com/watch?v=Bbjxn9yVNJ8




Q:- what is classpath in lsp ?
   classpath from two arrays [.classpath]+[pom.xml]+ $CLASSPATH_ARGS   ==> M-x getenv then $CLASSPATH_ARGS

Q:- how to view full classpath ?
M-x my-lsp-show-ClassPath-for-project ;; must perform command inside the project 


;; how is the lsp-java class path 
;; important  note 
   reading .classpath  file then pom.xml Secondary, so it read classpath .classpath then pom.xml,
   so it ahmad.jar in .classpath and pom.xml (.m2 it is maven repository)  it will be imported twice in -cp like this
  -cp  /home/myLSP/lspWorkspace/Test5/target/classes
      :/home/myLSP/myPath/mariadb-java-client-2.3.0.jar
      :/home/myLSP/myPath/javax.servlet-api-4.0.1.jar
      :/root/.m2/repository/javax/servlet/javax.servlet-api/4.0.1/javax.servlet-api-4.0.1.jar
      :/root/.m2/repository/org/mariadb/jdbc/mariadb-java-client/2.3.0/mariadb-java-client-2.3.0.jar first.Hi


[auto-genrated by M-x my-lsp-generate-javadoc-html]
[auto-genrated by M-x my-lsp-generate-javadoc-html]
  javadoc  -d /home/myLSP/myPath/myDoc/ -classpath /root/.m2/repository/org/apache/commons/commons-lang3/3.8.1/commons-lang3-3.8.1.jar:/root/.m2/repository/javax/servlet/javax.servlet-api/4.0.0/javax.servlet-api-4.0.0.jar:/root/.m2/repository/org/mariadb/jdbc/mariadb-java-client/2.5.1/mariadb-java-client-2.5.1.jar  -sourcepath /home/myLSP/lspWorkspace/web03/src/  -subpackages webServlet:com 
;; javadoc example ;; cd src/                                                                                                                                         cd src/                   
[work]==>  javadoc  -d /home/myLSP/myPath/myDoc  -classpath /home/myLSP/myPath/mariadb-java-client-2.3.0.jar:/home/myLSP/myPath/javax.servlet-api-4.0.1.jar   -sourcepath ./   -subpackages *
[work]==>  javadoc  -d /home/myLSP/test/  -classpath /home/myLSP/myPath/mariadb-java-client-2.3.0.jar:/home/myLSP/myPath/javax.servlet-api-4.0.1.jar   -sourcepath ./             -subpackages first 
[work]==>  javadoc  -d /home/myLSP/test/  -classpath /home/myLSP/myPath/mariadb-java-client-2.3.0.jar:/home/myLSP/myPath/javax.servlet-api-4.0.1.jar   -sourcepath ./             -subpackages first:ok // more than package seperated by :
[work]==>  javadoc  -d [destination dir]  -classpath [classpath:classpath]                                                                              -sourcepath [source dir]   -subpackages [package1:subpackage:subpackage]




;; how to setup project without lsp config ?
   by modification of .settings folder of project in the workspace, like this /home/myLSP/lspWorkspace/Test5/.settings


;; how can exclude step filter by command
   1- jdb then exclude com.sun.*,com.oracle.*,java.*,javax.*,jdk.*,micro.*,netscape.*,org.*,sun.*,
   or
   2- java  -Xrunjdwp:transport=dt_socket,address=localhost:46019,server=n,suspend=y
 
   you need to run 1+2 togathers to filter packages 

   ex:-  java -Xdebug -Xrunjdwp:transport=dt_socket,server=y,suspend=n,address=1044 ;;(all java version)  
   ex:-  java    -agentlib:jdwp=transport=dt_socket,server=y,suspend=y,address=1044 ;;(java 5 and above) 
notes :- jdwp ==> remote debug
      :- (java address:port) can be controlled by (jdb -attach address:port)
       look at this  https://docs.oracle.com/javase/7/docs/technotes/tools/windows/jdb.html 
       look at this  https://docs.oracle.com/javase/7/docs/technotes/tools/windows/jdb.html 
       look at this  https://docs.oracle.com/javase/7/docs/technotes/tools/windows/jdb.html 
    example:- 
    C:\> java -agentlib:jdwp=transport=dt_shmem,address=jdbconn,server=y,suspend=n MyClass
    You can then attach jdb to the VM with the following commmand:
    C:\> jdb -attach jdbconn 
[this work for me] ;; server=y and suspend=y to work
[this work for me] ;; server=y and suspend=y to work

                    cd src/bin
===>> command ===>> java -Xdebug -Xnoagent -Djava.compiler=NONE -Xrunjdwp:transport=dt_socket,address=localhost:4444,server=y,suspend=y -Dfile.encoding=UTF-8 -cp /home/myLSP/lspWorkspace/Test5/target/classes:/home/myLSP/myPath/mariadb-java-client-2.3.0.jar:/home/myLSP/myPath/javax.servlet-api-4.0.1.jar:/root/.m2/repository/javax/servlet/javax.servlet-api/4.0.1/javax.servlet-api-4.0.1.jar:/root/.m2/repository/org/mariadb/jdbc/mariadb-java-client/2.3.0/mariadb-java-client-2.3.0.jar first.Hi
then
==>> command ===>>  jdb -attach localhost:4444
stop in firt.Hi.main
(in jdb step)   ===>> step in
(in jdb step up)===>> step out
(in jdb next)   ===>> step over
;; VM Started: *** Reading commands from /root/.jdbrc automatically


;; how to install lsp-java dap-java
;; M-x list-packages update =>  lsp-treemacs,lsp-mode,lsp-java,lsp-ui,company-lsp,imenus,dap-mode,treemacs,projectile,hydra
   M-x list-packages 
     use-package ,projectile ,hydra ,lsp-treemacs ,lsp-mode ,lsp-java ,lsp-ui ,company-lsp ,imenus ,dap-mode ,treemacs ,Spring Initializr ,company-capf ,
   then then 
    1- apt-get install spinner when install lsp-mode and lsp-java
    2- # how to add source of jdk-11 to emacs, so i can use c-c j to visit source code and see doc
;;   to install or  update jdk src doc  just type 
;;   root@zink:~# sudo aptitude  install  openjdk-11-jdk  openjdk-11-doc openjdk-11-source 
;;   the result will be 
;;   openjdk-11-jre-zero
;;   openjdk-11-jdk
;;   openjdk-11-jdk-headless
;;   openjdk-11-demo
;;   openjdk-11-jre
;;   openjdk-11-dbg
;;   openjdk-11-jre-headless
;;   openjdk-11-source   ===>>>  it will be as src.zip: /usr/lib/jvm/java-11-openjdk-amd64/src.zip
;;   openjdk-11-doc
;;  
;;  then restart computer
    then restart computer 


;; how can stop completion of packages like java.awt.* ?
   in lsp-java.el ==> filter completion packages
    try to import java.awt. => nothing will shown
   (defcustom lsp-java-completion-filtered-types ["java.awt.*" "com.sun.*"]
     "Defines the type filters. All types whose fully qualified name
     matches the selected filter strings will be ignored in content
   assist or quick fix proposals and when organizing imports. For
   example 'java.awt.*' will hide all types from the awt packages."
     :type 'vector)

   
   now you can import java.awt.*
   (setq lsp-java-completion-filtered-types  [ "com.sun.*"]) ;; now you can import java.awt.
(setq mylistx [a b c]) ;; list
(setq myarrayx [foo bar baz]) ;; array
(setq myarrayx []) ;; empty array



;; get useful info 
   (lsp-java--ls-command) ("java" "-Declipse.application=org.eclipse.jdt.ls.core.id1" "-Dosgi.bundles.defaultStartLevel=4" "-Declipse.product=org.eclipse.jdt.ls.core.product" "-Dlog.protocol=true" "-Dlog.level=ALL" "-noverify" "-Xmx1G" "-XX:+UseG1GC" "-XX:+UseStringDeduplication" "-jar" "/root/.emacs.d/eclipse.jdt.ls/server/plugins/org.eclipse.equinox.launcher_1.5.500.v20190715-1310.jar" ...)
   (lsp-java--get-root) "/home/myLSP/lspWorkspace/Test5/"


;; [work]
;; finally it is work javafx module
;; finally it is work javafx
;; finally it is work javafx
1- aptitude install openjfx
2-
(dap-register-debug-template "Run4"
  (list :type "java"
        :request "launch"
        :args ""
	:vmArgs "--module-path=/usr/share/openjfx/lib --add-modules=ALL-MODULE-PATH"
        :cwd nil
        :stopOnEntry :json-false
        :host "localhost"
        :request "launch"
        :modulePaths []
        :classPaths nil
        :name "Run4"
        :projectName nil
        :mainClass nil))  c-x c-e evaluate , then M-x dap-debug 
3- in .classpath put but not at the end of file .classpath
 note :- put tags to .classpth put  not at the end, put it any where 
	<!-- javafx  -->
       <classpathentry kind="lib" path="/usr/share/openjfx/lib/javafx.base.jar"      sourcepath="/usr/share/openjfx/lib/src.zip"></classpathentry>
       <classpathentry kind="lib" path="/usr/share/openjfx/lib/javafx.controls.jar"  sourcepath="/usr/share/openjfx/lib/src.zip"></classpathentry>
       <classpathentry kind="lib" path="/usr/share/openjfx/lib/javafx.fxml.jar"      sourcepath="/usr/share/openjfx/lib/src.zip"></classpathentry>
       <classpathentry kind="lib" path="/usr/share/openjfx/lib/javafx.graphics.jar"  sourcepath="/usr/share/openjfx/lib/src.zip"></classpathentry>
       <classpathentry kind="lib" path="/usr/share/openjfx/lib/javafx.media.jar"     sourcepath="/usr/share/openjfx/lib/src.zip"></classpathentry>
       <classpathentry kind="lib" path="/usr/share/openjfx/lib/javafx.swing.jar"     sourcepath="/usr/share/openjfx/lib/src.zip"></classpathentry>
       <classpathentry kind="lib" path="/usr/share/openjfx/lib/javafx.web.jar"       sourcepath="/usr/share/openjfx/lib/src.zip"></classpathentry>
       <!-- end of javafx -->
       or or or
       or or or
       or or or
              <!-- start of javafx  -->
        <classpathentry kind="lib" path="/home/myLSP/myModules/javafx11/javafx-base-11.jar"      sourcepath="/home/myLSP/myModules/javafx11/src.zip"></classpathentry> 
        <classpathentry kind="lib" path="/home/myLSP/myModules/javafx11/javafx-controls-11.jar"  sourcepath="/home/myLSP/myModules/javafx11/src.zip"></classpathentry> 
        <classpathentry kind="lib" path="/home/myLSP/myModules/javafx11/javafx-fxml-11.jar"      sourcepath="/home/myLSP/myModules/javafx11/src.zip"></classpathentry> 
        <classpathentry kind="lib" path="/home/myLSP/myModules/javafx11/javafx-graphics-11.jar"  sourcepath="/home/myLSP/myModules/javafx11/src.zip"></classpathentry> 
        <classpathentry kind="lib" path="/home/myLSP/myModules/javafx11/javafx-media-11.jar"     sourcepath="/home/myLSP/myModules/javafx11/src.zip"></classpathentry> 
        <classpathentry kind="lib" path="/home/myLSP/myModules/javafx11/javafx-swing-11.jar"     sourcepath="/home/myLSP/myModules/javafx11/src.zip"></classpathentry> 
        <classpathentry kind="lib" path="/home/myLSP/myModules/javafx11/javafx-web-11.jar"       sourcepath="/home/myLSP/myModules/javafx11/src.zip"></classpathentry> 
          <!-- end of javafx -->
	  ;; must install apt-get install openjfx to work, not just the jars will run javafx 
(dap-register-debug-template "Run5"
  (list :type "java"
        :request "launch"
        :args ""
	:vmArgs "--module-path=/home/myLSP/myModules/javafx11 --add-modules=ALL-MODULE-PATH"
        :cwd nil
        :stopOnEntry :json-false
        :host "localhost"
        :request "launch"
        :modulePaths []
        :classPaths nil
        :name "Run5"
        :projectName nil
        :mainClass nil))


4- no need, but be carefull 
you can also add javafx for maven also, but be aware that is the jars will use maven jars .m2 not jars in  /usr/share/openjfx/lib/
and in pom.xml put
        <dependency>
            <groupId>org.openjfx</groupId>
            <artifactId>javafx-controls</artifactId>
            <version>11.0.2</version>
        </dependency>
5- look at the command line will be like this 
;; to view full command
;; how to view all argument with process 
  watch -n 1 "ps -w w   -eo args >> /home/temp/all.txt"
 this is the line which worked of module javafx
root             21811 100.0  2.4  15:33 00:06 /usr/lib/jvm/java-11-openjdk-amd64/bin/java
-Xdebug -Xnoagent -Djava.compiler=NONE 
-Xrunjdwp:transport=dt_socket,address=localhost:36693,server=n,suspend=y
--module-path=/usr/share/openjfx/lib
--add-modules=ALL-MODULE-PATH
-Dfile.encoding=UTF-8
-cp /home/myLSP/lspWorkspace/Test5/target/classes:/home/myLSP/myPath/mariadb-java-client-2.3.0.jar:/home/myLSP/myPath/javax.servlet-api-4.0.1.jar:/root/.m2/repository/javax/servlet/javax.servlet-api/4.0.1/javax.servlet-api-4.0.1.jar:/root/.m2/repository/org/mariadb/jdbc/mariadb-java-client/2.3.0/mariadb-java-client-2.3.0.jar:/root/.m2/repository/org/openjfx/javafx-controls/11.0.2/javafx-controls-11.0.2.jar:/root/.m2/repository/org/openjfx/javafx-controls/11.0.2/javafx-controls-11.0.2-linux.jar:/root/.m2/repository/org/openjfx/javafx-graphics/11.0.2/javafx-graphics-11.0.2.jar:/root/.m2/repository/org/openjfx/javafx-graphics/11.0.2/javafx-graphics-11.0.2-linux.jar:/root/.m2/repository/org/openjfx/javafx-base/11.0.2/javafx-base-11.0.2.jar:/root/.m2/repository/org/openjfx/javafx-base/11.0.2/javafx-base-11.0.2-linux.jar
first.TestFx




# to compare everyting in two jars
# to compare everyting in two jars
# to compare everyting in two jars
extract two jars, decompil all classes to java then ztree-diff 
1- in dired ==> !unzip or & unzip
2- find . -iname '*.class' -execdir jad -s java  {} +   ;;;;;; replace .jad to .java
3- ztree-diff
M-x ztree-diff, then ((h) ==> hide equal files),((r) => re ztree-diff current folder),((d)==> ediff-file current files like githut -+)
use jadx or jadx-gui instead of jad
jadx /home/downloads/me.jar  -d  /home/downloads/exportSourceCode  ;; must absolute path

M-x ztree, x for expand ==> view dir as tree, 
           xx for (expand all)
M-x ztree-diff, then ((h) ==> hide equal files),((r) => re ztree-diff current folder),((d)==> ediff-file current files like githut -+)
M-x ztree-diff-toggle-show-equal-files  ==> hide/show equal files ==> press only (h)
M-x ztree-diff-toggle-show-orphan-files ==> hide/show orphan files
(kbd "h")  ztree-diff-toggle-show-equal-files
(kbd "d")  ztree-diff-simple-diff-files ==>(ediff-files current file only like githut -+)
(kbd "H")  ztree-diff-toggle-show-filtered-files
(kbd "D")  ztree-diff-delete-file       ==> (delete current file)
(kbd "C")  ztree-diff-copy              ==> (copy current file from left/right to left/righ)
(kbd "v")  ztree-diff-view-file         ==> (open current file/folder)
(kbd "r")  ztree-diff-partial-rescan    ==> (re ztree-diff current folder)
(kbd "R")  ztree-diff-full-rescan       ==> (ztree-diff full)


;; merge jars into one jar
 mkdir tmp
 cd tmp
 unzip -ou  ../aa1.jar     ;; -ou o->override u->update
 unzip      ../aa2.jar
 unzip      ../aa3.jar
 cd ..
 jar -cvf combined.jar -C tmp .


;; how to remove ^M in files ?
by command dos2unix A.txt

change end line for unix and windows ???
M-x set-buffer-file-coding-system, then give a value of “mac”, “dos”, “unix
C-x Enter  f  =>>  dos or unix (buffer)
C-x Enter  F  =>>  dos or unix (file)
C-x return f  =>>  dos or unix (buffer)
or or or
by mouse click  U in status bar to view current file coding system
by mouse click  : in status bar to change coding system mac dos unix
                DOS ==> c-x return f ==> undecided-dos
                Mac ==> c-x return f ==> undecided-mac
                :   ==> c-x return f ==> undecided-unix

Q:- how to describe current coding system for file ?
M-x describe-current-coding-system 


;; search  .gz files by zgrep
gzip -r folder #  compress files in folder one by one  by gzip
find . -iname '*.gz'  -type f -exec zgrep --color -nHi -a "exit" {} +


;; what is the differance between 2 jar files
[important======> compare files and methods, not contents of files]
[important======> compare files and methods, not contents of files]
[important======> compare files and methods, not contents of files]
apt-get install jardiff
jardiff 
jardiff -f ecj-4.4.2.jar -t ecj-4.7.3a-from-tomcat9.jar -o html -O output.html
jardiff -f ecj-4.4.2.jar -t ecj-4.7.3a-from-tomcat9.jar -o xml -O output.xml


# search jar,zip files by zipgrep
# zipgrep search inside *.zip or *.jar but cant visit file
{} the matching file
-execdir run command in the same file dir
-exec    run command here
apt-get install xz-utils - XZ-format compression utilities; for zgrep 
find . -iname '*.zip'  -exec zipgrep  -nHi  -e "exit" {} +
find . -iname '*.jar'  -exec zipgrep  -nHi  -e "exit" {} +
find . -iname '*.pdf'  -exec pdfgrep  -nHi  -e "exit" {} +


# convert all jar to java classes
in dired ==> !unzip or & unzip 
find . -iname '*.class' -execdir jad   {} \;
# replace .jad to .java
find . -iname '*.class' -execdir jad -s java  {} +


# check tomcat apache connected port 
# check mysql  port 
ss -tupln

#  how to view all argument with process 
  watch -n 1 "ps -w w   -eo args >> /home/temp/all.txt"

# check maria mysql process 
ps aux | grep mysql


# view all process with full argument every 1 second and record it in hi8.txt file
# in terminal not in emacs 
while [ 1 ] ; do ps -aux >> hi8.txt ;sleep 1 ; done


# you can see that httpd (Apache) listens on port 80
lsof -i tcp:80

# List programs with open ports and connections
lsof -i -P
lsof -i -P -n

;; check ports
ss -tupln (l for listening)

# list opend files by java command
lsof -c java


===================  mvn  ===================    
;; del this line in pom.xml
		<sourceDirectory>src</sourceDirectory>


;; maven in 5 minutes

;; how to get help from mvn
   mvn dependency:help

;;  view all project dependencies
    mvn dependency:tree
    mvn dependency:list

;; how to generate mvn site in target/site by two steps 
1- add this to pom.xml
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-site-plugin</artifactId>
				<version>3.7.1</version>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-project-info-reports-plugin</artifactId>
				<version>3.0.0</version>
			</plugin>
2- then use the command 
    mvn site 



;; mvn
Q:- update repository after adding dependency to POM.xml
mvn install (or mvn package)
mvn clean package 
mvn clean install

;; mvn
;; convert pom.xml (maven) to ===>>> .classpath in eclipse , and generate .project file also
mvn eclipse:eclipse -Dwtpversion=2.0       ;; for web project 
mvn eclipse:eclipse                        ;; for desktop project and web also
mvn eclipse:eclipse -DdownloadSources=true ;; download source code with jars
https://www.mkyong.com/struts2/struts-2-hello-world-example/
https://docs.geotools.org/latest/userguide/build/maven/eclipse.html
https://www.mkyong.com/maven/no-more-mvn-eclipseeclipse-whats-next/ (plugin mvn is retired, not mvn command)
;;; important notes :-
;;; important notes :-
;;; no need to (mvn Eclipse:eclipse) because lsp-java will generate  automatically .classpath .settings .project 



;; mvn
# apache tomcat ignore (classpth) environment varialbe
WEB-INF/lib        ==>> only visible to the web application that loads them
$CATALINA_HOME/lib ==>> These resources are visible to all applications and to Tomcat.
;; so the fast solution is to copy maven dependencies to WebContent/WEB-INF/lib
;; How to use maven just to copy dependencies 
mvn dependency:copy-dependencies -DoutputDirectory=WebContent/WEB-INF/lib
mvn dependency:copy-dependencies -DoverWriteReleases=false -DoverWriteSnapshots=false  -DoverWriteIfNewer=true   -DoutputDirectory=WebContent/WEB-INF/lib
// i can convert from pom.xml to mvn command line by adding -D properties as above
// above commands are same because overWriteReleases=false(default), so no need to put it here.
// or can add it to the pom.xml by :-
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-dependency-plugin</artifactId>
				<version>3.1.1</version>
				<executions>
					<execution>
						<id>copy-dependencies</id>
						<phase>package</phase>
						<goals>
							<goal>copy-dependencies</goal>
						</goals>
						<configuration>
							<outputDirectory>${project.basedir}/WebContent/WEB-INF/lib</outputDirectory>
						 	<overWriteReleases>false</overWriteReleases>
							<overWriteSnapshots>false</overWriteSnapshots>
							<overWriteIfNewer>true</overWriteIfNewer>
						</configuration>
					</execution>
				</executions>
			</plugin>


;;; 
mvn -q  ===> view only error level 

Q:-where maven jars downloaded (repository)? 
~/.m2/ 
Q;- how to create project by maven  
mvn archetype:generate 


Q:-  add all jars of dependencies in target/myjar.jar  by this command mvn 
mvn assembly:assembly -DdescriptorId=jar-with-dependencies 
or by plugin build tag 
to run it use java -jar my.jar MainClass or write Main-Class: package/MainClass in Manifest 


Q:- Maven: Command to update repository after adding dependency to POM
mvn install (or mvn package)

Q;- run maven with debug -X 
   mvn -X clean package

;; how to create project by maven using command line 
;; https://maven.apache.org/guides/getting-started/maven-in-five-minutes.html

;; list all maven already archive then choose one of them 
   mvn archetype:generate
;; or fill it by yourself 
   mvn archetype:generate -DgroupId=com.mycompany.app -DartifactId=my-app -DarchetypeArtifactId=maven-archetype-quickstart -DinteractiveMode=false
;; then see the pom.xml
   cd my-app
;; view all files as tree by command  find .
;; then build project by command , to generate target folder
   mvn package ;; not mvn only
;; run project by command, no diff by using dot or /
  java -cp target/my-app-1.0-SNAPSHOT.jar com.mycompany.app.App
  java -cp target/my-app-1.0-SNAPSHOT.jar com/mycompany/app/App
  java -cp target/my-app-1.0-SNAPSHOT.jar com.mycompany/app/App
;; clean: cleans up artifacts created by prior builds
    mvn clean dependency:copy-dependencies package


;; build src/pom.xml and generate folder target
   M-x jdee-maven-build      => mvn package
   M-x jdee-maven-unit-test  => mvn test


;; Maven Phases
mvn  package		: take the compiled code and package it in its distributable format, such as a JAR.
mvn  test		: test the compiled source code using a suitable unit testing framework. These tests should not require the code be packaged or deployed
mvn  clean		: cleans up artifacts created by prior builds
 mvn  site		: generates site documentation for this project
mvn  validate		: validate the project is correct and all necessary information is available
mvn  compile		: compile the source code of the project
mvn  integration-test	: process and deploy the package if necessary into an environment where integration tests can be run
mvn  verify		: run any checks to verify the package is valid and meets quality criteria
mvn  install		: install the package into the local repository, for use as a dependency in other projects locally
mvn  deploy		: done in an integration or release environment, copies the final package to the remote repository for sharing with other developers and projects.


Q: how can  change all default directories of maven

      <build>
      <directory>target</directory>
      <outputDirectory>target/classes</outputDirectory>
      <finalName>${artifactId}-${version}</finalName>
      <testOutputDirectory>target/test-classes</testOutputDirectory>
      <sourceDirectory>src/main/java</sourceDirectory>
      <scriptSourceDirectory>src/main/scripts</scriptSourceDirectory>
      <testSourceDirectory>src/test/java</testSourceDirectory>
      <resources>
      <resource>
      <directory>src/main/resources</directory>
      </resource>
      </resources>
      <testResources>
      <testResource>
      <directory>src/test/resources</directory>
      </testResource>
      </testResources>
      </build>

Q;- generate one jar and put Manifest main class

  <build>
    <!-- add all jars of dependencies in target/myjar.jar  by this command mvn -->
    <!-- mvn assembly:assembly -DdescriptorId=jar-with-dependencies -->
    <!-- or by plugin build tag as above  -->
    <!-- to run it use java -jar my.jar MainClass or write Main-Class: package/MainClass in Manifest -->
    <plugins>
      <!-- any other plugins -->
      <plugin>
        <artifactId>maven-assembly-plugin</artifactId>
        <!-- <artifactId>maven-shade-plugin</artifactId> -->
        <executions>
          <execution>
            <phase>package</phase>
            <goals>
              <!-- <goal>shade</goal> -->
              <goal>single</goal>
            </goals>
          </execution>
        </executions>
        <configuration>
	  <!-- add  all dependencies in one jar file  -->
          <descriptorRefs>
            <descriptorRef>jar-with-dependencies</descriptorRef>
          </descriptorRefs>
	  <!-- Manifest main class -->
	  <archive>
	    <manifest>
              <mainClass>mySpring.UserDao</mainClass>
	    </manifest>
	  </archive>
        </configuration>
      </plugin>
    </plugins>

    <!-- change all default directories  -->
    <!-- change all default directories  -->
    <directory>target</directory>
    <outputDirectory>target/classes</outputDirectory>
    <finalName>${artifactId}-${version}</finalName>
    <testOutputDirectory>target/test-classes</testOutputDirectory>
    <!-- src/main/java  -->
    <sourceDirectory>src/mySpring</sourceDirectory>
    <scriptSourceDirectory>src/main/scripts</scriptSourceDirectory>
    <testSourceDirectory>src/test/java</testSourceDirectory>
    <!-- src/main/resources for xml files  change it to src/resources  -->
    <resources>
      <resource>
	<directory>src/resources</directory>
      </resource>
    </resources>
    <testResources>
      <testResource>
        <directory>src/test/resources</directory>
      </testResource>
    </testResources>
  </build>


Q; display Dependency tree of jars of project
   mvn dependency:tree
   mvn dependency:list



_______________________________________________________________
Q:- generate war file by
    mvn clean package install

      <plugin>
        <artifactId>maven-war-plugin</artifactId>
        <version>3.2.1</version>
        <configuration>
          <warSourceDirectory>WebContent</warSourceDirectory>
        </configuration>
      </plugin>

_______________________________________________________________


_______________________________________________________________

Q: copy dependencies to WebContent/WEB-INF/lib
   by mvn clean package install 

      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-dependency-plugin</artifactId>
        <version>3.1.1</version>
        <executions>
          <execution>
            <id>copy-dependencies</id>
            <phase>package</phase>
            <goals>
              <goal>copy-dependencies</goal>
            </goals>
            <configuration>
              <outputDirectory>
              WebContent/WEB-INF/lib</outputDirectory>
              <overWriteReleases>false</overWriteReleases>
              <overWriteSnapshots>false</overWriteSnapshots>
              <overWriteIfNewer>true</overWriteIfNewer>
            </configuration>
          </execution>
        </executions>
      </plugin>

_______________________________________________________________


Q:-  <!-- generage javadoc in target/site/  by mvn clean package javadoc:javadoc-->
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-javadoc-plugin</artifactId>
        <version>3.1.1</version>
        <executions>
          <execution>
            <phase>prepare-package</phase>
            <goals>
              <goal>javadoc</goal>
            </goals>
          </execution>
        </executions>
        <configuration>
          <!--  optional  javadoc command -->
          <javadocExecutable>/usr/bin/javadoc</javadocExecutable>
          <!-- to show the private methods in the javadoc -->
          <show>private</show>
        </configuration>
      </plugin>


then mvn clean package javadoc:javadoc
use M-x my-maven-javadoc

_______________________________________________________________
Q: hot to run web application by maven mvn pom.xml only without need to server apache  tomcat
;; 1- add this plugin to pom.xml

    <plugin>
    <groupId>org.codehaus.cargo</groupId>
    <artifactId>cargo-maven2-plugin</artifactId>
    <version>1.7.9</version>
      <configuration>
        <container>
          <containerId>tomcat9x</containerId>
          <type>embedded</type>
        </container>
      </configuration>
    </plugin>

;; 2- run  command 
mvn org.codehaus.cargo:cargo-maven2-plugin:run
or mvn cargo:run
stop it by ctrl-C or by close the buffer *compilation* M-x mvn cargo:run
 <!-- the full command is mvn clean package cargo:run -->

;; 3- it will be in localhost:8080
 http://localhost:8080/web03/User/pages/index.html
_______________________________________________________________



=================== end  mvn  ===================    


 ======================= end of lsp zobda  ========================== 
 ======================= end of lsp zobda  ========================== 
 ======================= end of lsp zobda  ========================== 
 ======================= end of lsp zobda  ========================== 
 ======================= end of lsp zobda  ========================== 
 ======================= end of lsp zobda  ========================== 
 ======================= end of lsp zobda  ========================== 






======  [ start of  lsp-java fix errors ]  =========
======  [ start of  lsp-java fix errors ]  =========
======  [ start of  lsp-java fix errors ]  =========
======  [ start of  lsp-java fix errors ]  =========				  


;; how lsp work witho mods ?
;; in .emacs like this 
(add-to-list 'auto-mode-alist '("\\.html?\\'" . web-mode))
(add-to-list 'auto-mode-alist '("\\.jsp\\'" . web-mode))
(add-to-list 'auto-mode-alist '("\\.xml?\\'" . nxml-mode))
(add-to-list 'auto-mode-alist '("\\.java?\\'" . java-mode))

(use-package lsp-mode
  :hook (
	 ((nxml-mode web-mode java-mode) . lsp)
	 (lsp-mode                       . company-mode)
	 )


;; list all classpath ?
   classpath from two arrays [.classpath]+[pom.xml]+ $CLASSPATH_ARGS   ==> M-x getenv then $CLASSPATH_ARGS
   put it inside main class then execute  M-: 
(lsp-send-execute-command "vscode.java.resolveClasspath" (vector main-class project-name))
(lsp-send-execute-command "vscode.java.resolveClasspath" (vector "AddLeagueAction" "web03"))
(lsp-send-execute-command "vscode.java.resolveClasspath" (vector ""                "web01"))  ;; it is works without classname


;;[not done]
set it as C-c c-d c-F
   ("C-c C-d C-f"  .  lsp-ui-find-workspace-symbol) ;; search inside ~/.emacs.d/workspace not works as expected, but c-c c-d f(format code)

;;[not done] set it as c-c c-d c-f as global 
(defun my-lsp-find-in-project-as-grep ()
"search inside all files in project like this 
 /home/myLSP/lspWorkspace/web03/
 in grep use wildcards 
 "
(interactive)
 (let (
  ;; "/home/myLSP/lspWorkspace/web03/"
  ;; find '/home/myLSP/lspWorkspace/web03' -iname '*'  -type f -exec grep  --color  -nHi -e 'leagueList' {} +
  (my-lsp-project-name-for-search (format "%s"    (replace-regexp-in-string "/src/.*"  "" (expand-file-name ""))))
  (my-lsp-project-search-for-word-as-grep (format "%s" (read-string "find as grep : ")))  
  ) ;; end of let definition
  (find-grep (format "find '%s' -iname '*'  -type f -exec grep  --color  -nHi -e '%s' {} +" my-lsp-project-name-for-search   my-lsp-project-search-for-word-as-grep))
  ) ;; end of let
 ) ;; end of my-lsp-generate-javadoc-html
(global-set-key (kbd "C-c C-d C-f")   'my-lsp-find-in-project-as-grep)


;; [work]
(defun my-lsp-show-ClassPath-for-project()
"retrun classpath for project name as two arrays, .classpath and pom.xml and CLASSPATH_ARGS from M-x getenv
 it is works without classname, just by project name
 to print the full classpath: seperated by color just type M-x my-lsp-generate-javadoc-html "
 (interactive)
 (message (kill-new (format "%s" (lsp-send-execute-command "vscode.java.resolveClasspath" (vector "" (read-string "project-name : ")))))))



;; [work]
;; (regexp-quote "([] [") ==> to ignore special char 
;; (format "%s")  ==> to convert list,array to string
;;
(defun my-lsp-generate-javadoc-html ()
"generate javadoc html for package in /home/myLSP/myPath/myDoc/
 it also print full commad with full classpath: seperated by colon
 just type C-h e in Messages  to show the full command "
(interactive)
 (let (
  (my-classpath-for-project-temp  (replace-regexp-in-string " "  ":" 
    (replace-regexp-in-string (concat (regexp-quote "([") "\\|"  
                                      (regexp-quote "] [") "\\|" 
                                      (regexp-quote "])")  )  "" 
                     (format "%s" (lsp-send-execute-command "vscode.java.resolveClasspath" (vector ""  (read-string "project-name : ")))))))

  ;; "/home/myLSP/lspWorkspace/web03/src/"
  (my-lsp-project-name-suggest (format "%s"    (replace-regexp-in-string "/src/.*"  "/src/" (expand-file-name ""))))

   ;; more than one package must seperated by colon :  package1:differentPackage2
   ;; can use also star for all packages, but must packages names without filename like package1 package2 struts.xml
  (my-lsp-package-name (format "%s" (read-string "package-name : ")))  
  ) ;; end of let definition

  (shell-command "rm -rf  /home/myLSP/myPath/myDoc/*")  ;; remove contents of myDoc 
  (message       (format "javadoc  -d /home/myLSP/myPath/myDoc/ -classpath %s  -sourcepath %s  -subpackages %s "  my-classpath-for-project-temp  my-lsp-project-name-suggest  my-lsp-package-name))
  (shell-command (format "javadoc  -d /home/myLSP/myPath/myDoc/ -classpath %s  -sourcepath %s  -subpackages %s "  my-classpath-for-project-temp  my-lsp-project-name-suggest  my-lsp-package-name))
  (w3m-find-file "/home/myLSP/myPath/myDoc/index.html")

  ) ;; end of let
) ;; end of my-lsp-generate-javadoc-html






;; wow
;;ls-boot is experimental, not complete yet, spring covers application.properties, application.yml and .java files.
;;  (setq lsp-java-boot-enabled nil) as default,
(defun my-toggle-spring-boot-server-on-off ()
" toggle spring ls-boot server on off, this is not restart
  if it is lsp-java-boot-enabled t,
  then can use M-x lsp-workspace-shutdown to stop ls-boot,jdtls,xmlls servers
  then can use M-x lsp-workspace-restart to restart ls-boot,jdtls,xmlls servers
"
(interactive)
(if (eq lsp-java-boot-enabled nil) ;; ls-boot server is nil
    ;; if 
    (progn 
     (setq lsp-java-boot-enabled  t)
     (lsp) ;;call M-x lsp 
    )  
  ;; else 
  (progn
   (setq lsp-java-boot-enabled nil))
  (lsp) ;;call M-x lsp 
) ;; end-if

(message "ls-boot  status is %s" lsp-java-boot-enabled )

) ;; end defun


(defalias 'boot  'my-toggle-spring-boot-server-on-off) ;; 
;; M-x my-boot ;; toggle spring ls-boot server on off, this is not restart, to shutdown server jdtls,ls-boot,xmlls  use M-x lsp-workspace-shutdown



;; apt-get update generate error
repository will be avaliable after 18 hours 3 minutes and 22 second 
the solution is fixed by set the time correctly by keep synchronization from internet 
[fix the time clock] ;;



;; fix any problem  or use
;; M-x my-cleaner-lsp-temp
   remove ~/.emacs.d/workspace/       ;; remove it when no c-j work
   remove ~/.emacs.d/.lsp-session-v1  ;; this will duplicate projects 
   remove /root/.emacs.d/.cache/treemacs-persist  ;; this will view old project in treemacs






   ;; download project from spring Initializr by command line  https://github.com/spring-io/initializr
     $ curl https://start.spring.io/starter.zip -o demo.zip
     $ curl https://start.spring.io/starter.zip -d dependencies=web,actuator -d language=java -d type=maven-project -d baseDir=demo -o demo.zip
     $ wget  -O demo.zip   "https://start.spring.io/starter.zip?type=maven-project&language=java&groupId=com.example.hi&artifactId=demohi&packaging=jar&bootVersion=2.2.1.RELEASE&baseDir=demohi&dependencies=web"
     $ wget -U Mozilla -O demo.zip   "https://start.spring.io/starter.zip?type=maven-project&language=java&groupId=com.example.hi&artifactId=demohi&packaging=jar&bootVersion=2.2.1.RELEASE&baseDir=demohi&dependencies=web"
  
   ;; error in M-x lsp-java-spring-initializr
    the error comes from this line, sometimes works and sometimes not work,

;;;;;;;;;;;;;;;;;;;;;;;;;;;
https://debbugs.gnu.org/cgi/bugreport.cgi?bug=34341
it is a bug in emacs 26.1 and fixed in emacs 26.3 and 27.1
bug message "400 Bad Request: The plain HTTP request was sent to HTTPS port”
bug in functions 
(url-copy-file)
(url-retrieve-synchronously)
;;;;;;;;;;;;;;;;;;;;;;;;;;


;;     (url-copy-file download-url temp-file  t) 
     (url-copy-file    "https://start.spring.io/starter.zip?type=maven-project&language=java&groupId=com.example.hi&artifactId=demohi&packaging=jar&bootVersion=2.2.1.RELEASE&baseDir=demohi&dependencies=web"   "a1.zip" t)

     ;; the url is very sophisticated, so (url-copy-file download-url temp-file  t)  cant download it
     :) :)  the solution is to substitute  (url-copy-file url file t) by :-  wget or curl

     ;;  'must add single quote ' ==> wget -O file.zip 'download-url' must has single quote to work 
     (shell-command (format "wget   -O  %s  '%s' " temp-file download-url))  ;; --no-verbose means no output message except error message
     (shell-command (format "curl   -o  %s  '%s' " temp-file download-url))  ;; --silent means no output message except error message


;;;;;;
 ;; if else ==> if(exp (if (exp)))
     ;;  'must add single quote ' ==> wget -O file.zip 'download-url' must has single quote to work 
			    (if (executable-find "wget")
				(shell-command (format "wget  -O  %s  '%s' " temp-file download-url))
			      (if (executable-find "curl")
				  (shell-command (format "curl  -o  %s  '%s' " temp-file download-url))))

;;;;;
;; emacs 26.1 is stable only, but emacs 26.2 or 26.3 not stable 
;; finally, the problem is emacs version work with (url-copy-file url file.zip t)

   (url-copy-file "https://start.spring.io/starter.zip?type=maven-project&language=java&groupId=com.example.hi&artifactId=demo&packaging=jar&bootVersion=2.2.2.BUILD-SNAPSHOT&baseDir=demo&dependencies=web"  "file01.zip" t)
   [ work    ] at GNU Emacs 26.3 (build 1, x86_64-pc-linux-gnu, GTK+ Version 3.24.11) of 2019-09-26
   [not  work] at GNU Emacs 26.2 (build 1, x86_64-pc-linux-gnu, GTK+ Version 3.24.5) of 2019-04-21
   [not work ] at GNU Emacs 26.1 (build 2, x86_64-pc-linux-gnu, GTK+ Version 3.24.11) of 2019-09-09, modified by Debian



;; i am trying this function at emacs versions  26.1, 26.2, 26.3 
(url-copy-file "https://start.spring.io/starter.zip?type=maven-project&language=java&groupId=com.example.hi&artifactId=demo&packaging=jar&bootVersion=2.2.2.BUILD-SNAPSHOT&baseDir=demo&dependencies=web"  "file01.zip" t) ;; C-x C-e

the result :
 (url-copy-file) not work     at GNU Emacs 26.1 (build 2, x86_64-pc-linux-gnu, GTK+ Version 3.24.11) of 2019-09-09, modified by Debian
 (url-copy-file) not work  at GNU Emacs 26.2 (build 1, x86_64-pc-linux-gnu, GTK+ Version 3.24.5) of 2019-04-21
 (url-copy-file) is  working  at GNU Emacs 26.3 (build 1, x86_64-pc-linux-gnu, GTK+ Version 3.24.11) of 2019-09-26



;; (url-copy-file) not work
;; Emacs 26.1
(defun url-copy-file (url newname &optional ok-if-already-exists
			  _keep-time _preserve-uid-gid)



;; (url-copy-file) no work
;; Emacs 26.2
(defun url-copy-file (url newname &optional ok-if-already-exists
                          _keep-time _preserve-uid-gid _preserve-permissions)


;; (url-copy-file) is working
;; Emacs 26.3
(defun url-copy-file (url newname &optional ok-if-already-exists
                          _keep-time _preserve-uid-gid _preserve-permissions)






[not done]
;;   add it to when update in .emacs
;; emacs 26.3 not stable,
;; url-copy-file have bugs
;; the solution is to override function lsp-java-spring-initializr ()
;;;; override lsp-java-spring-initializr at lsp-java.el  in  .emacs
;;
;;
;; syntax ==>  if(wget) else-if(curl) else (user-error)
;; add  these lines 
;;
;; [ important ] comment this line ===>  (url-copy-file download-url temp-file t)
			    (if (executable-find "wget")
				(shell-command (format "wget  -O  %s  '%s'  " temp-file download-url))
			      (if (executable-find "curl")
				  (shell-command (format "curl  -o  %s  '%s'  " temp-file download-url))
				(user-error "Unable to find wget or curl commands in your system, please install wget or curl  " )
				))

;; end of lines 
;;



[error]
[error]
 https://github.com/emacs-lsp/lsp-java/issues/181
 M-x lsp-java-spring-initializr
    the error comes from this line, sometimes works and sometimes not work, 
;;     (url-copy-file download-url temp-file  t) 
     (url-copy-file    "https://start.spring.io/starter.zip?type=maven-project&language=java&groupId=com.example.hi&artifactId=demohi&packaging=jar&bootVersion=2.2.1.RELEASE&baseDir=demohi&dependencies=web"   "a1.zip" t)

    :) :)  the solution is to substitute  (url-copy-file url file t) by :-  wget or curl
     ;;  'must add single quote ' ==> wget -O file.zip 'download-url' must has single quote to work 
     (shell-command (format "wget   -O  %s  '%s' " temp-file download-url))  ;; --no-verbose means no output message except error message
     (shell-command (format "curl   -o  %s  '%s' " temp-file download-url))  ;; --silent means no output message except error message
;;;;;;
 ;; if else ==> if(exp (if (exp)))
     ;;  'must add single quote ' ==> wget -O file.zip 'download-url' must has single quote to work 
			    (if (executable-find "wget")
				(shell-command (format "wget  -O  %s  '%s' " temp-file download-url))
			      (if (executable-find "curl")
				  (shell-command (format "curl  -o  %s  '%s' " temp-file download-url))))
;;;;;

[end of error]
[end of error]




[[ fixed by the author ]]
[[ fixed by the author ]]
;; when press x (lsp-treemacs-quick-fix),
;;  enter to fix file
;;  x     to fix error
;;  =     to to view only errors/warnings/notifications 

;; the error message from *lsp-log* is => Nov 22, 2019 07:40:12 org.eclipse.lsp4j.jsonrpc.RemoteEndpoint fallbackResponseError()
the temp solution is :-
kill buffers from all lsp other servers
     *html-ls*                  0 Fundamental      (html-ls run)
     *jdtls*                    0 Fundamental      (jdtls run)
or by kill the M-x ps ==>> lsp4xml and html-languageserver processes
 node /usr/local/bin/html-languageserver --stdio
 /usr/bin/java -jar /root/.emacs.d/lsp4xml/org.eclipse.lsp4xml-0.3.0-uber.jar
notes :-
notes :-
if stop pause the lsp4xml and html-languageserver proccesses then the message wil be
LSP :: Sening to process failed with the following error: Process html-ls not running
LSP :: Sening to process failed with the following error: Process xmlls not running
;; so i will try lsp-treemacs-quick-fix for the java only
;;;;;;;
;;;;;;; fastest way to solve problem is to :-
        C-x b ==> *xmlls*    ===> no restart 
	C-x b ==> *html-ls*  ===> no restart
	;;;;to connect xml html jsp files again to lsp just type M-x lsp
<<<< fixed by the author >>> 
<<<< fixed by the author >>> 
https://github.com/emacs-lsp/lsp-treemacs/issues/23


;;;; ;;; new  code by the author  in lsp-treemacs.el ==> this code fix the bugs above
(defun lsp-treemacs-quick-fix ()
  "Select the element under cursor."
  (interactive)
  (let ((key (button-get (treemacs-node-at-point) :data)))
    (if (and (consp key) (lsp-diagnostic-p (cdr key)))
        (-let (((file . diag) key)
               (session (lsp-session)))
               (with-current-buffer (find-file-noselect file)
            (with-lsp-workspaces (lsp--try-project-root-workspaces nil nil)
              (save-excursion
                (goto-char (point-min))
                (forward-line (lsp-diagnostic-line diag))
                (lsp-execute-code-action-by-kind "quickfix")))))
      (user-error "Not no a diagnostic"))))


;;  ;;;; old code in lsp-treemacs.el ==> this code generate the bug above 
;; (defun lsp-treemacs-quick-fix ()
;;   "Select the element under cursor."
;;   (interactive)
;;   (let ((key (button-get (treemacs-node-at-point) :data)))
;;     (if (and (consp key) (lsp-diagnostic-p (cdr key)))
;;         (-let (((file . diag) key)
;;                (session (lsp-session)))
;;           (with-current-buffer (find-file-noselect file)
;;             (with-lsp-workspaces (gethash
;;                                   (lsp-find-session-folder session file)
;;                                   (lsp-session-folder->servers session))
;;               (save-excursion
;;                 (goto-char (point-min))
;;                 (forward-line (lsp-diagnostic-line diag))
;;                 (lsp-execute-code-action-by-kind "quickfix")))))
;;       (user-error "Not no a diagnostic"))))
;; 


;; this will fix problem waiting for connection boot-ls timeout 
   https://github.com/emacs-lsp/lsp-java/issues/154
     (setq   lsp-response-timeout 30
             lsp-tcp-connection-timeout 30

[done]
;; this will produce error in the future, please fix it now 
https://github.com/emacs-lsp/lsp-treemacs/issues/2
the default is 60, but i set it to 800.
(setq imenu-max-item-length 120)
means If a number, truncate Imenu entries to that length.


[done]
;; To enable bidirectional synchronization of lsp workspace folders and treemacs projects.
   look at   https://github.com/emacs-lsp/lsp-treemacs
   lsp-xml-jar-file "/root/.emacs.d/lsp4xml/org.eclipse.lsp4xml-0.3.0-uber.jar"
   lsp-treemacs-sync-mode 1

 
;; apt-get update 
;; aptitude install emacs 


;; 7-
;; for lsp-html 
;; when update update this one
;; remove then update
;; npm uninstall -g  vscode-html-languageserver-bin
;; npm install   -g  vscode-html-languageserver-bin
;; the result is /usr/local/bin/html-languageserver -> /usr/local/lib/node_modules/vscode-html-languageserver-bin/htmlServerMain.js
;; 


;; 8- 
;; for lsp-xml
;; when update update this one
;; update this when update system
;; temp java xsd in ~/.lsp4xml/cache ==> list all used xsd files for xml validate and help 
;; mkdir ~/.emacs.d/lsp4xml/
;; remove then update
;; rm  ~/.emacs.d/lsp4xml/org.eclipse.lsp4xml-0.3.0-uber.jar
;; wget https://github.com/angelozerr/lsp4xml/releases/download/0.3.0/org.eclipse.lsp4xml-0.3.0-uber.jar   -O  ~/.emacs.d/lsp4xml/org.eclipse.lsp4xml-0.3.0-uber.jar


;; 9- 
;; for lsp
;; this will upate eclipse jdt ls 
;; remove server then update, this will fix the error  (( error Unable to find single point of entry ))
;;  [old] rm -rf /root/.emacs.d/eclipse.jdt.ls/server
;;        rm -rf /root/.emacs.d/.cache/lsp/eclipse.jdt.ls/boot-server
;; M-x lsp-java-update-server


;; 10-
;;  M-x my-cleaner-lsp-temp will remove these folders and files 
;;  remove ~/.emacs.d/workspace/       ;; remove it when no c-j work
;;  remove ~/.emacs.d/.lsp-session-v1  ;; this will duplicate projects 
;;  remove /root/.emacs.d/.cache/treemacs-persist  ;; this will view old project in treemacs
;;


;; when update  lsp-java-update-server the message error ==>> error Unable to find single point of entry (/root/.emacs.d/eclipse.jdt.ls/server/plugins/org.eclipse.equinox.launcher_1.5.500.v20190715-1310.jar /root/.emacs.d/eclipse.jdt.ls/server/plugins/org.eclipse.equinox.launcher_1.5.600.v20191014-2022.jar))
   the solution is remove the server then update like this
;;  [old] rm -rf /root/.emacs.d/eclipse.jdt.ls/server
;;        rm -rf /root/.emacs.d/.cache/lsp/eclipse.jdt.ls/boot-server

   M-x lsp-java-update-server

;; 
;;  fix duplicate projects in workspace
;;  duplicate lsp-treemacs-errors-list or treemacs or lsp-treemacs-java-deps-list or duplicate projects workspace 
    the solution is to remove workspace session by remove 
    remove ~/.emacs.d/.lsp-session-v1
    remove /root/.emacs.d/.cache/treemacs-persist
    or
    M-x lsp-workspace-folders-remove


 bookmark ==> lsp-log ==>  tail -f ~/.emacs.d/workspace/.metadata/.log
 bookmark ==> lsp-log ==>  tail -f ~/.emacs.d/workspace/.metadata/.log
 *lsp-log*==> this buffer also for lsp-log,
               example:-error build message (c-c c-v c-b) will be in *lsp-log*
	       example:-main-class: first.Hi
                        args: 
                        module-path: 
                        class-path: /home/myLSP/lspWorkspace/Test5/target/classes:/home/myLSP/myPath/mariadb-java-client-2.3.0.jar:/home/myLSP/myPath/javax.servlet-api-4.0.1.jar:/root/.m2/repository/javax/servlet/javax.servlet-api/4.0.1/javax.servlet-api-4.0.1.jar:/root/.m2/repository/org/mariadb/jdbc/mariadb-java-client/2.3.0/mariadb-java-client-2.3.0.jar
                        vmArgs: -Dfile.encoding=UTF-8

;; remove immtable sign
;; [use both chmod + chattr] use this command chattr
;; # immtable (read only ) for doc and src of java in jdee
;; chattr +i -R jdk-8u161-docs-all/
;; chattr +i -R servlet-3_0-final-javadoc/
;; chattr +i -R struts-1.3.10/
;; chattr +i -R  servlet-api-src/
;; chattr +i -R  src_jdk_1.8/
;; chattr +i -R  struts1.3_org_src/
;;
;; lsattr ==> view immtable  attributes (i)
;; # to see immutable use command lsattr will see
;; # ----i---------e--- ./jdk-8u161-docs-all
;; # to remove immtable use chattr -i -R folder/


;; how to disable change of import statements ?
lsp-java-save-action-organize-imports which will disable the organize imports on save (but you are   
going to lose also imports sorting).                                                                 


;; lsp xml temp files
lsp4xml temp xsd files in /root/.lsp4xml/cache/
change the jar location ==> lsp-xml-jar-file  "/root/.emacs.d/org.eclipse.lsp4xml-0.3.0-uber.jar"
lsp-xml-server-command  ("java" "-jar" "/root/.emacs.d/org.eclipse.lsp4xml-0.3.0-uber.jar");;  download it from https://github.com/angelozerr/lsp4xml/releases/tag/0.3.0



;; how to pass args to debug 
   https://github.com/emacs-lsp/dap-mode/issues/75
   You could pass args even now by doing dap-debug-edit-template, then selecting java configuration
and setting the :vmArgs . Full list of supported properties could be found here:
https://github.com/Microsoft/vscode-java-debug .
Currently, there is no template for JUnit test though.


;; how to $classpath which is used in M-x dap-debug compile/attach ==> the output is:-
  java -agentlib:jdwp=transport=dt_socket,server=y,suspend=y,address=33000,quiet=y -cp $CLASSPATH_ARGS first.Hi
;; how can i see $CLASSPATH_ARGS
M-x getenv then $CLASSPATH_ARGS

M-x dap-disconnect  terminate M-x dap-debug then compile/attach(view more info) or M-x dap-java-debug


# dont change this variable lsp-auto-guess-root 't, keep it 'nil
Is it possible that you have set lsp-auto-guess-root to t?
keep it 'nil, dont set it to 't

[not work]
;; how to disable organize import and change of import ?
 (setq lsp-java-save-actions-organize-imports 't)
 (setq lsp-java-organize-imports nil)                                                                 
 (lsp-java-organize-imports nil)                                                                 


M-x lsp-restart
M-x lsp-restart-workspace
    set-variable  lsp-response-timeout  10  ==> number of seconds to wait for a response from the language server before timing out. put it 30 second
M-x lsp-workspace-show-log	         (not documented)
M-x lsp-workspace-restart	        Restart the workspace WORKSPACE and the language server associated    with it
M-x lsp-treemacs-errors-list         Display treemacs error list.
M-x lsp-restart-workspace	         (not documented)
M-x lsp-metals-sources-scan	         Walk all files in the workspace and index where symbols are    defined.
M-x lsp-metals-doctor-run	         Open the Metals doctor to troubleshoot potential build problems.
M-x lsp-metals-build-import	         Unconditionally run `sbt bloopInstall` and re-connect to the build    server.
M-x lsp-metals-build-connect         Unconditionally cancel existing build server connection and    re-connect.
M-x lsp-java-update-project-uris     Update WORKSPACE project uris.
M-x lsp-java-build-project	        Perform project build action.
M-x lsp-disconnect		        Disconnect the buffer from the language server.
M-x  lsp-java-update-project-uris     Update WORKSPACE project uris.
M-x lsp-java-update-project-configuration   run mvn command in  pom.xml file, so no need to [mvn clean install]

(lsp-java--ls-command) ("java" "-Declipse.application=org.eclipse.jdt.ls.core.id1" "-Dosgi.bundles.defaultStartLevel=4" "-Declipse.product=org.eclipse.jdt.ls.core.product" "-Dlog.protocol=true" "-Dlog.level=ALL" "-noverify" "-Xmx1G" "-XX:+UseG1GC" "-XX:+UseStringDeduplication" "-jar" "/root/.emacs.d/eclipse.jdt.ls/server/plugins/org.eclipse.equinox.launcher_1.5.500.v20190715-1310.jar" ...)
(lsp-java--get-root) "/home/myLSP/lspWorkspace/Test5/"



;; note:-  change lsp-mode java-mode by lsp variables           

;; dap-debug
https://www.joyk.com/dig/detail/1533099613826465
Lsp Java Bundles  ==>    List of bundles that will be loaded in the JDT server.



[no need, just in pom.xml type M-x lsp-java-update-project-configuration, it will update .m2 repository]
commad line :-  mvn clean install  ==> must be correct then can use c-c j (find definition),
;;; cant visit defintion ;;



(lsp-java--get-java-version) c-x c-e  ==> 11.0 it is a defun
(lsp-java--ls-command) c-x c-e

M-x lsp-treemacs-errors-list  ==> view errors for  full project, c-x shift-o (jump), tab tab tab to view errors in treemacs

;; java arguments ;;
lsp-java-vmargs  ("-noverify" "-Xmx1G" "-XX:+UseG1GC" "-XX:+UseStringDeduplication")
lsp-java-9-args  ("--add-modules=ALL-SYSTEM" "--add-opens java.base/java.util=ALL-UNNAMED" "--add-opens java.base/java.lang=ALL-UNNAMED")
M-x dap-debug    Run debug configuration DEBUG-ARGS.
M-x dap-debug-edit-template    Edit registered template DEBUG-ARGS.
;; java arguments ;;

M-x lsp-workspace-shutdown	         Shut the workspace WORKSPACE and the language server associated    with it
M-x lsp-java-update-server	         Update LDT LS server form internet


1- apt-get install spinner when install lsp-mode and lsp-java
2- # how to add source of jdk-11 to emacs, so i can use c-c j to visit source code and see doc
sudo apt-get install openjdk-11-*  ===>>>  it will be as src.zip: /usr/lib/jvm/java-11-openjdk-amd64/src.zip
then restart computer 

Q:  how can i create new workspace and file and package ?
    by lsp-treemacs , just prees ? , to jump use (c-x O)




 can't visit defintion by C-c j ;;;;;;;;;;;;;;
 can't visit defintion by C-c j ;;;;;;;;;;;;;;

  1- remove ~/.emacs.d/workspace/
  2- in pom.xml ==> M-x lsp-java-update-project-configuration, it will update .m2 repository
  3- visit the .m2 repository to view the source code
  4- apt-get install sudo apt-get install openjdk-11-*  then restart computer 
  5- add source code to .classpath and pom.xml


 can't visit defintion by C-c j ;;;;;;;;;;;;;;;
 can't visit defintion by C-c j ;;;;;;;;;;;;;;;


 1- apt-get install spinner when install lsp-mode and lsp-java
 2- # how to add source of jdk-11 to emacs, so i can use c-c j to visit source code and see doc
 sudo apt-get install openjdk-11-*  ===>>>  it will be as src.zip: /usr/lib/jvm/java-11-openjdk-amd64/src.zip
 then restart computer 


 M-x lsp-java-update-project-configuration   run mvn command in  pom.xml file,
 the best is using [mvn clean install]


 (setq  lsp-java-java-path  "/home/myLSP/Xmysource/jdk-11.0.2/bin/java")
 change the jdk version but cant see the src.zip when changed


 Q:- how to generate constrouctor with arguments 
 M-x lsp-execute-code-action   ==> then select constrotors then select the arguments ==>>  to fix import and generate getter and setter and toString overriden methods and ...



;;  set your import order packages by  in .emacs
   lsp-java-import-order '["" "java" "javax" "#"]


;; javadoc example
[work]==>  javadoc  -d /home/myLSP/myPath/myDoc  -classpath /home/myLSP/myPath/mariadb-java-client-2.3.0.jar:/home/myLSP/myPath/javax.servlet-api-4.0.1.jar   -sourcepath ./   -subpackages *
[work]==>  javadoc  -d /home/myLSP/test/  -classpath /home/myLSP/myPath/mariadb-java-client-2.3.0.jar:/home/myLSP/myPath/javax.servlet-api-4.0.1.jar   -sourcepath ./             -subpackages first 
[work]==>  javadoc  -d /home/myLSP/test/  -classpath /home/myLSP/myPath/mariadb-java-client-2.3.0.jar:/home/myLSP/myPath/javax.servlet-api-4.0.1.jar   -sourcepath ./             -subpackages first:ok 
[work]==>  javadoc  -d [destination dir]  -classpath [classpath:classpath]                                                                              -sourcepath [source dir]   -subpackages [package1:subpackage:subpackage]


;; run and debug java and show command info

   M-x dap-debug
   select (java Run Configuration (Compile/attach ))


;;;  Q:-  it is already selected (overrides methods, implemented interface), how can i deseclect all, and just select one or two methods ???
C-c C-v o or c-.     lsp-java-generate-overrides [c-j to run] ;; Generates override methods, or use c-. or use helm-lsp(M-x helm-mode then c-v-o then select by ctrl-space then enter )
C-c C-v i or c-.     lsp-java-add-unimplemented-methods [c-j to run], or use c-. or use helm-lsp(M-x helm-mode then c-v-i then select by ctrl-space then enter )
C-c C-d s           lsp-execute-code-action [c-j to run] ;; generate constroctors with argument, and toString,hashcode,getters,setters, or  use helm-lsp(M-x helm-mode then c-v-; then select by ctrl-space then enter )
C-c i               lsp-java-generate-getters-and-setters [c-j to run] ;; getter and setter, or  use helm-lsp(M-x helm-mode then c-c i  then select by ctrl-space then enter )
C-c t               lsp-java-generate-equals-and-hash-code[c-j to run] ;; Generates an equals(), a hashCode()  method. or  use helm-lsp(M-x helm-mode then c-c t then select by ctrl-space then enter )
C-c T               lsp-java-generate-to-string [c-j to run] ;; Generates an equals(), a hashCode()  method.  use helm-lsp(M-x helm-mode then c-c T then select by ctrl-space then enter )
the solution  is :-
for override methods use c-. instead of c-c c-v o
to select methods use [return enter or c-m], to run use c-j
or or or
use package helm-lsp, then M-x helm-mode then c-c c-v o [select elements  by ctrl-space], enter for run



;; how to pass project args(  vmargs Hi.class args)
M-x dap-debug-edit-template
     (java run configuration )
then     
(dap-register-debug-template "Run Configuration" ;;can change then name
  (list :type "java"
        :request "launch" ;; must be launch to work
        :args ""          ;; put args seperated by space
        :cwd nil
        :stopOnEntry :json-false
        :host "localhost"
        :request "launch"
        :modulePaths []
        :classPaths nil
        :name "Run Configuration" ;; can change the name
        :projectName nil
        :mainClass nil)) c-x c-e to evaluate ,

then
edit the :args"" ==> means project args not not vmargs

for example :-  pass argss for pronect (Hi.class hi1       hi2    hi3)
for example :-  pass argss for pronect (Hi.class args[0]  args[1]  args[2])

(dap-register-debug-template "MyRun"
  (list :type "java"
        :request "launch"
        :args "hi1 hi2 hi3"
        :cwd nil
        :stopOnEntry :json-false
        :host "localhost"
        :request "launch"
        :modulePaths []
        :classPaths nil
        :name "MyRun"
        :projectName nil
        :mainClass nil)) ==>>  c-x c-e to evaluate


then M-x dap-debug then select "MyRun"
notes:- can change the "MyRun" before  evaluate it by c-x c-e


for example :- pass vmArgs and args
for example :- pass vmArgs and args
for example :- pass vmArgs and args

M-x dap-debug-edit-template "java Run Configuration"
(dap-register-debug-template "MyRun2"
  (list :type "java"
        :request "launch"
        :args "hi1 hi2 hi3"
	:vmArgs "-Dtest=123"
        :cwd nil
        :host "localhost"
        :request "launch"
        :modulePaths []
        :classPaths nil
        :name "MyRun2"
        :projectName nil
        :mainClass nil)) c-x c-e  them M-x dap-debug MyRun2

M-x ps 
java localhost:41803,server=n,suspend=y
-Dtest=123           <<<<=== [vmArgs]
-Dfile.encoding=UTF-8   
-cp /home/myLSP/lspWorkspace/Test5/target/classes:/home/myLSP/myPath/mariadb-java-client-2.3.0.jar:/home/myLSP/myPath/javax.servlet-api-4.0.1.jar:/root/.m2/repository/javax/servlet/javax.servlet-api/4.0.1/javax.servlet-api-4.0.1.jar:/root/.m2/repository/org/mariadb/jdbc/mariadb-java-client/2.3.0/mariadb-java-client-2.3.0.jar
first.Hi  hi1 hi2 hi3 <<<====[args]




;; how can exclude step filter by command
exclude com.sun.*,com.oracle.*,java.*,javax.*,jdk.*,micro.*,netscape.*,org.*,sun.*,



;; how can i debug java by command line?
1- jdb command
2- java command ==>> java
   ex:-  java -Xdebug -Xrunjdwp:transport=dt_socket,server=y,suspend=n,address=1044 ;;(all java version)  
   ex:-  java    -agentlib:jdwp=transport=dt_socket,server=y,suspend=y,address=1044 ;;(java 5 and above) 
notes :- jdwp ==> remote debug
      :- (java address:port) can be controlled by (jdb -attach address:port)
       look at this  https://docs.oracle.com/javase/7/docs/technotes/tools/windows/jdb.html 
       look at this  https://docs.oracle.com/javase/7/docs/technotes/tools/windows/jdb.html 
       look at this  https://docs.oracle.com/javase/7/docs/technotes/tools/windows/jdb.html 
    example:- 
    C:\> java -agentlib:jdwp=transport=dt_shmem,address=jdbconn,server=y,suspend=n MyClass
    You can then attach jdb to the VM with the following commmand:
    C:\> jdb -attach jdbconn 




;; how can i autorun by  jdb command
/root/.jdbrc

;; what /root/.jdbrc contains
exclude com.sun.*,com.oracle.*,java.*,javax.*,jdk.*,micro.*,netscape.*,org.*,sun.*,
monitor where
monitor locals
monitor dump this
monitor eval this
exclude




;; in lsp-java.el ==> filter completion packages
;; try to import java.awt. => nothing will shown
(defcustom lsp-java-completion-filtered-types ["java.awt.*" "com.sun.*"]
  "Defines the type filters. All types whose fully qualified name
  matches the selected filter strings will be ignored in content
assist or quick fix proposals and when organizing imports. For
example 'java.awt.*' will hide all types from the awt packages."
  :type 'vector)

now you can import java.awt.*
(setq lsp-java-completion-filtered-types  [ "com.sun.*"]) ;; now you can import java.awt.


;; [important notes]
;; new functions and variables every day, so up to date every week.
M-x  lsp-java-open-super-implementation 


;; in lsp-treemacs.el define-key  [[ x r = ]] are already exisit
;; thes keys  are already in lsp-treemacs.el but i added C-1 for 'lsp-treemacs-quick-fix looks like eclipse quick-assist 
;; x     (c-2)                   lsp-treemacs-quick-fix ;; like C-1 in eclipse to fix-errors
;; r     (refresh)               lsp-treemacs-java-deps-refresh ;; 
;; =     (show/hide ifo/warning) lsp-treemacs-cycle-severity ;; hide/show info,warning
;;
   (define-key lsp-treemacs-error-list-mode-map  (kbd "C-1") 'lsp-treemacs-quick-fix)  ;; C-1 after C-c C-v C-r
;; or just use c-1 c to fix errors instead of lsp-treemacs-quick-fix


;;how to install lsp-java dap-java
use-package
projectile
hydra
lsp-treemacs
lsp-mode
lsp-java
lsp-ui
company-lsp
imenus
dap-mode
treemacs
treemacs-icons-... 20190719.815  new        melpa      Treemacs icons for dired
treemacs-projec... 20190619.1516 new        melpa      Projectile integration for treemacs
Spring Initializr
company-capf

 1- apt-get install spinner when install lsp-mode and lsp-java
 2- # how to add source of jdk-11 to emacs, so i can use c-c j to visit source code and see doc
 sudo apt-get install openjdk-11-*  ===>>>  it will be as src.zip: /usr/lib/jvm/java-11-openjdk-amd64/src.zip
 then restart computer 







;; emacs lsp 
 root 15248 100.0 11.0  16:47 01:06 /usr/bin/java
-Declipse.application=org.eclipse.jdt.ls.core.id1
-Dosgi.bundles.defaultStartLevel=4
-Declipse.product=org.eclipse.jdt.ls.core.product
-Dlog.protocol=true -Dlog.level=ALL
-noverify -Xmx1G -XX:+UseG1GC -XX:+UseStringDeduplication
-jar /root/.emacs.d/eclipse.jdt.ls/server/plugins/org.eclipse.equinox.launcher_1.5.500.v20190715-1310.jar
-configuration /root/.emacs.d/eclipse.jdt.ls/server/config_linux
-data /root/.emacs.d/workspace/ --add-modules=ALL-SYSTEM --add-opens\ java.base/java.util=ALL-UNNAMED
--add-opens\ java.base/java.lang=ALL-UNNAMED

;; eclipse command 
  root  4187  5.7 13.2  13:22 14:22 /usr/bin/java
  -Dosgi.requiredJavaVersion=1.8
  -Dosgi.instance.area.default=@user.home/eclipse-workspace
  -XX:+UseG1GC -XX:+UseStringDeduplication
  --add-modules=ALL-SYSTEM -Dosgi.requiredJavaVersion=1.8
  -Dosgi.dataAreaRequiresExplicitInit=true -Xms256m -Xmx1024m
  --add-modules=ALL-SYSTEM
  -jar /home/myLSP/eclipse//plugins/org.eclipse.equinox.launcher_1.5.400.v20190515-0925.jar
  -os linux -ws gtk -arch x86_64
  -showsplash /home/myLSP/eclipse//plugins/org.eclipse.epp.package.common_4.12.0.20190614-1200/splash.bmp
  -launcher /home/myLSP/eclipse/eclipse
  -name Eclipse --launcher.library /home/myLSP/eclipse//plugins/org.eclipse.equinox.launcher.gtk.linux.x86_64_1.1.1000.v20190125-2016/eclipse_1801.so
  -startup /home/myLSP/eclipse//plugins/org.eclipse.equinox.launcher_1.5.400.v20190515-0925.jar
  --launcher.appendVmargs -exitdata b8008 -product org.eclipse.epp.package.jee.product
  -vm /usr/bin/java -vmargs -Dosgi.requiredJavaVersion=1.8
  -Dosgi.instance.area.default=@user.home/eclipse-workspace
  -XX:+UseG1GC -XX:+UseStringDeduplication --add-modules=ALL-SYSTEM -Dosgi.requiredJavaVersion=1.8
  -Dosgi.dataAreaRequiresExplicitInit=true -Xms256m -Xmx1024m --add-modules=ALL-SYSTEM
  -jar /home/myLSP/eclipse//plugins/org.eclipse.equinox.launcher_1.5.400.v20190515-0925.jar


;; eclipse apache (not remote debug)
root 7893  2.1  1.5  14:25 00:09 /usr/lib/jvm/java-11-openjdk-amd64/bin/java
-Dcatalina.base=/home/myLSP/lspWorkspace/.metadata/.plugins/org.eclipse.wst.server.core/tmp0
-Dcatalina.home=/home/myLSP/myPath/apache-tomcat-9.0.12
-Dwtp.deploy= /home/myLSP/lspWorkspace/.metadata/.plugins/org.eclipse.wst.server.core/tmp0/wtpwebapps
-Dfile.encoding=UTF-8
-classpath /home/myLSP/myPath/apache-tomcat-9.0.12/bin/bootstrap.jar
          :/home/myLSP/myPath/apache-tomcat-9.0.12/bin/tomcat-juli.jar
       org.apache.catalina.startup.Bootstrap start


;; emacs debug (remote debug)
  root 17550  7.7  0.5  17:33 00:00 /usr/lib/jvm/java-11-openjdk-amd64/bin/java
  -Xdebug -Xnoagent -Djava.compiler=NONE
  -Xrunjdwp:transport=dt_socket,address=localhost:46019,server=n,suspend=y
  -Dfile.encoding=UTF-8
  -cp  /home/myLSP/lspWorkspace/Test5/target/classes
      :/home/myLSP/myPath/mariadb-java-client-2.3.0.jar
      :/home/myLSP/myPath/javax.servlet-api-4.0.1.jar
      :/root/.m2/repository/javax/servlet/javax.servlet-api/4.0.1/javax.servlet-api-4.0.1.jar
      :/root/.m2/repository/org/mariadb/jdbc/mariadb-java-client/2.3.0/mariadb-java-client-2.3.0.jar
      first.Hi


;; eclipse debug
  root 5198  1.1  0.6  19:17 00:00 /usr/lib/jvm/java-11-openjdk-amd64/bin/java
  -agentlib:jdwp=transport=dt_socket,suspend=y,address=localhost:46695
  -javaagent:/home/myLSP/eclipse/configuration/org.eclipse.osgi/405/0/.cp/lib/javaagent-shaded.jar
  -Dfile.encoding=UTF-8
  -classpath /home/myLSP/lspWorkspace/Test5/target/classes
            :/home/myLSP/myPath/mariadb-java-client-2.3.0.jar
            :/home/myLSP/myPath/javax.servlet-api-4.0.1.jar
	    :/root/.m2/repository/javax/servlet/javax.servlet-api/4.0.1/javax.servlet-api-4.0.1.jar
	    :/root/.m2/repository/org/mariadb/jdbc/mariadb-java-client/2.3.0/mariadb-java-client-2.3.0.jar
	    first.Hi


;; filter dap-debug
  /home/myLSP/lspWorkspace/.metadata/.plugins/org.eclipse.core.runtime/.settings/org.eclipse.jdt.debug.ui.prefs
 ./.metadata/.plugins/org.eclipse.core.runtime/.settings/org.eclipse.jdt.debug.ui.prefs:3:org.eclipse.jdt.debug.ui.active_filters=com.ibm.*,com.sun.*,java.*,javax.*,jrockit.*,org.eclipse.jdt.launching.internal.*,org.omg.*,sun.*,sunw.*,java.lang.ClassLoader
  root 27777 100.0  8.5  19:20 01:59 /usr/bin/java -Dosgi.requiredJavaVersion=1.8 -Dosgi.instance.area.default=@user.home/eclipse-workspace -XX:+UseG1GC -XX:+UseStringDeduplication --add-modules=ALL-SYSTEM -Dosgi.requiredJavaVersion=1.8 -Dosgi.dataAreaRequiresExplicitInit=true -Xms256m -Xmx1024m --add-modules=ALL-SYSTEM -jar /home/myLSP/eclipse//plugins/org.eclipse.equinox.launcher_1.5.400.v20190515-0925.jar -os linux -ws gtk -arch x86_64 -showsplash /home/myLSP/eclipse//plugins/org.eclipse.epp.package.common_4.12.0.20190614-1200/splash.bmp -launcher /home/myLSP/eclipse/eclipse -name Eclipse --launcher.library /home/myLSP/eclipse//plugins/org.eclipse.equinox.launcher.gtk.linux.x86_64_1.1.1000.v20190125-2016/eclipse_1801.so -startup /home/myLSP/eclipse//plugins/org.eclipse.equinox.launcher_1.5.400.v20190515-0925.jar --launcher.appendVmargs -exitdata 468008 -product org.eclipse.epp.package.jee.product -vm /usr/bin/java -vmargs -Dosgi.requiredJavaVersion=1.8 -Dosgi.instance.area.default=@user.home/eclipse-workspace -XX:+UseG1GC -XX:+UseStringDeduplication --add-modules=ALL-SYSTEM -Dosgi.requiredJavaVersion=1.8 -Dosgi.dataAreaRequiresExplicitInit=true -Xms256m -Xmx1024m --add-modules=ALL-SYSTEM -jar /home/myLSP/eclipse//plugins/org.eclipse.equinox.launcher_1.5.400.v20190515-0925.jar
  root 27889   9.8  0.6  19:20 00:01 /usr/lib/jvm/java-11-openjdk-amd64/bin/java -agentlib:jdwp=transport=dt_socket,suspend=y,address=localhost:46065 -javaagent:/home/myLSP/eclipse/configuration/org.eclipse.osgi/405/0/.cp/lib/javaagent-shaded.jar -Dfile.encoding=UTF-8 -classpath /home/myLSP/lspWorkspace/Test5/target/classes:/home/myLSP/myPath/mariadb-java-client-2.3.0.jar:/home/myLSP/myPath/javax.servlet-api-4.0.1.jar:/root/.m2/repository/javax/servlet/javax.servlet-api/4.0.1/javax.servlet-api-4.0.1.jar:/root/.m2/repository/org/mariadb/jdbc/mariadb-java-client/2.3.0/mariadb-java-client-2.3.0.jar first.Hi



;; there is another mode like lsp-mode called eglot, eglot can connect to eclipse.jdt server 
   https://github.com/joaotavora/eglot







;; what is javafx ?
 it is module like jdk-10/jmods/java.activation.jmod it is compressed files 
 javafx will be in /usr/share/openjfx/lib after apt-get install openjfx, but the jdk11 modules in /usr/lib/jvm/java-11-openjdk-amd64/jmods
 can see all system defined java modules by command java --list-modules, and can add modules to system by
 java --module-path=/usr/share/openjfx/lib --add-modules=ALL-MODULE-PATH 
; must install apt-get install openjfx to work, not just the jars will run javafx 



[not work yet]
;; how to run javafx ?
[this line is work]          ===>> cd /home/myLSP/lspWorkspace/Test5/target/classes then 
[this line is work]          ===>> java --module-path /usr/share/openjfx/lib --add-modules=javafx.graphics,javafx.controls,javafx.fxml,javafx.base,javafx.media,javafx.web,javafx.swing    -cp  /home/myLSP/lspWorkspace/Test5/target/classes:/home/myLSP/myPath/mariadb-java-client-2.3.0.jar:/home/myLSP/myPath/javax.servlet-api-4.0.1.jar:/root/.m2/repository/javax/servlet/javax.servlet-api/4.0.1/javax.servlet-api-4.0.1.jar:/root/.m2/repository/org/mariadb/jdbc/mariadb-java-client/2.3.0/mariadb-java-client-2.3.0.jar    first.TestFx
[env is empty in commadline] ===>> $CLASSPATH_ARGS set it by M-x setenv
command line ==>> aptitude  install openjfx
command line ==>> aptitude  install openjfx-source
command line ==>> java --version
command line ==>> java --list-modules 
command line ==>>  dpkg-query -L openjfx ;;List the javafx library location
 java --module-path /usr/share/openjfx/lib --add-modules=javafx.controls,javafx.fxml,javafx.base,javafx.media,javafx.web,javafx.swing -jar '/home/lotfi/Documents/MyAppfolder/my_application.jar'
 java --module-path /usr/share/openjfx/lib --add-modules=javafx.graphics,javafx.controls,javafx.fxml,javafx.base,javafx.media,javafx.web,javafx.swing  -cp $CLASSPATH_ARGS first.TestFx 
(dap-register-debug-template "Run3"
  (list :type "java"
        :request "launch"
        :args ""
	:vmArgs "--add-modules=javafx.graphics,javafx.controls,javafx.fxml,javafx.base,javafx.media,javafx.web,javafx.swing"
        :cwd nil
        :stopOnEntry :json-false
        :host "localhost"
        :request "launch"
        :modulePaths [/usr/share/openjfx/lib ]
        :classPaths nil
        :name "Run3"
        :projectName nil
        :mainClass nil))

;;how can add javafx module to jdk modules ? (command line ==>> java --list-modules )
;; use M-x setenv _JAVA_OPTIONS to use it with lsp-java
export _JAVA_OPTIONS="--module-path=/usr/share/openjfx/lib --add-modules=ALL-MODULE-PATH"
[[this line is work after adding _JAVA_OPTIONS evn]]
                     ===>  cd /home/myLSP/lspWorkspace/Test5/target/classes then 
                     ===> java  -cp  /home/myLSP/lspWorkspace/Test5/target/classes:/home/myLSP/myPath/mariadb-java-client-2.3.0.jar:/home/myLSP/myPath/javax.servlet-api-4.0.1.jar:/root/.m2/repository/javax/servlet/javax.servlet-api/4.0.1/javax.servlet-api-4.0.1.jar:/root/.m2/repository/org/mariadb/jdbc/mariadb-java-client/2.3.0/mariadb-java-client-2.3.0.jar    first.TestFx



;; put the classpath for lsp-java
   M-x dap-debug =>(compile/attach)  then 
   M-x setenv  CLASSPATH_ARGS 
   M-x getenv  CLASSPATH_ARGS 


;; [work]
;;  https://github.com/microsoft/vscode-java-debug/blob/main/Configuration.md ==> step filter
;; finally it is work javafx 
;; finally it is work javafx
;; finally it is work javafx
;; https://marketplace.visualstudio.com/items?itemName=vscjava.vscode-java-debug
;; https://marketplace.visualstudio.com/items?itemName=vscjava.vscode-java-debug
 aptitude install openjfx
(dap-register-debug-template "Run4"
  (list :type "java"
        :request "launch"
        :args ""
	:vmArgs "--module-path=/usr/share/openjfx/lib --add-modules=ALL-MODULE-PATH"
        :cwd nil
        :stopOnEntry :json-false
        :host "localhost"
        :request "launch"
        :modulePaths []
        :classPaths nil
        :name "Run4"
        :projectName nil
        :mainClass nil))
and in pom.xml put
        <dependency>
            <groupId>org.openjfx</groupId>
            <artifactId>javafx-controls</artifactId>
            <version>11.0.2</version>
        </dependency>
;;this is the line which worked of module javafx
root             21811 100.0  2.4  15:33 00:06 /usr/lib/jvm/java-11-openjdk-amd64/bin/java
-Xdebug -Xnoagent -Djava.compiler=NONE 
-Xrunjdwp:transport=dt_socket,address=localhost:36693,server=n,suspend=y
--module-path=/usr/share/openjfx/lib
--add-modules=ALL-MODULE-PATH
-Dfile.encoding=UTF-8
-cp /home/myLSP/lspWorkspace/Test5/target/classes:/home/myLSP/myPath/mariadb-java-client-2.3.0.jar:/home/myLSP/myPath/javax.servlet-api-4.0.1.jar:/root/.m2/repository/javax/servlet/javax.servlet-api/4.0.1/javax.servlet-api-4.0.1.jar:/root/.m2/repository/org/mariadb/jdbc/mariadb-java-client/2.3.0/mariadb-java-client-2.3.0.jar:/root/.m2/repository/org/openjfx/javafx-controls/11.0.2/javafx-controls-11.0.2.jar:/root/.m2/repository/org/openjfx/javafx-controls/11.0.2/javafx-controls-11.0.2-linux.jar:/root/.m2/repository/org/openjfx/javafx-graphics/11.0.2/javafx-graphics-11.0.2.jar:/root/.m2/repository/org/openjfx/javafx-graphics/11.0.2/javafx-graphics-11.0.2-linux.jar:/root/.m2/repository/org/openjfx/javafx-base/11.0.2/javafx-base-11.0.2.jar:/root/.m2/repository/org/openjfx/javafx-base/11.0.2/javafx-base-11.0.2-linux.jar
first.TestFx



[done]
;; and new key to use M-x dap-debug with arguments then (compile/attach)
(define-key java-mode-map (kbd "C-c C-v d") 'dap-debug) ;; and new key to use M-x dap-debug with arguments then (compile/attach)

[done]
;; no need for update dap-java.el just put this to .emacs
;; no need to add word server before /test-runner/ 
(require  'dap-java)
(setq dap-java-test-runner   "~/.emacs.d/eclipse.jdt.ls/server/test-runner/junit-platform-console-standalone.jar")


;; put the classpath for lsp-java
   M-x dap-debug =>(compile/attach)  then 
   M-x setenv  CLASSPATH_ARGS 
   M-x getenv  CLASSPATH_ARGS 
   (setenv "PATH"  (concat 
   "C:/cygwin/usr/local/bin" ";"
   "C:/cygwin/usr/bin" ";"
   "C:/cygwin/bin" ";"
   (getenv "PATH")
  ))







======    [ end  of  lsp-java fix errors ]  =========
======    [ end  of  lsp-java fix errors ]  =========
======    [ end  of  lsp-java fix errors ]  =========
======    [ end  of  lsp-java fix errors ]  =========				  






=========[not done]=========
=========[not done]=========




[done]

(require 'lsp-mode)
(require 'lsp-ui)
(require 'lsp-java)
(require 'lsp-java-boot)
(require 'treemacs)
(require 'lsp-treemacs)
(require 'dap-mode)
(require 'dap-java)
(require 'company)
(require 'company-lsp)
(require 'web-mode)
(require 'nxml-mode)
(require 'imenus)


(use-package company
  :init
  (setq  company-minimum-prefix-length 4
         company-tooltip-align-annotations t
         company-tooltip-margin 3

         company-async-timeout 15   ;; 2 default


[done]

  :hook (
	 ((conf-javaprop-mode nxml-mode web-mode java-mode) . lsp)   ;;; (file.properties ==> conf-javaprop-mode)   (jsp,html,as[cp]x ==> web-mode)  
	 (lsp-mode                       . company-mode)
;;	 (lsp-mode                       . lsp-lens-mode)            ;; optional to add the lens
;;	 (java-mode                      . lsp-java-boot-lens-mode ) ;; optional to add the lens
	 )



[ done]
[ done]
;; at cleaner mode-line
  (lsp-mode . " LSP ") 

;;


[ done]
[ done]

         ("C-c C-v   d"  . dap-debug) ;; and new key to use M-x dap-debug with arguments then (compile/attach)
         ("C-c C-v C-c"  . dap-hydra)
         ("C-c C-v C-d"  . dap-java-debug)  ;; default debug and run  for java

         ("C-c C-v C-s"  . dap-disconnect)  ;; stop the program then kill it by dap-delete-all-sessions
         ("C-c C-v s"    . dap-delete-all-sessions)  ;; delete-all-sessions after kill 


[ done]
[ done]

    ;;   ("C-c C-d C-f"  .  lsp-ui-find-workspace-symbol) ;; search inside ~/.emacs.d/workspace, but c-c c-d f(format code)


[done]
[done]
     (setq   lsp-response-timeout 30
             lsp-tcp-connection-timeout 30

;; this will fix problem waiting for connection boot-ls timeout 
   https://github.com/emacs-lsp/lsp-java/issues/154






[not done]
         ("C-c C-v C-m"  .  lsp-treemacs-references )     ;; M-?  find referense and sort it as list 
         ("C-c C-j"      .  lsp-treemacs-implementations) ;; same as c-c J but as tree


[done]
("C-2 c"        .  lsp-execute-code-action) ;; c-2 c [eclipse Shift+Alt+S O]  ==> lsp-execute-code-action [c-j to run] ;; generate constroctors with argument, and toString,hashcode,getters,setters, or  use helm-lsp(M-x helm-mode then c-2 c then select by ctrl-space then enter )
("C-c C-d s"    .  lsp-execute-code-action) ;; c-2 c [eclipse Shift+Alt+S O]  ==> lsp-execute-code-action [c-j to run] ;; generate constroctors with argument, and toString,hashcode,getters,setters, or  use helm-lsp(M-x helm-mode then c-2 c then select by ctrl-space then enter )
("C-c C-d C-s"  .  lsp-execute-code-action) ;; c-2 c [eclipse Shift+Alt+S O]  ==> lsp-execute-code-action [c-j to run] ;; generate constroctors with argument, and toString,hashcode,getters,setters, or  use helm-lsp(M-x helm-mode then c-2 c then select by ctrl-space then enter )
;;





[done]
(setq lsp-java-completion-filtered-types  []) ;; now you can import java.awt.* and com.sun.*
(setq mylistx [a b c]) ;; list
(setq myarrayx [foo bar baz]) ;; array
(setq myarrayx []) ;; empty array
like this
    (use-package lsp-java
      :init
      (setq  lsp-java-maven-download-sources t
             lsp-java-code-generation-generate-comments t
	     lsp-java-save-action-organize-imports nil
	     lsp-java-completion-filtered-types []
	     )


;; change (build/classes)==> without maven  to (target/classes/) ==> using maven pom.xml
(defun my-webapp-launch()
(interactive)
   " launch webapp from lsp workspace to apache tomcat by mount binding, 0 means ok,  1 or else means fail => c-h e(view message errors)
      the option (o) in mount -o bind ro ==> the webapps in server will be read-only, so if you delete the ro it will be for read and write "
      (if (equal my-webapp-name  "")
	  (progn
	    (setq my-webapp-name (read-string "webapp name is : "))
            (shell-command (concat "umount   /home/jdee_workspace/sourcePathx/servers/tomcat9/webapps/"my-webapp-name"/WEB-INF/classes/"))
            (shell-command (concat "umount   /home/jdee_workspace/sourcePathx/servers/tomcat9/webapps/"my-webapp-name"/"))
            (shell-command (concat "mkdir -p                                                                   /home/jdee_workspace/sourcePathx/servers/tomcat9/webapps/"my-webapp-name"/"))
            (shell-command (concat "mount -o bind /home/myLSP/lspWorkspace/"my-webapp-name"/WebContent/        /home/jdee_workspace/sourcePathx/servers/tomcat9/webapps/"my-webapp-name"/"))
            (shell-command (concat "mkdir -p                                                                   /home/jdee_workspace/sourcePathx/servers/tomcat9/webapps/"my-webapp-name"/WEB-INF/classes/"))
            (shell-command (concat "mount -o bind /home/myLSP/lspWorkspace/"my-webapp-name"/target/classes/    /home/jdee_workspace/sourcePathx/servers/tomcat9/webapps/"my-webapp-name"/WEB-INF/classes/"))
	    );; end of true part condition
	(progn
          (message "website is already launched, type M-x my-webapp-turning-off for umount website")
          );; end of false part condition
	) ;; end of if condition
    );; end of defun





;; the correct way to enable flycheck and disable flymake in lsp-mode
(use-package lsp-ui
 :init
 (setq  lsp-ui-flycheck-enable t
        lsp-ui-doc-mode nil
	lsp-ui-doc-enable nil
        lsp-ui-sideline-enable nil
	lsp-ui-doc-max-height  20
	lsp-ui-doc-max-width   50
	lsp-ui-doc-position  'bottom
	lsp-ui-doc-delay 0.2
        lsp-ui-doc-include-signature  t
==>>    lsp-ui-doc-use-webkit nil    
;;      lsp-ui-doc-use-childframe t  ;; t by default, so dont add it to use-package 
;;	lsp-ui-peek-enable t         ;; t by default, so dont add it to use-package

	)
  :bind (:map lsp-ui-mode-map  ;; after this line are local keys 
	 ("C-c C-v w"    .  my-toggle-lsp-ui-doc-show-and-hide)  ;; hide/show web javadoc 
         ("C-c C-d j"    .  lsp-ui-imenu)  ;;local  like c-(square step function) in eclipse ; M-x imenus-rescan to refresh, fast jump to methods variables, c-l for update methods
         ("C-c C-v n"    .  lsp-ui-find-next-reference)   ;;      who is calling this function, reverse of c-c j(visit file), the next calling
         ("C-c C-v p"    .  lsp-ui-find-prev-reference)   ;;      who is calling this function, reverse of c-c j(visit file), first calling
         ("C-c j"        .  lsp-ui-peek-find-definitions) ;; M-.  open decleration
===>>>   ([remap xref-find-definitions] . lsp-ui-peek-find-definitions);; M-. or c-c j
===>>>	 ([remap xref-find-references]  . lsp-ui-peek-find-references) ;; M-?

===>>> add comment xref-find-definitions below
;; use M-. M-? to find definition, c-c s to  pop-tag-mark==> return to original point
;;; ;;; (define-key lsp-ui-mode-map     [remap xref-find-definitions] #'lsp-ui-peek-find-definitions);; M-. or c-c j
;;; ;;; (define-key lsp-ui-mode-map     [remap xref-find-references]  #'lsp-ui-peek-find-references) ;; M-?



  )
;;  :config can be used to execute code after a package is loaded.
    :config
    (lsp-ui-doc-mode -1)
    :after lsp-mode
) ;; end of lsp-ui








[very-important] install (imenus with s char)  form elpa and keep (imenu no s char) from gnu/emacs
;; when press c-c c-d j => cant visit method, because no rescan automatically, and the size is samll,
;; the solution is automatically rescan, and the max size will be 9MB
;; to update select c-c c-d j *Rescan* or use C-l to rescan
;; to update select c-c c-d j *Rescan* or use C-l to rescan
 (require 'imenu)
  (setq imenu-auto-rescan nil) ;; set it to nil,
  (setq imenu-auto-rescan-maxout 9000000)
  (setq imenu-max-item-length 800)
  (setq imenu-max-items 200)

 '(imenu-max-items 200)
 '(imenu-space-replacement " ")
 '(imenus-delimiter " | ")


 '(imenu-space-replacement " ")
 (require 'imenus)
  (setq imenus-delimiter " | ")
;;the solution is using imenus (with s), put remap
         :map lsp-mode-map  ;; after this line are local keys 
         ("C-c C-d C-j"  .  imenus) ;;local  like c-] in eclipse ; M-x imenus-rescan to refresh, fast jump to methods variables
         :map imenus-minibuffer-map
	 ("C-l"       .  imenus-rescan) ;; from imenus.el, the default key is M-r,
         :bind (:map lsp-ui-mode-map  ;; after this line are local keys 
         ("C-c C-d j"    .  lsp-ui-imenu)  ;;local  like c-] in eclipse ; M-x imenus-rescan to refresh, fast jump to methods variables

;; visit members  C-c C-d C-j C-l ==> imenus + imenus-rescan
;; lsp-ui-imenu   C-c C-d j

[not done]
 check this config first because every thing at this file
/home/temp/.emacs



[not-done]
[very important notes ] ==>> if match global keys with local keys,use-package will drop both,
;; stop c-c c-v at nxml-mode and html-mode  so you can use lsp-mode with golobal-keys, 
;; by searching the source code because the M-x find-grep cant search inside compressed files rng-nxml.el.gz  .gz
(defun my-stop-nxml-mode-and-html-mode-keys()
       ;; stop keys in nxml-mode
  (define-key nxml-mode-map "\C-c\C-v" 'nil);; the stop key, not the command M-x rng-validate-mode at        /usr/share/emacs/26.1/lisp/nxml/rng-nxml.el.gz
  (define-key nxml-mode-map "\C-c\C-d" 'nil) ;; the stop key, not the command M-x nxml-dynamic-markup-word at /usr/share/emacs/26.1/lisp/nxml/nxml-mode.el.gz

       ;; stop keys in html-mode
  (define-key html-mode-map "\C-c\C-v" 'nil) ;; M-x browse-url-of-buffer) at file /home/emacs_webkit/emacs-26.1/lisp/textmodes/sgml-mode.el
  (define-key html-mode-map "\C-c\C-d" 'nil) ;; M-x sgml-delete-tag  at file /home/emacs_webkit/emacs-26.1/lisp/textmodes/sgml-mode.el
);; end defun

(add-hook 'nxml-mode-hook  'my-stop-nxml-mode-and-html-mode-keys)
(add-hook 'html-mode-hook  'my-stop-nxml-mode-and-html-mode-keys)





[not done]
change the color of company-mode so when C-. will choose with good colors not yellow
 '(company-tooltip-margin 3)


 '(company-tooltip ((t (:background "gray8" :foreground "#d3d3d3"))))
 '(company-tooltip-annotation ((t (:foreground "yellow2"))))
 '(company-tooltip-common ((t (:foreground "cyan"))))
 '(company-tooltip-selection ((t (:background "#005000"))))




;; 
;; add C-n/p or M-n/p to select-next/previous at company (c-.), when view two menu list(ac(c-z) and company(c-.) use c-n or M-n to select )
    (require 'company)
    (define-key company-active-map (kbd "C-n") 'company-select-next)
    (define-key company-active-map (kbd "C-p") 'company-select-previous)




[dont do this]
[not done]
(global-unset-key (kbd "C-1 ")) ;; to use c-1 as global must unset it first as c-c c-d 
(global-unset-key (kbd "C-2 ")) ;; to use c-2 as global must unset it first as c-c c-d 

[not done]
[warnings] ==> dont download these packages 
  lsp-html           20180629.725  new        melpa      HTML support for lsp-mode
  lsp-css            20181219.504  new        melpa      CSS/LESS/SASS support for lsp-mode

;; download these command 
;;command to install html server ==>>
npm install -g  vscode-html-languageserver-bin
form ==> https://www.npmjs.com/package/vscode-nls?activeTab=dependents
;;location is will be at 
/usr/local/lib/node_modules/vscode-html-languageserver-bin/
/usr/local/bin/html-languageserver -> /usr/local/lib/node_modules/vscode-html-languageserver-bin/htmlServerMain.js
[important note] ==> flycheck at lsp html  can't check html, but this work at html-mode not web-mode    (eval-after-load 'flycheck       '(flycheck-add-mode 'html-tidy 'html-mode))


[not done]
change the jar location ==> lsp-xml-jar-file  "/root/.emacs.d/org.eclipse.lsp4xml-0.3.0-uber.jar"
lsp-xml-server-command  ("java" "-jar" "/root/.emacs.d/org.eclipse.lsp4xml-0.3.0-uber.jar");;  download it from https://github.com/angelozerr/lsp4xml/releases/tag/0.3.0

[not done]
;; make it global, so i can autocomplete in xml file
;; just download xml-server from
;; wget https://github.com/angelozerr/lsp4xml/releases/download/0.3.0/org.eclipse.lsp4xml-0.3.0-uber.jar   -O  ~/.emacs.d/lsp4xml/org.eclipse.lsp4xml-0.3.0-uber.jar


[not done] change the jar location ==> lsp-xml-jar-file  "~/lsp4xml/.emacs.d/org.eclipse.lsp4xml-0.3.0-uber.jar"
           lsp-xml-server-command  ("java" "-jar" "/root/.emacs.d/org.eclipse.lsp4xml-0.3.0-uber.jar");;  download it from https://github.com/angelozerr/lsp4xml/releases/tag/0.3.0
;; dont do this, just bind them to lsp-mod not global-key



(global-set-key (kbd "C-.") 'company-complete) ;; faster complete without update, to update use c-. only
(global-set-key (kbd "C-c C-v C-r") 'lsp-treemacs-errors-list)
(global-set-key (kbd "C-c C-v w") 'my-toggle-lsp-ui-doc-show-and-hide)  ;; hide/show web javadoc 
(global-set-key (kbd "C-c C-v C-w") 'lsp-describe-thing-at-point)  ;; visit web javadoc, c-c c-v c-w  doc childframe

(global-set-key (kbd "C-c C-d f") 'lsp-format-buffer) ;; format code or use another command  c-x ps 

(global-set-key (kbd "C-c C-v k") 'lsp-restart-workspace)  ;; M-x lsp-restart-workspace
(global-set-key (kbd "C-c C-d g") 'company-yasnippet)  ;; like   c-c space g or  c-c & c-s 
(global-set-key (kbd "C-c C-v l") 'treemacs) ;; view project as tree


[dont do this]
[not done]
it is for java8 only
;; javadoc M-x   javadoc-lookup     20160214.31   new        melpa      Javadoc Emacs integration with Maven
(use-package javadoc-lookup
  :ensure t
  :config
  (when (file-exists-p "/usr/share/doc/openjdk-8-jdk/api")
    (javadoc-add-roots "/usr/share/doc/openjdk-8-jdk/api"))

  (javadoc-add-artifacts [org.lwjgl.lwjgl lwjgl "2.8.2"]
                         [com.nullprogram native-guide "0.2"]
                         [org.apache.commons commons-math3 "3.0"]
                         ;; [de.dfki.lt.jtok jtok-core "1.9.3"]
                         ))

[wow note]
[wow note]
[wow note]

[done]
change  (c-c c-v m) lsp-ui-peek-find-references     to   lsp-find-references
change  (c-c J )    lsp-ui-peek-find-implementation to   lsp-find-implementation



[done]
;; in the tree
;; C-c C-v C-r ==> lsp-treemacs-errors-list then can fix auto-fix errors from here by command
M-x  lsp-treemacs-quick-fix, it is like Ctrl+1 in eclipse
so but new key for lsp-treemacs-quick-fix in lsp-treemacs-errors-mode as majar-mode
(define-key lsp-treemacs-errors-mode-map (kbd "C-1") 'lsp-treemacs-quick-fix)  ;; in lsp-treemacs-errors-mode-map not java-mode

[not done]
copy jdee-mode dict to java-mode
/root/.emacs.d/Auto_Complete_Dict/dict/jdee-mode
/root/.emacs.d/Auto_Complete_Dict/dict/java-mode

[done]
add comment for snippet (method and class)

[not done]
read eclipse tips 
https://help.eclipse.org/2018-09/index.jsp?topic=%2Forg.eclipse.jdt.doc.user%2Ftips%2Fjdt_tips.html

[not done] ;; make keys like eclipse
 M-x lsp-java-assign-all       [eclipse Ctrl+1 assign all parameters to new fields  ] ==> Assign to new field. sum4(int x,int y) ==> will be x5=x; y5=y; put cursor inside parenthesis()
 M-x lsp-java-assign-to-field  [eclipse Ctrl+1 assign     parameter  to new field   ] ==> Assign to new field. generate one which over the cursor 
 M-x lsp-java-create-parameter [eclipse Ctrl+1 create parameter  ] ==> Create parameter refactoring. create parameter form the currrent variable and put it inside parenthesis()
 M-x lsp-java-create-local     [eclipse   ] ==> 
 M-x lsp-java-create-field     [eclipse   ] ==> 

;; must be selected without semicolon to work in emacs, no need for select in
M-x lsp-java-extract-to-local-variable [eclipse Ctrl+1 assign statment to local variable] Extract local variable refactoring.[note] must select all region without semicolon,  sx.substring(0,2); will be ==>> String substring = sx.substring(0,2);
 M-x lsp-java-extract-to-constant ;; extract to constant field, but with bug

(define-key java-mode-map (kbd "C-2 a") 'lsp-java-assign-all)                ;;[eclipse Ctrl+1 assign all parameters to new fields  ] ==> Assign to new field. sum4(int x,int y) ==> will be x5=x; y5=y; put cursor inside parenthesis()
(define-key java-mode-map (kbd "C-2 f") 'lsp-java-assign-to-field)           ;;[eclipse Ctrl+1 assign     parameter  to new field   ] ==> Assign to new field. generate one which over the cursor 
(define-key java-mode-map (kbd "C-2 p") 'lsp-java-create-parameter)          ;;[eclipse Ctrl+1 create parameter  ] ==> Create parameter refactoring. create parameter form the currrent variable and put it inside parenthesis()
(define-key java-mode-map (kbd "C-2 l") 'lsp-java-extract-to-local-variable) ;; [eclipse Ctrl+1 assign statment to local variable] Extract local variable refactoring.[note] must select all region without semicolon,  sx.substring(0,2); will be ==>> String substring = sx.substring(0,2);
(define-key java-mode-map (kbd "C-2 o") 'lsp-java-generate-overrides)        ;; C-c C-v o or c-.     [eclipse Shift+Alt+S V or Ctrl+1] ==> lsp-java-generate-overrides [c-j to run] ;; Generates override methods, or use c-. or use helm-lsp(M-x helm-mode then c-v-o then select by ctrl-space then enter )
(define-key java-mode-map (kbd "C-2 i") 'lsp-java-add-unimplemented-methods) ;; C-c C-v i or c-.     [eclipse Shift+Alt+S V or Ctrl+1] ==> lsp-java-add-unimplemented-methods [c-j to run], or use c-. or use helm-lsp(M-x helm-mode then c-v-i then select by ctrl-space then enter )
(define-key java-mode-map (kbd "C-2 c") 'lsp-execute-code-action)            ;; C-c C-v ;            [eclipse Shift+Alt+S O]           ==> lsp-execute-code-action [c-j to run] ;; generate constroctors with argument, and toString,hashcode,getters,setters, or  use helm-lsp(M-x helm-mode then c-v-; then select by ctrl-space then enter )

[done]
[no need, because the Ctrl+1 is working]
;; generate new defun  try-catch for selected region
;; insert around region, override region, 
(defun my-lsp-try-catch (start end)
  "Insert a try catch around a region."
  (interactive "r")
  (save-excursion
    (goto-char end) (insert "} catch(Exception e){\n\n} finally {\n\n}")
    (goto-char start) (insert "try {")
    ));; end of defun

;; modify it from (c-c c-d t) in .emacs
;; change it from c-c c-v c-t/t to ctrl-1
(define-key java-mode-map (kbd "C-2 t") 'lsp-java-add-throws)    ;; C-1 t  [eclipse Ctrl+1]  lsp-java-add-throws ;; modify it from (c-c c-d t)
(define-key java-mode-map (kbd "C-2 T") 'my-lsp-try-catch)       ;; C-1 t  [eclipse Ctrl+1]  my-lsp-try-catch


[done] ;; add new key 
;; M-? 
(define-key java-mode-map (kbd "C-c C-v  m") 'lsp-ui-peek-find-references) ;; M-?  find referense and sort it as list 


[done ];; change key from a to p
C-c C-v p [eclipse ] lsp-ui-find-prev-reference, 
(define-key java-mode-map (kbd "C-c C-v p") 'lsp-ui-find-prev-reference) ;; find referense one by one  not  as list

[done];; change key from [C-c C-d m] to [C-2 m]
C-c C-d m            [eclipse Ctrl+2 m]   ==> lsp-java-extract-method
(define-key java-mode-map (kbd "C-2 m") 'lsp-java-extract-method)
(define-key java-mode-map (kbd "C-2 r") 'lsp-rename)  ;; [already exist] lsp-rename ==> rename local var


[done]
;; and new key to use M-x dap-debug with arguments then (compile/attach)
(define-key java-mode-map (kbd "C-c C-v d") 'dap-debug) ;; and new key to use M-x dap-debug with arguments then (compile/attach)

[done]
;; no need for update dap-java.el just put this to .emacs
;; no need to add word server before /test-runner/ 
(require  'dap-java)
(setq dap-java-test-runner   "~/.emacs.d/eclipse.jdt.ls/server/test-runner/junit-platform-console-standalone.jar")




=========[not done]=========
=========[not done]=========




company-lsp	             Define a company backend for lsp-mode.
   lsp		          Entry point for the server startup.
 lsp--managed-mode	    Mode for source buffers managed by lsp-mode.
 lsp-browser-mode	    Define mode for displaying lsp sessions.
lsp-clojure-add-missing-libspec	   Apply add-missing-libspec refactoring at point.
lsp-clojure-clean-ns	        Apply clean-ns refactoring at point.
lsp-clojure-cycle-coll	        Apply cycle-coll refactoring at point.
lsp-clojure-cycle-privacy       Apply cycle-privacy refactoring at point.
lsp-clojure-expand-let	        Apply expand-let refactoring at point.
lsp-clojure-extract-function    Move form at point into a new function named FUNCTION-NAME.
lsp-clojure-introduce-let       Move form at point into a new let binding as BINDING-NAME.
lsp-clojure-move-to-let	        Move form at point into nearest existing let binding as    BINDING-NAME.
lsp-clojure-thread-first        Apply thread-first refactoring at point.
lsp-clojure-thread-first-all    Apply thread-first-all refactoring at point.
lsp-clojure-thread-last	        Apply thread-last refactoring at point.
lsp-clojure-thread-last-all     Apply thread-last-all refactoring at point.
lsp-clojure-unwind-all	        Apply unwind-all refactoring at point.
lsp-clojure-unwind-thread       Apply unwind-thread refactoring at point.
  lsp-describe-session	        Describes current `lsp-session'.
  lsp-describe-thing-at-point     Display the full documentation of the thing at point.
     lsp-disconnect		        Disconnect the buffer from the language server.
  lsp-document-highlight	        Highlight all relevant references to the symbol under point.
      lsp-execute-code-action	        Execute code action ACTION.
 lsp-find-declaration	        Find declarations of the symbol under point.
     lsp-find-definition	        Find definitions of the symbol under point.
 lsp-find-implementation	        Find implementations of the symbol under point.
 lsp-find-references	        Find references of the symbol under point.
 lsp-find-type-definition        Find type definitions of the symbol under point.
    lsp-format-buffer	        Ask the server to format this document.
    lsp-format-region	        Ask the server to format the region, or if none is selected, the    current line.
    lsp-goto-implementation	        Find implementations of the symbol under point.
    lsp-goto-type-definition        Find type definitions of the symbol under point.
    lsp-java-actionable-notifications    Lists current actionable notifications.
    lsp-java-add-import	        Add missing import.
    lsp-java-add-throws	        Extract constant refactoring.
    lsp-java-add-unimplemented-methods       Extract constant refactoring.
    lsp-java-assign-all	        Assign to new field.
    lsp-java-assign-to-field        Assign to new field.
lsp-java-boot-lens-mode	        Toggle code-lens overlays.
    lsp-java-build-project	        Perform project build action.
lsp-java-classpath-browse       Show currently active sessions.
lsp-java-classpath-mode	        Minor mode for browsing classpath.
    lsp-java-classpath-open	        Open object at path.
lsp-java-conver-to-static-import    Convert to static import.
  lsp-java-create-field	         Create field refactoring.
  lsp-java-create-local	         Create local refactoring.
   lsp-java-create-parameter        Create parameter refactoring.
   lsp-java-extract-method	         Extract method refactoring.
  lsp-java-extract-to-constant     Extract constant refactoring.
  lsp-java-extract-to-local-variable    Extract local variable refactoring.
  lsp-java-generate-equals-and-hash-code    Generate `hashCode' and `equals' methods.
  lsp-java-generate-getters-and-setters    Generate getter and setters with prompt.
  lsp-java-generate-overrides      Override methods.
  lsp-java-generate-to-string      Generate `toString' method.
  lsp-java-organize-imports         auto import
  lsp-java-spring-initializr       Emacs frontend for https://start.spring.io/.
  lsp-java-update-project-configuration    Update project configuration.
  lsp-java-update-project-uris     Update WORKSPACE project uris.
   lsp-java-update-server	         Update LDT LS server.
   lsp-lens-hide		         Delete all lenses. ????? what is lens
lsp-lens-mode		         toggle code-lens overlays
lsp-lens-show		         Display lenses in the buffer.
lsp-log-io-mode		         Special mode for viewing IO logs.
lsp-log-io-next		         (not documented)
lsp-log-io-prev		         (not documented)
 lsp-metals-build-connect         Unconditionally cancel existing build server connection and    re-connect.
 lsp-metals-build-import	         Unconditionally run `sbt bloopInstall` and re-connect to the build    server.
 lsp-metals-doctor-run	         Open the Metals doctor to troubleshoot potential build problems.
 lsp-metals-sources-scan	         Walk all files in the workspace and index where symbols are    defined.
lsp-mode		         (not documented)
lsp-mode-menu		         Menu for lsp-mode.
   lsp-organize-imports	         Perform the source.organizeImports code action.
   lsp-rename		         Rename the symbol (and all references to it) under point to    NEWNAME.
   lsp-restart-workspace	         (not documented)
 lsp-shutdown-workspace	         Shutdown language server.
lsp-switch-to-io-log-buffer      (not documented)
  lsp-treemacs-errors-list         Display treemacs error list.
lsp-ui-doc-hide		         Hide hover information popup.
lsp-ui-doc-mode		         Minor mode for showing hover information in child frame.
 lsp-ui-doc-show		  Trigger display hover information popup.
 lsp-ui-find-next-reference       Find next reference of the symbol at point.
 lsp-ui-find-prev-reference       Find previous reference of the symbol at point.
 lsp-ui-find-workspace-symbol     List project-wide symbols matching the query string PATTERN.
lsp-ui-flycheck-list	         List all the diagnostics in the whole workspace.
lsp-ui-flycheck-list--quit       (not documented)
lsp-ui-flycheck-list--view       (not documented)
lsp-ui-flycheck-list--visit      (not documented)
lsp-ui-flycheck-list-mode        Mode showing flycheck diagnostics for the whole workspace.
 lsp-ui-imenu		         (not documented)
 lsp-ui-imenu--kill	         (not documented)
 lsp-ui-imenu--next-kind	         (not documented)
 lsp-ui-imenu--prev-kind	         (not documented)
 lsp-ui-imenu--view	         (not documented)
 lsp-ui-imenu--visit	         (not documented)
 lsp-ui-imenu-mode	         Mode showing imenu entries.
 lsp-ui-mode		         Toggle language server UI mode on or off.
 lsp-ui-peek--abort	         (not documented)
 lsp-ui-peek--goto-xref	         Go to a reference/definition.
 lsp-ui-peek--goto-xref-other-window    (not documented)
 lsp-ui-peek--select-next         (not documented)
 lsp-ui-peek--select-next-file    (not documented)
 lsp-ui-peek--select-prev         (not documented)
 lsp-ui-peek--select-prev-file    (not documented)
 lsp-ui-peek--toggle-file         (not documented)
 lsp-ui-peek-enable	         (not documented)
 lsp-ui-peek-find-definitions     Find definitions to the IDENTIFIER at point.
 lsp-ui-peek-find-implementation	   Find implementation locations of the symbol at point.
 lsp-ui-peek-find-references       Find references to the IDENTIFIER at point.
 lsp-ui-peek-find-workspace-symbol    Find symbols in the worskpace.
 lsp-ui-peek-mode	         Mode for lsp-ui-peek.
lsp-ui-sideline-apply-code-actions    Choose and apply code action(s) on the current line.
lsp-ui-sideline-mode	         Minor mode for showing information of current line.
lsp-ui-sideline-toggle-symbols-info    Toggle display of symbols informations.
  lsp-workspace-blacklist-remove    Remove PROJECT-ROOT from the workspace blacklist.
  lsp-workspace-folders-add       Add PROJECT-ROOT to the list of workspace folders.
  lsp-workspace-folders-open      Open the directory located at PROJECT-ROOT
  lsp-workspace-folders-remove    Remove PROJECT-ROOT from the list of workspace folders.
  lsp-workspace-folders-switch    Open the directory located at PROJECT-ROOT
  lsp-workspace-restart	        Restart the workspace WORKSPACE and the language server associated    with it
  lsp-workspace-show-log	         (not documented)
  lsp-workspace-shutdown	         Shut the workspace WORKSPACE and the language server associated    with it
dap-breakpoint-add    Add breakpoint on the current line.
dap-breakpoint-condition    Set breakpoint condition for the breakpoint at point.
dap-breakpoint-delete    Delete breakpoint on the current line.
dap-breakpoint-delete-all    Delete all breakpoints.
dap-breakpoint-hit-condition    Set breakpoint hit condition for the breakpoint at point.
dap-breakpoint-log-message    Set breakpoint log message for the breakpoint at point.
dap-breakpoint-toggle    Toggle breakpoint on the current line.
 dap-continue    Call continue for the currently active session and thread.
 dap-debug    Run debug configuration DEBUG-ARGS.
 dap-debug-edit-template    Edit registered template DEBUG-ARGS.
 dap-debug-last    Debug last configuration.
 dap-debug-recent    Debug last configuration.
 dap-delete-all-sessions    Terminate/remove all sessions.
 dap-delete-session    Remove DEBUG-SESSION.
 dap-disconnect    Disconnect from the currently active session.
 dap-eval    Eval and print EXPRESSION.
 dap-eval-region    Evaluate the region between START and END.
 dap-eval-thing-at-point    Eval and print EXPRESSION.
 dap-go-to-output-buffer    Go to output buffer.
 dap-hydra    Run `dap-hydra/body'.
dap-hydra/body    Call the body in the "dap-hydra" hydra.
dap-hydra/dap-breakpoint-add    Call the head `dap-breakpoint-add' in the "dap-hydra" hydra.
dap-hydra/dap-breakpoint-condition    Call the head `dap-breakpoint-condition' in the "dap-hydra" hydra.
dap-hydra/dap-breakpoint-delete    Call the head `dap-breakpoint-delete' in the "dap-hydra" hydra.
dap-hydra/dap-breakpoint-hit-condition    Call the head `dap-breakpoint-hit-condition' in the "dap-hydra"    hydra.
dap-hydra/dap-breakpoint-log-message    Call the head `dap-breakpoint-log-message' in the "dap-hydra"    hydra.
dap-hydra/dap-breakpoint-toggle    Call the head `dap-breakpoint-toggle' in the "dap-hydra" hydra.
dap-hydra/dap-continue    Call the head `dap-continue' in the "dap-hydra" hydra.
dap-hydra/dap-disconnect    Call the head `dap-disconnect' in the "dap-hydra" hydra.
dap-hydra/dap-eval    Call the head `dap-eval' in the "dap-hydra" hydra.
dap-hydra/dap-eval-region    Call the head `dap-eval-region' in the "dap-hydra" hydra.
dap-hydra/dap-eval-thing-at-point    Call the head `dap-eval-thing-at-point' in the "dap-hydra" hydra.
dap-hydra/dap-next    Call the head `dap-next' in the "dap-hydra" hydra.
dap-hydra/dap-restart-frame    Call the head `dap-restart-frame' in the "dap-hydra" hydra.
dap-hydra/dap-step-in    Call the head `dap-step-in' in the "dap-hydra" hydra.
dap-hydra/dap-step-out    Call the head `dap-step-out' in the "dap-hydra" hydra.
dap-hydra/dap-switch-session    Call the head `dap-switch-session' in the "dap-hydra" hydra.
dap-hydra/dap-switch-stack-frame    Call the head `dap-switch-stack-frame' in the "dap-hydra" hydra.
dap-hydra/dap-switch-thread    Call the head `dap-switch-thread' in the "dap-hydra" hydra.
dap-hydra/dap-ui-breakpoints    Call the head `dap-ui-breakpoints' in the "dap-hydra" hydra.
dap-hydra/dap-ui-inspect    Call the head `dap-ui-inspect' in the "dap-hydra" hydra.
dap-hydra/dap-ui-inspect-region    Call the head `dap-ui-inspect-region' in the "dap-hydra" hydra.
dap-hydra/dap-ui-inspect-thing-at-point    Call the head `dap-ui-inspect-thing-at-point' in the "dap-hydra"    hydra.
dap-hydra/dap-ui-locals    Call the head `dap-ui-locals' in the "dap-hydra" hydra.
dap-hydra/dap-ui-sessions    Call the head `dap-ui-sessions' in the "dap-hydra" hydra.
dap-hydra/nil    Call the head `nil' in the "dap-hydra" hydra.
 dap-java-debug    Start debug session with DEBUG-ARGS.
 dap-java-debug-test-class    Debug JUnit test class.
 dap-java-debug-test-method    Debug JUnit test.
 dap-java-run-test-class    Run JUnit test.
 dap-java-run-test-method    Run JUnit test.
 dap-mode    Global minor mode for DAP mode.
 dap-mode-mouse-set-clear-breakpoint    Set or remove a breakpoint at the position represented by an
 dap-next    Debug next.
 dap-restart-frame    Restarts current frame.
 dap-step-in    Debug step in.
 dap-step-out    Debug step in.
 dap-stop-thread    Stop selected thread.
 dap-switch-session    Switch current session interactively.
 dap-switch-stack-frame   Switch stackframe by selecting another stackframe stackframes from    current thread.
 dap-switch-thread    Switch current thread.
dap-turn-on-dap-mode    Turn on function `dap-mode'.
 dap-ui-breakpoints    List breakpoints.
 dap-ui-breakpoints-delete    Delete BREAKPOINT on the current line.
 dap-ui-breakpoints-delete-selected    Delete breakpoint on the current line.
 dap-ui-breakpoints-goto    Go to breakpoint under cursor.
 dap-ui-breakpoints-ui-list-mode    Major mode for displaying 'dap-ui-breakpoints-ui' entries in 'list'    buffer.
 dap-ui-debug-sessions-send    Send current selection for evaluation to the DAP server.
 dap-ui-inspect    Inspect EXPRESSION.
 dap-ui-inspect-mode    Inspect mode.
 dap-ui-inspect-region    Inspect the region between START and END.
 dap-ui-inspect-thing-at-point    Inspect thing at point.
 dap-ui-locals    Display locals view.
dap-ui-locals-mode    Locals mode.
dap-ui-mode    Displaying DAP visuals.
dap-ui-repl    Start a JavaScript REPL to be evaluated in the visiting browser.
dap-ui-sessions    Show currently active sessions.
dap-ui-sessions-delete-session    Delete session under cursor.
dap-ui-sessions-mode    UI Session list minor mode.
dap-ui-sessions-select    Select the element under cursor.


# lsp M-x set variables ###

 company-lsp-async  t
 company-lsp-cache-candidates  nil
 company-lsp-enable-additional-text-edit  t
 company-lsp-enable-recompletion  t
 company-lsp-enable-snippet  t
 company-lsp-enable-trigger-kind  t
 company-lsp-filter-candidates  ((bingo) (ccls) (clangd) (cquery) (go-bingo) (gopls) (javacomp) (jdtls) (pyls) (rls) (t . t))
 company-lsp-match-candidate-predicate   company-lsp-match-candidate-flex
 lsp-after-diagnostics-hook  nil
 lsp-after-initialize-hook  nil
 lsp-after-open-hook  (dap-ui--after-open dap--after-open)
 lsp-after-uninitialized-hook  nil
 lsp-auto-configure  t
 lsp-auto-execute-action  t
 lsp-auto-guess-root  nil
 lsp-auto-require-clients  t
 lsp-before-apply-edits-hook  nil
 lsp-before-initialize-hook  (#[0 "\300\301\302\"\207" [lsp-register-client-capabilities company-lsp company-lsp--client-capabilities] 3])
 lsp-before-open-hook  nil
 lsp-before-save-edits  t
lsp-clients-clangd-args  nil
lsp-clients-clangd-executable  "clangd"
lsp-clients-dart-server-command  "/root/.pub-cache/bin/dart_language_server"
lsp-clients-elixir-server-executable  "language_server.sh"
lsp-clients-flow-server  "flow"
lsp-clients-flow-server-args  ("lsp")
lsp-clients-fortls-args  nil
lsp-clients-fortls-executable  "fortls"
lsp-clients-go-diagnostics-enabled  t
lsp-clients-go-format-tool  "goimports"
lsp-clients-go-func-snippet-enabled  t
lsp-clients-go-gocode-completion-enabled  t
lsp-clients-go-imports-local-prefix  ""
lsp-clients-go-library-directories  ("/usr")
lsp-clients-go-max-parallelism  nil
lsp-clients-go-server  "bingo"
lsp-clients-go-server-args  nil
lsp-clients-go-use-binary-pkg-cache  t
lsp-clients-hack-command  ("hh_client" "lsp" "--from" "emacs")
lsp-clients-javascript-typescript-server  "javascript-typescript-stdio"
lsp-clients-php-iph-server-command  ("intelephense" "--stdio")
lsp-clients-php-server-command  ("php" "/root/.composer/vendor/felixfbecker/language-server/bin/php-language-server.php")
lsp-clients-python-command  ("pyls")
lsp-clients-python-library-directories  ("/usr/")
lsp-clients-typescript-javascript-server-args  nil
lsp-clients-typescript-server  "typescript-language-server"
lsp-clients-typescript-server-args  ("--stdio")
lsp-clojure-server-command  ("bash" "-c" "clojure-lsp")
lsp-css-completion-trigger-property-value-completion  t
lsp-css-experimental-custom-data  nil
lsp-css-lint-arguments-in-color-function  "error"
lsp-css-lint-box-model  "ignore"
lsp-css-lint-compatible-vendor-prefixes  "ignore"
lsp-css-lint-duplicate-properties  "ignore"
lsp-css-lint-empty-rules  "warning"
lsp-css-lint-float  "ignore"
lsp-css-lint-font-face-properties  "warning"
lsp-css-lint-hex-color-length  "error"
lsp-css-lint-id-selector  "ignore"
lsp-css-lint-ie-hack  "ignore"
lsp-css-lint-import-statement  "ignore"
lsp-css-lint-important  "ignore"
lsp-css-lint-property-ignored-due-to-display  "warning"
lsp-css-lint-universal-selector  "ignore"
lsp-css-lint-unknown-at-rules  "warning"
lsp-css-lint-unknown-properties  "warning"
lsp-css-lint-unknown-vendor-specific-properties  "ignore"
lsp-css-lint-valid-properties  nil
lsp-css-lint-vendor-prefix  "warning"
lsp-css-lint-zero-units  "ignore"
lsp-css-trace-server  "off"
lsp-css-validate  t
lsp-dart-analysis-sdk-dir  "~/flutter/bin/cache/dart-sdk/"
lsp-dart-analysis-server-command  nil
 lsp-debounce-full-sync-notifications  t
 lsp-debounce-full-sync-notifications-interval  1.0
 lsp-diagnostics-updated-hook  nil
 lsp-disabled-clients  nil
 lsp-document-highlight-delay  0.2
   lsp-document-sync-method  nil
 lsp-eldoc-enable-hover  t
 lsp-eldoc-enable-signature-help  t
 lsp-eldoc-hook  (lsp-hover)
 lsp-eldoc-prefer-signature-help  t
 lsp-eldoc-render-all  nil
lsp-elm-elm-format-path  "elm-format"
lsp-elm-elm-language-server-path  "elm-language-server"
lsp-elm-elm-path  "elm"
lsp-elm-elm-test-path  "elm-test"
lsp-elm-server-args  ("--stdio")
lsp-elm-trace-server  nil
lsp-elm-treesitter-runtime  "node"
     lsp-enable-completion-at-point  t
     lsp-enable-file-watchers  t
 lsp-enable-folding  t
 lsp-enable-indentation  t
 lsp-enable-links  t
 lsp-enable-on-type-formatting  t
 lsp-enable-snippet  t
 lsp-enable-symbol-highlighting  t
 lsp-enable-xref  t
 lsp-file-watch-ignored  ("[/\\\\]\\.git$" "[/\\\\]\\.hg$" "[/\\\\]\\.bzr$" "[/\\\\]_darcs$" "[/\\\\]\\.svn$" "[/\\\\]_FOSSIL_$" "[/\\\\]\\.idea$" "[/\\\\]\\.ensime_cache$" "[/\\\\]\\.eunit$" "[/\\\\]node_modules$" "[/\\\\]\\.fslckout$" "[/\\\\]\\.tox$" ...)
 lsp-folding-line-folding-only  nil
 lsp-folding-range-limit  nil
lsp-fsharp-server-args  nil
lsp-fsharp-server-download-url  "https://ci.appveyor.com/api/projects/fsautocomplete/fsautocomplete/artifacts/bin/pkgs/fsautocomplete.netcore.zip?branch=master"
lsp-fsharp-server-install-dir  "~/.emacs.d/fsautocomplete/"
lsp-fsharp-server-runtime  net-core
lsp-gopls-server-args  nil
lsp-gopls-use-placeholders  t
lsp-groovy-server-install-dir  "~/.emacs.d/groovy-language-server/"
lsp-html-auto-closing-tags  t
lsp-html-experimental-custom-data  nil
lsp-html-format-content-unformatted  "pre,code,textarea"
lsp-html-format-enable  t
lsp-html-format-end-with-newline  nil
lsp-html-format-extra-liners  "head, body, /html"
lsp-html-format-indent-handlebars  nil
lsp-html-format-indent-inner-html  nil
lsp-html-format-max-preserve-new-lines  nil
lsp-html-format-preserve-new-lines  t
lsp-html-format-unformatted  "wbr"
lsp-html-format-wrap-attributes  "auto"
lsp-html-format-wrap-line-length  120
lsp-html-server-command  ("html-languageserver" "--stdio") ;;command to install html server ==>>  npm install -g  vscode-html-languageserver-bin
lsp-html-suggest-html5  t
lsp-html-trace-server  "off"
lsp-html-validate-scripts  t
lsp-html-validate-styles  t
 lsp-imenu-container-name-separator  "/"
 lsp-imenu-show-container-name  t
 lsp-imenu-sort-methods  (kind name)
 lsp-intelephense-completion-fully-qualify-global-constants-and-functions  nil
 lsp-intelephense-completion-insert-use-declaration  t
 lsp-intelephense-files-associations  ["*.php" "*.phtml"]
 lsp-intelephense-files-exclude  ["**/.git/**" "**/.svn/**" "**/.hg/**" "**/CVS/**" "**/.DS_Store/**" "**/node_modules/**" "**/bower_components/**" "**/vendor/**/{Test,test,Tests,tests}/**"]
 lsp-intelephense-files-max-size  1000000
 lsp-intelephense-format-enable  t
 lsp-intelephense-server-command  ("intelephense" "--stdio")
 lsp-intelephense-storage-path  "/root/.emacs.d/lsp-cache"
 lsp-intelephense-stubs  ["apache" "bcmath" "bz2" "calendar" "com_dotnet" "Core" "csprng" "ctype" "curl" "date" "dba" "dom" ...]
 lsp-intelephense-trace-server  "off"
 lsp-io-messages-max  t
   lsp-java-9-args  ("--add-modules=ALL-SYSTEM" "--add-opens java.base/java.util=ALL-UNNAMED" "--add-opens java.base/java.lang=ALL-UNNAMED")
   lsp-java-autobuild-enabled  t
   lsp-java-bundles  nil
   lsp-java-code-generation-generate-comments  nil
 lsp-java-code-generation-hash-code-equals-use-instanceof  nil
 lsp-java-code-generation-hash-code-equals-use-java7objects  nil
 lsp-java-code-generation-to-string-code-style  "STRING_CONCATENATION"
 lsp-java-code-generation-to-string-limit-elements  0
 lsp-java-code-generation-to-string-list-array-contents  t
 lsp-java-code-generation-to-string-skip-null-values  nil
 lsp-java-code-generation-to-string-template  "${object.className} [${member.name()}=${member.value}, ${otherMembers}]"
   lsp-java-code-generation-use-blocks  nil
 lsp-java-completion-enabled  t
 lsp-java-completion-favorite-static-members  ["org.junit.Assert.*" "org.junit.Assume.*" "org.junit.jupiter.api.Assertions.*" "org.junit.jupiter.api.Assumptions.*" "org.junit.jupiter.api.DynamicContainer.*" "org.junit.jupiter.api.DynamicTest.*" "org.mockito.Mockito.*" "org.mockito.ArgumentMatchers.*" "org.mockito.Answers.*"]
 lsp-java-completion-guess-method-arguments  t
 lsp-java-completion-import-order  ["java" "javax" "com" "org"]
 lsp-java-completion-overwrite  t
   lsp-java-configuration-check-project-settings-exclusions  t
   lsp-java-configuration-maven-user-settings  nil
   lsp-java-configuration-update-build-configuration  "automatic"
   lsp-java-content-provider-preferred  nil
   lsp-java-errors-incomplete-classpath-severity  "warning"
 lsp-java-folding-range-enabled  t
 lsp-java-format-comments-enabled  t
 lsp-java-format-enabled  t
 lsp-java-format-on-type-enabled  t
 lsp-java-format-settings-profile  nil
 lsp-java-format-settings-url  nil
 lsp-java-implementations-code-lens-enabled  nil
 lsp-java-import-exclusions  ["**/node_modules/**" "**/.metadata/**" "**/archetype-resources/**" "**/META-INF/maven/**"]
 lsp-java-import-gradle-enabled  t
 lsp-java-import-maven-enabled  t
 lsp-java-inhibit-message  t
 lsp-java-java-path  "java"
 lsp-java-jdt-download-url  "http://download.eclipse.org/jdtls/snapshots/jdt-language-server-latest.tar.gz"
 (setq  lsp-java-maven-download-sources t )   nil
  lsp-java-max-concurrent-builds  1
  lsp-java-pop-buffer-function  lsp-java-show-buffer
  lsp-java-progress-reports-enabled  t
  lsp-java-references-code-lens-enabled  nil
  lsp-java-save-actions-organize-imports  nil
  lsp-java-server-install-dir  "~/.emacs.d/eclipse.jdt.ls/server/"
  lsp-java-signature-help-enabled  t
  lsp-java-theme  "vscode"
  lsp-java-themes-directory  "/root/.emacs.d/elpa/lsp-java-20190712.558/icons"
  lsp-java-trace-server  "off"
  lsp-java-vmargs  ("-noverify" "-Xmx1G" "-XX:+UseG1GC" "-XX:+UseStringDeduplication")
  lsp-java-workspace-cache-dir  "/root/.emacs.d/workspace/.cache/"
  lsp-java-workspace-dir  "/root/.emacs.d/workspace/"
lsp-javascript-auto-closing-tags  t
lsp-javascript-format-enable  t
lsp-javascript-format-insert-space-after-comma-delimiter  t
lsp-javascript-format-insert-space-after-constructor  nil
lsp-javascript-format-insert-space-after-function-keyword-for-anonymous-functions  t
lsp-javascript-format-insert-space-after-keywords-in-control-flow-statements  t
lsp-javascript-format-insert-space-after-opening-and-before-closing-jsx-expression-braces  nil
lsp-javascript-format-insert-space-after-opening-and-before-closing-nonempty-braces  t
lsp-javascript-format-insert-space-after-opening-and-before-closing-nonempty-brackets  nil
lsp-javascript-format-insert-space-after-opening-and-before-closing-nonempty-parenthesis  nil
lsp-javascript-format-insert-space-after-opening-and-before-closing-template-string-braces  nil
lsp-javascript-format-insert-space-after-semicolon-in-for-statements  t
lsp-javascript-format-insert-space-before-and-after-binary-operators  t
lsp-javascript-format-insert-space-before-function-parenthesis  nil
lsp-javascript-format-place-open-brace-on-new-line-for-control-blocks  nil
lsp-javascript-format-place-open-brace-on-new-line-for-functions  nil
lsp-javascript-implicit-project-config-check-js  nil
lsp-javascript-implicit-project-config-experimental-decorators  nil
lsp-javascript-preferences-import-module-specifier  "auto"
lsp-javascript-preferences-quote-style  "auto"
lsp-javascript-preferences-rename-shorthand-properties  t
lsp-javascript-references-code-lens-enabled  nil
lsp-javascript-suggest-auto-imports  t
lsp-javascript-suggest-complete-function-calls  nil
lsp-javascript-suggest-complete-js-docs  t
lsp-javascript-suggest-enabled  t
lsp-javascript-suggest-names  t
lsp-javascript-suggest-paths  t
lsp-javascript-suggestion-actions-enabled  t
lsp-javascript-update-imports-on-file-move-enabled  "prompt"
lsp-javascript-validate-enable  t
 lsp-json-use-lists  nil
 lsp-keep-workspace-alive  t
 lsp-lens-check-interval  0.1
 lsp-lens-debounce-interval  0.7
 lsp-links-check-internal  0.1
 lsp-log-io  nil
 lsp-log-max  2048
 lsp-metals-gradle-script  ""
 lsp-metals-java-home  ""
 lsp-metals-sbt-script  ""
 lsp-metals-scalafmt-config-path  ""
 lsp-metals-server-args  nil
 lsp-metals-server-command  "metals-emacs"
lsp-ocaml-lang-server-command  ("ocaml-language-server" "--stdio")
lsp-ocaml-ocaml-lang-server-command  ("ocaml-language-server" "--stdio")
 lsp-on-hover-hook  nil
   lsp-prefer-flymake  t
 lsp-print-io  nil
 lsp-print-performance  nil
lsp-pyls-configuration-sources  ["pycodestyle"]
lsp-pyls-plugins-jedi-completion-enabled  t
lsp-pyls-plugins-jedi-completion-include-params  t
lsp-pyls-plugins-jedi-definition-enabled  t
lsp-pyls-plugins-jedi-definition-follow-builtin-imports  t
lsp-pyls-plugins-jedi-definition-follow-imports  t
lsp-pyls-plugins-jedi-hover-enabled  t
lsp-pyls-plugins-jedi-references-enabled  t
lsp-pyls-plugins-jedi-signature-help-enabled  t
lsp-pyls-plugins-jedi-symbols-all-scopes  t
lsp-pyls-plugins-jedi-symbols-enabled  t
lsp-pyls-plugins-mccabe-enabled  t
lsp-pyls-plugins-mccabe-threshold  15
lsp-pyls-plugins-preload-enabled  t
lsp-pyls-plugins-preload-modules  nil
lsp-pyls-plugins-pycodestyle-enabled  t
lsp-pyls-plugins-pycodestyle-exclude  nil
lsp-pyls-plugins-pycodestyle-filename  nil
lsp-pyls-plugins-pycodestyle-hang-closing  nil
lsp-pyls-plugins-pycodestyle-ignore  nil
lsp-pyls-plugins-pycodestyle-max-line-length  nil
lsp-pyls-plugins-pycodestyle-select  nil
lsp-pyls-plugins-pydocstyle-add-ignore  nil
lsp-pyls-plugins-pydocstyle-add-select  nil
lsp-pyls-plugins-pydocstyle-convention  nil
lsp-pyls-plugins-pydocstyle-enabled  nil
lsp-pyls-plugins-pydocstyle-ignore  nil
lsp-pyls-plugins-pydocstyle-match  "(?!test_).*\\.py"
lsp-pyls-plugins-pydocstyle-match-dir  "[^\\.].*"
lsp-pyls-plugins-pydocstyle-select  nil
lsp-pyls-plugins-pyflakes-enabled  t
lsp-pyls-plugins-pylint-enabled  t
lsp-pyls-plugins-rope-completion-enabled  nil
lsp-pyls-plugins-yapf-enabled  t
lsp-pyls-rope-extension-modules  nil
lsp-pyls-rope-rope-folder  nil
lsp-pyls-server-command  ("pyls")
   lsp-report-if-no-buffer  t
   lsp-response-timeout  10
   lsp-restart  interactive
lsp-rust-all-features  nil
lsp-rust-all-targets  t
lsp-rust-build-bin  nil
lsp-rust-build-command  nil
lsp-rust-build-lib  nil
lsp-rust-build-on-save  nil
lsp-rust-cfg-test  nil
lsp-rust-clear-env-rust-log  t
lsp-rust-clippy-preference  "opt-in"
lsp-rust-features  []
lsp-rust-full-docs  nil
lsp-rust-jobs  nil
lsp-rust-library-directories  ("~/.cargoery/src" "~/.rustup/toolchains")
lsp-rust-no-default-features  nil
lsp-rust-racer-completion  t
lsp-rust-rls-server-command  ("rls")
lsp-rust-rustflags  nil
lsp-rust-rustfmt-path  nil
lsp-rust-show-hover-context  t
lsp-rust-show-warnings  t
lsp-rust-sysroot  nil
lsp-rust-target  nil
lsp-rust-target-dir  nil
lsp-rust-unstable-features  nil
lsp-rust-use-crate-blacklist  t
lsp-rust-wait-to-build  nil
    lsp-session-file  "/root/.emacs.d/.lsp-session-v1"
    lsp-signature-render-all  t
lsp-solargraph-autoformat  nil
lsp-solargraph-completion  t
lsp-solargraph-definitions  t
lsp-solargraph-diagnostics  t
lsp-solargraph-folding  t
lsp-solargraph-formatting  t
lsp-solargraph-hover  t
lsp-solargraph-log-level  "warn"
lsp-solargraph-references  t
lsp-solargraph-rename  t
lsp-solargraph-symbols  t
   lsp-symbol-highlighting-skip-current  nil
lsp-typescript-auto-closing-tags  t
lsp-typescript-check-npm-is-installed  t
lsp-typescript-disable-automatic-type-acquisition  nil
lsp-typescript-format-enable  t
lsp-typescript-format-insert-space-after-comma-delimiter  t
lsp-typescript-format-insert-space-after-constructor  nil
lsp-typescript-format-insert-space-after-function-keyword-for-anonymous-functions  t
lsp-typescript-format-insert-space-after-keywords-in-control-flow-statements  t
lsp-typescript-format-insert-space-after-opening-and-before-closing-jsx-expression-braces  nil
lsp-typescript-format-insert-space-after-opening-and-before-closing-nonempty-braces  t
lsp-typescript-format-insert-space-after-opening-and-before-closing-nonempty-brackets  nil
lsp-typescript-format-insert-space-after-opening-and-before-closing-nonempty-parenthesis  nil
lsp-typescript-format-insert-space-after-opening-and-before-closing-template-string-braces  nil
lsp-typescript-format-insert-space-after-semicolon-in-for-statements  t
lsp-typescript-format-insert-space-after-type-assertion  nil
lsp-typescript-format-insert-space-before-and-after-binary-operators  t
lsp-typescript-format-insert-space-before-function-parenthesis  nil
lsp-typescript-format-place-open-brace-on-new-line-for-control-blocks  nil
lsp-typescript-format-place-open-brace-on-new-line-for-functions  nil
lsp-typescript-implementations-code-lens-enabled  nil
lsp-typescript-locale  nil
lsp-typescript-npm  nil
lsp-typescript-preferences-import-module-specifier  "auto"
lsp-typescript-preferences-quote-style  "auto"
lsp-typescript-preferences-rename-shorthand-properties  t
lsp-typescript-references-code-lens-enabled  nil
lsp-typescript-report-style-checks-as-warnings  t
lsp-typescript-suggest-auto-imports  t
lsp-typescript-suggest-complete-function-calls  nil
lsp-typescript-suggest-complete-js-docs  t
lsp-typescript-suggest-enabled  t
lsp-typescript-suggest-paths  t
lsp-typescript-suggestion-actions-enabled  t
lsp-typescript-surveys-enabled  t
lsp-typescript-tsc-auto-detect  "on"
lsp-typescript-tsdk  nil
lsp-typescript-tsserver-log  "off"
lsp-typescript-tsserver-plugin-paths  nil
lsp-typescript-tsserver-trace  "off"
lsp-typescript-update-imports-on-file-move-enabled  "prompt"
lsp-typescript-validate-enable  t
  lsp-ui-doc-border  "white"
  (setq lsp-ui-doc-delay 2.0)  0.2
    lsp-ui-doc-enable  t
    lsp-ui-doc-header  nil
    lsp-ui-doc-include-signature  nil
    (setq lsp-ui-doc-max-height  8)    30
    (setq lsp-ui-doc-max-width   50)    150
    (setq lsp-ui-doc-position  'bottom)  'top 'bottom 'at-point

  (setq lsp-ui-doc-use-childframe t)  nil
  (setq lsp-ui-doc-use-webkit nil)  nil

    lsp-ui-flycheck-enable  t
    lsp-ui-flycheck-list-position  bottom
    lsp-ui-flycheck-live-reporting  t
 lsp-ui-imenu-colors  ("deep sky blue" "green3")
 lsp-ui-imenu-enable  t
 lsp-ui-imenu-kind-position  top
 lsp-ui-peek-always-show  nil
 lsp-ui-peek-enable  t
 lsp-ui-peek-fontify  on-demand
 lsp-ui-peek-list-width  50
 lsp-ui-peek-peek-height  20
 lsp-ui-sideline-delay  0.2
 lsp-ui-sideline-diagnostic-max-lines  20
 lsp-ui-sideline-enable  nil
 lsp-ui-sideline-ignore-duplicate  nil
 lsp-ui-sideline-show-code-actions  t
 lsp-ui-sideline-show-diagnostics  t
 lsp-ui-sideline-show-hover  t
 lsp-ui-sideline-show-symbol  t
 lsp-ui-sideline-update-mode  line
 lsp-use-native-json  t

lsp-vetur-completion-auto-import  t
lsp-vetur-completion-tag-casing  "kebab"
lsp-vetur-completion-use-scaffold-snippets  t
lsp-vetur-format-default-formatter-css  "prettier"
lsp-vetur-format-default-formatter-html  "prettyhtml"
lsp-vetur-format-default-formatter-js  "prettier"
lsp-vetur-format-default-formatter-less  "prettier"
lsp-vetur-format-default-formatter-options  ((js-beautify-html (wrap_attributes . "force-expand-multiline")) (prettyhtml (printWidth . 100) (singleQuote . :json-false) (wrapAttributes . :json-false) (sortAttributes . :json-false)))
lsp-vetur-format-default-formatter-postcss  "prettier"
lsp-vetur-format-default-formatter-scss  "prettier"
lsp-vetur-format-default-formatter-stylus  "stylus-supremacy"
lsp-vetur-format-default-formatter-ts  "prettier"
lsp-vetur-format-enable  t
lsp-vetur-format-options-tab-size  2
lsp-vetur-format-options-use-tabs  nil
lsp-vetur-format-script-initial-indent  nil
lsp-vetur-format-style-initial-indent  nil
lsp-vetur-grammar-custom-blocks  ((docs . "md") (i18n . "json"))
lsp-vetur-server  ("vls")
lsp-vetur-server-command  ("vls")
lsp-vetur-trace-server  "off"
lsp-vetur-use-workspace-dependencies  nil
lsp-vetur-validation-script  t
lsp-vetur-validation-style  t
lsp-vetur-validation-template  t
    lsp-workspace-folders-changed-hook  nil
lsp-xml-catalogs  nil
lsp-xml-completion-auto-close-tags  t
lsp-xml-file-associations  nil
lsp-xml-format-enabled  t
lsp-xml-format-join-cdata-lines  nil
lsp-xml-format-join-comment-lines  nil
lsp-xml-format-join-content-lines  nil
lsp-xml-format-preserve-empty-content  nil
lsp-xml-format-quotations  "doubleQuotes"
lsp-xml-format-space-before-empty-close-tag  t
lsp-xml-format-split-attributes  nil
lsp-xml-jar-file  "/root/.emacs.d/org.eclipse.lsp4xml-0.3.0-uber.jar"
lsp-xml-logs-client  t
lsp-xml-server-command  ("java" "-jar" "/root/.emacs.d/org.eclipse.lsp4xml-0.3.0-uber.jar");;  download it from https://github.com/angelozerr/lsp4xml/releases/tag/0.3.0

lsp-xml-server-vmargs  "-noverify -Xmx64M -XX:+UseG1GC -XX:+UseStringDeduplication"
lsp-xml-server-work-dir  "~/.lsp4xml" ==>> which have the xsd files which extracted from jar file . hahahhiiiii
lsp-xml-trace-server  "off"
lsp-xml-validation-enabled  t
lsp-xml-validation-no-grammar  "hint"
lsp-xml-validation-schema  t

  dap--breakpoints-file                "/root/.emacs.d/.dap-breakpoints"
dap--debug-configuration   (("Hi (Test5)<10>" :type "java" :mainClass "first.Hi" :projectName "Test5" :args "" :cwd "/home/myLSP/lspWorkspace/Test5/" :stopOnEntry ...) ("Hi (Test5)<9>" :type "java" :mainClass "first.Hi" :projectName "Test5" :args "" :cwd "/home/myLSP/lspWorkspace/Test5/" :stopOnEntry ...) ("Hi (Test5)<8>" :type "java" :mainClass "first.Hi" :projectName "Test5" :args "" :cwd "/home/myLSP/lspWorkspace/Test5/" :stopOnEntry ...) ("Hi (Test5)<7>" :type "java" :mainClass "first.Hi" :projectName "Test5" :args "" :cwd "/home/myLSP/lspWorkspace/Test5/" :stopOnEntry ...) ("Hi (Test5)<6>" :type "java" :mainClass "first.Hi" :projectName "Test5" :args "" :cwd "/home/myLSP/lspWorkspace/Test5/" :stopOnEntry ...) ("Hi (Test5)<5>" :type "java" :mainClass "first.Hi" :projectName "Test5" :args "" :cwd "/home/myLSP/lspWorkspace/Test5/" :stopOnEntry ...) ("Hi (Test5)<4>" :type "java" :mainClass "first.Hi" :projectName "Test5" :args "" :cwd "/home/myLSP/lspWorkspace/Test5/" :stopOnEntry ...) ("Hi (Test5)<3>" :type "java" :mainClass "first.Hi" :projectName "Test5" :args "" :cwd "/home/myLSP/lspWorkspace/Test5/" :stopOnEntry ...) ("Hi (Test5)<2>" :type "java" :mainClass "first.Hi" :projectName "Test5" :args "" :cwd "/home/myLSP/lspWorkspace/Test5/" :stopOnEntry ...) ("Hi (Test5)<1>" :type "java" :mainClass "first.Hi" :projectName "Test5" :args "" :cwd "/home/myLSP/lspWorkspace/Test5/" :stopOnEntry ...) ("Hi (Test5)" :type "java" :mainClass "first.Hi" :projectName "Test5" :args "" :cwd "/home/myLSP/lspWorkspace/Test5/" :stopOnEntry ...))
dap--debug-providers             #s(hash-table size 65 test equal rehash-size 1.5 rehash-threshold 0.8125 data ("java" dap-java--populate-default-args ...))
dap--debug-template-configurations  (("Java Attach" :type "java" :request "attach" :hostName "localhost" :port nil) ("Java Run Configuration (compile/attach)" :type "java" :request "compile_attach" :args "" :cwd nil :host "localhost" :request ...) ("Java Run Configuration" :type "java" :request "launch" :args "" :cwd nil :stopOnEntry :json-false :host ...))
dap-auto-show-output  t
dap-breakpoints-changed-hook (dap-ui--refresh-breakpoints)
dap-continue-hook   (dap-ui-locals--refresh dap-ui--clear-marker-overlay)
dap-executed-hook   nil 
dap-hydra/docstring
dap-hydra/heads
dap-hydra/hint
dap-hydra/keymap
dap-hydra/params
dap-inhibit-io t 
dap-java--classpath-separator :
dap-java--var-format "$%s"
 dap-java-build ask
dap-java-compile-port  33000
dap-java-default-debug-port 1044
dap-java-java-command "java"
dap-java-test-additional-args nil
  dap-java-test-runner "/root/.emacs.d/eclipse.jdt.ls/server/test-runner/junit-platform-console-standalone.jar"
dap-mode  t
dap-mode-hook  nil
dap-mode-map   (keymap (left-fringe keymap (mouse-1 . dap-mode-mouse-set-clear-breakpoint)) (left-margin keymap (mouse-1 . dap-mode-mouse-set-clear-breakpoint)))
   dap-overlays-eval-result-duration  command
    dap-overlays-eval-result-prefix  "=> "
   dap-overlays-use-font-lock  t
   dap-overlays-use-overlays  both
dap-position-changed-hook  nil
dap-print-io   nil
dap-session-changed-hook (dap-ui-locals--refresh)
dap-session-created-hook  nil
dap-stack-frame-changed-hook (dap-ui-locals--refresh dap-ui--stack-frame-changed)
dap-stopped-hook    nil
dap-terminated-hook  (dap-ui-locals--refresh)
dap-ui--breakpoint-overlays nil
dap-ui--cursor-overlay  nil
dap-ui--debug-window-buffer  "*debug-window*"
dap-ui--inspect-buffer       "*dap-ui-inspect*"
dap-ui--loading-tree-widget   ((tree-widget :tag "Loading..." :format "%[%t%] "))
dap-ui--locals-buffer  "*dap-ui-locals*"
dap-ui--locals-request-id  0
dap-ui--sessions-buffer  "*dap-ui-sessions*"
dap-ui--sessions-refresh-timer  nil
dap-ui-breakpoints-ui-list-buffer-name  "*Breakpoints*"
dap-ui-breakpoints-ui-list-describe-function nil
dap-ui-breakpoints-ui-list-describe-warning-count   nil
dap-ui-breakpoints-ui-list-displayed-hook   nil
dap-ui-breakpoints-ui-list-format   ((file-name dap-ui--get-file-info 30 t) (line nil 8 bui-list-sort-numerically-2) (verified nil 8 t) (condition nil 25 t) (hit-condition nil 20 t) (log-message nil 15 t))
dap-ui-breakpoints-ui-list-get-entries-function   dap-ui--breakpoints-entries
dap-ui-breakpoints-ui-list-history-size   nil
dap-ui-breakpoints-ui-list-mode-abbrev-table   [## 0 0 0 0 0 0 0 0 0 0 0 ...]
dap-ui-breakpoints-ui-list-mode-hook   (#[0 "\300\301\302\"\210\300\303\304\305\306$\207" [add-hook dap-breakpoints-changed-hook dap-ui-refresh-breakpoints-list kill-buffer-hook dap-ui--brekapoints-list-cleanup nil t] 5])
dap-ui-breakpoints-ui-list-mode-map   (keymap (68 . dap-ui-breakpoints-delete-selected) (100 . dap-ui-breakpoints-delete) (13 . dap-ui-breakpoints-goto))
dap-ui-breakpoints-ui-list-mode-syntax-table
dap-ui-breakpoints-ui-list-revert-confirm   nil
dap-ui-breakpoints-ui-list-show-single   nil
dap-ui-breakpoints-ui-list-sort-key   (file-name)
dap-ui-breakpoints-ui-list-titles   nil
dap-ui-buffer-configurations   (("*dap-ui-locals*" (side . right) (slot . 1) (window-width . 0.2)) ("*dap-ui-inspect*" (side . right) (slot . 2) (window-width . 0.2)) ("*dap-ui-sessions*" (side . right) (slot . 3) (window-width . 0.2)) ("*debug-window*" (side . bottom) (slot . 3) (window-width . 0.2)))
dap-ui-default-fetch-count   30
dap-ui-icons-inspect   (:open-icon dap-ui-inspect-open :close-icon dap-ui-inspect-close :empty-icon dap-ui-inspect-empty :leaf-icon dap-ui-inspect-leaf :handle dap-ui-widget-handle :end-guide dap-ui-widget-end-guide ...)
dap-ui-icons-project-running   (:open-icon dap-ui-project-running-open :close-icon dap-ui-project-running-close :empty-icon dap-ui-project-running-empty :leaf-icon dap-ui-project-running-leaf :handle dap-ui-widget-handle :end-guide dap-ui-widget-end-guide ...)
dap-ui-icons-project-stopped   (:open-icon dap-ui-project-stopped-open :close-icon dap-ui-project-stopped-close :empty-icon dap-ui-project-stopped-empty :leaf-icon dap-ui-project-stopped-leaf :handle dap-ui-widget-handle :end-guide dap-ui-widget-end-guide ...)
dap-ui-icons-scope   (:open-icon dap-ui-scope-open :close-icon dap-ui-scope-close :empty-icon dap-ui-scope-empty :leaf-icon dap-ui-scope-leaf :handle dap-ui-widget-handle :end-guide dap-ui-widget-end-guide ...)
dap-ui-icons-stack-frame-running   (:open-icon dap-ui-stack-frame-running-open :close-icon dap-ui-stack-frame-running-close :empty-icon dap-ui-stack-frame-running-empty :leaf-icon dap-ui-stack-frame-running-leaf :handle dap-ui-widget-handle :end-guide dap-ui-widget-end-guide ...)
dap-ui-icons-stack-frame-stopped   (:open-icon dap-ui-stack-frame-stopped-open :close-icon dap-ui-stack-frame-stopped-close :empty-icon dap-ui-stack-frame-stopped-empty :leaf-icon dap-ui-stack-frame-stopped-leaf :handle dap-ui-widget-handle :end-guide dap-ui-widget-end-guide ...)
dap-ui-icons-thread-running   (:open-icon dap-ui-thread-running-open :close-icon dap-ui-thread-running-close :empty-icon dap-ui-thread-running-empty :leaf-icon dap-ui-thread-running-leaf :handle dap-ui-widget-handle :end-guide dap-ui-widget-end-guide ...)
dap-ui-icons-thread-stopped   (:open-icon dap-ui-thread-stopped-open :close-icon dap-ui-thread-stopped-close :empty-icon dap-ui-thread-stopped-empty :leaf-icon dap-ui-thread-stopped-leaf :handle dap-ui-widget-handle :end-guide dap-ui-widget-end-guide ...)
dap-ui-icons-variable   (:open-icon dap-ui-variable-open :close-icon dap-ui-variable-close :empty-icon dap-ui-variable-empty :leaf-icon dap-ui-variable-leaf :handle dap-ui-widget-handle :end-guide dap-ui-widget-end-guide ...)
dap-ui-inspect-mode   nil
dap-ui-inspect-mode-hook   nil
dap-ui-inspect-mode-map   (keymap (9 . tree-mode-toggle-expand))
dap-ui-locals-mode   nil
dap-ui-locals-mode-hook   nil
dap-ui-mode   t
dap-ui-mode-hook   nil
dap-ui-session-mode-map   (keymap (13 . dap-ui-sessions-select) (9 . tree-mode-toggle-expand))
dap-ui-session-refresh-delay   0.5
dap-ui-sessions-mode   nil
dap-ui-sessions-mode-hook   nil
dap-ui-stack-frames-loaded   nil
dap-ui-theme   "eclipse"
dap-ui-themes-directory   "/root/.emacs.d/elpa/dap-mode-20190722.1641/icons"

xxxxxxxxxxxxxxxxxxxxxxx
;; lsp defun
xxxxxxxxxxxxxxxxxxxxxxx
(lsp-java--get-root) "/home/myLSP/lspWorkspace/Test5/"
(company-lsp--cache-find-closest)
(company-lsp--cache-get)
(company-lsp--cache-item-candidates)
(company-lsp--cache-item-incomplete-p)
(company-lsp--cache-item-new)
(company-lsp--cache-put)
(company-lsp--cancel-outstanding-request)
(company-lsp--candidate-filter-text)
(company-lsp--candidate-item)
(company-lsp--candidate-prefix)
(company-lsp--candidates-async)
(company-lsp--candidates-sync)
(company-lsp--cleanup-cache)
(company-lsp--client-capabilities)
(company-lsp--completion-prefix)
(company-lsp--compute-flex-match)
(company-lsp--documentation)
(company-lsp--fallback-snippet)
(company-lsp--filter-candidates)
(company-lsp--get-completion-context)
(company-lsp--get-config)
(company-lsp--get-context-trigger-characters)
(company-lsp--looking-back-trigger-characters-p)
(company-lsp--make-candidate)
(company-lsp--make-completion-context)
(company-lsp--make-completion-request)
(company-lsp--on-completion)
(company-lsp--post-completion)
(company-lsp--resolve-candidate)
(company-lsp--rust-completion-snippet)
(company-lsp--to-yasnippet-snippet)
(company-lsp--trigger-characters)
(company-lsp-match-candidate-flex)
(company-lsp-match-candidate-prefix)
(copy-lsp--client)
(copy-lsp--folding-range)
(copy-lsp--log-entry)
(copy-lsp--parser)
(copy-lsp--registered-capability)
(copy-lsp--workspace)
(copy-lsp-diagnostic)
(copy-lsp-session)
(copy-lsp-watch)
(lsp--annotate)
(lsp--apply-formatting)
(lsp--apply-semantic-highlighting)
(lsp--apply-text-document-edit)
(lsp--apply-text-edit)
(lsp--apply-text-edit-replace-buffer-contents)
(lsp--apply-text-edits)
(lsp--apply-workspace-edit)
(lsp--auto-configure)
(lsp--before-save)
(lsp--bracketed-change-p)
(lsp--buffer-for-file)
(lsp--buffer-string-visible)
(lsp--buffer-uri)
(lsp--build-workspace-configuration-response)
(lsp--calculate-root)
(lsp--cancel-document-link-timer)
(lsp--cancel-request)
(lsp--capability)
(lsp--check-document-changes-version)
(lsp--cleanup-hanging-watches)
(lsp--client-action-handlers)
(lsp--client-action-handlers--cmacro)
(lsp--client-activation-fn)
(lsp--client-activation-fn--cmacro)
(lsp--client-add-on?)
(lsp--client-add-on?--cmacro)
(lsp--client-before-file-open-fn)
(lsp--client-before-file-open-fn--cmacro)
(lsp--client-capabilities)
(lsp--client-completion-in-comments?)
(lsp--client-completion-in-comments?--cmacro)
(lsp--client-custom-capabilities)
(lsp--client-custom-capabilities--cmacro)
(lsp--client-disabled-p)
(lsp--client-ignore-messages)
(lsp--client-ignore-messages--cmacro)
(lsp--client-ignore-regexps)
(lsp--client-ignore-regexps--cmacro)
(lsp--client-initialization-options)
(lsp--client-initialization-options--cmacro)
(lsp--client-initialized-fn)
(lsp--client-initialized-fn--cmacro)
(lsp--client-language-id)
(lsp--client-language-id--cmacro)
(lsp--client-library-folders-fn)
(lsp--client-library-folders-fn--cmacro)
(lsp--client-major-modes)
(lsp--client-major-modes--cmacro)
(lsp--client-multi-root)
(lsp--client-multi-root--cmacro)
(lsp--client-new-connection)
(lsp--client-new-connection--cmacro)
(lsp--client-notification-handlers)
(lsp--client-notification-handlers--cmacro)
(lsp--client-p)
(lsp--client-p--cmacro)
(lsp--client-path->uri-fn)
(lsp--client-path->uri-fn--cmacro)
(lsp--client-prefix-function)
(lsp--client-prefix-function--cmacro)
(lsp--client-priority)
(lsp--client-priority--cmacro)
(lsp--client-remote?)
(lsp--client-remote?--cmacro)
(lsp--client-request-handlers)
(lsp--client-request-handlers--cmacro)
(lsp--client-response-handlers)
(lsp--client-response-handlers--cmacro)
(lsp--client-server-id)
(lsp--client-server-id--cmacro)
(lsp--client-uri->path-fn)
(lsp--client-uri->path-fn--cmacro)
(lsp--client-uri-handlers)
(lsp--client-uri-handlers--cmacro)
(lsp--completing-read)
(lsp--create-async-callback)
(lsp--create-default-error-handler)
(lsp--create-initialization-options)
(lsp--create-sentinel)
(lsp--cur-column)
(lsp--cur-column--inliner)
(lsp--cur-line)
(lsp--cur-line--inliner)
(lsp--cur-line-diagnotics)
(lsp--cur-position)
(lsp--cur-position--inliner)
(lsp--cur-workspace-check)
(lsp--default-prefix-function)
(lsp--directory-files-recursively)
(lsp--document-highlight)
(lsp--document-link-handle-target)
(lsp--document-link-keymap)
(lsp--eldoc-message)
(lsp--ensure-lsp-servers)
(lsp--error)
(lsp--error-string)
(lsp--ewoc-count)
(lsp--execute-command)
(lsp--extract-line-from-buffer)
(lsp--file-process-event)
(lsp--find-action-handler)
(lsp--find-available-port)
(lsp--find-clients)
(lsp--find-multiroot-workspace)
(lsp--find-root-interactively)
(lsp--find-workspace)
(lsp--find-workspaces-for)
(lsp--find-wrapping-range)
(lsp--fix-path-casing)
(lsp--flush-delayed-changes)
(lsp--flymake-after-diagnostics)
(lsp--flymake-backend)
(lsp--flymake-setup)
(lsp--flymake-update-diagnostics)
(lsp--folder-watch-callback)
(lsp--folding-range-at-point-beginning-op)
(lsp--folding-range-at-point-bounds)
(lsp--folding-range-at-point-end-op)
(lsp--folding-range-at-point-forward-op)
(lsp--folding-range-beg)
(lsp--folding-range-beg--cmacro)
(lsp--folding-range-build-trees)
(lsp--folding-range-children)
(lsp--folding-range-children--cmacro)
(lsp--folding-range-end)
(lsp--folding-range-end--cmacro)
(lsp--folding-range-insert-into-trees)
(lsp--folding-range-kind)
(lsp--folding-range-kind--cmacro)
(lsp--folding-range-orig-folding-range)
(lsp--folding-range-orig-folding-range--cmacro)
(lsp--folding-range-p)
(lsp--folding-range-p--cmacro)
(lsp--folding-range-width)
(lsp--folding-range-width--inliner)
(lsp--fontlock-with-mode)
(lsp--full-change-event)
(lsp--generate-log-buffer-name)
(lsp--get-body-length)
(lsp--get-completions)
(lsp--get-create-io-ewoc)
(lsp--get-current-innermost-folding-range)
(lsp--get-current-outermost-folding-range)
(lsp--get-document-symbols)
(lsp--get-folding-ranges)
(lsp--get-message-type)
(lsp--get-nearest-folding-range)
(lsp--get-nested-folding-ranges)
(lsp--get-selection-range)
(lsp--get-symbol-to-rename)
(lsp--get-symbol-type)
(lsp--get-uri-handler)
(lsp--gethash)
(lsp--global-teardown)
(lsp--highlight)
(lsp--ht-get)
(lsp--imenu-compare-kind)
(lsp--imenu-compare-name)
(lsp--imenu-compare-position)
(lsp--imenu-create-hierarchical-index)
(lsp--imenu-create-index)
(lsp--imenu-filter-symbols)
(lsp--imenu-hierarchical-p)
(lsp--imenu-refresh)
(lsp--imenu-symbol-lessp)
(lsp--info)
(lsp--init-if-visible)
(lsp--json-pretty-print)
(lsp--lens-after-save)
(lsp--lens-backend-fetch-missing)
(lsp--lens-backend-not-loaded?)
(lsp--lens-backend-present?)
(lsp--lens-display)
(lsp--lens-idle-function)
(lsp--lens-keymap)
(lsp--lens-overlay-ensure-at)
(lsp--lens-overlay-matches-pos)
(lsp--lens-refresh)
(lsp--lens-schedule-refresh)
(lsp--lens-show)
(lsp--lens-stop-timer)
(lsp--lens-text-width)
(lsp--lens-update)
(lsp--line-character-to-point)
(lsp--load-default-session)
(lsp--locations-to-xref-items)
(lsp--log-entry-body)
(lsp--log-entry-body--cmacro)
(lsp--log-entry-id)
(lsp--log-entry-id--cmacro)
(lsp--log-entry-method)
(lsp--log-entry-method--cmacro)
(lsp--log-entry-new)
(lsp--log-entry-p)
(lsp--log-entry-p--cmacro)
(lsp--log-entry-pp)
(lsp--log-entry-process-time)
(lsp--log-entry-process-time--cmacro)
(lsp--log-entry-timestamp)
(lsp--log-entry-timestamp--cmacro)
(lsp--log-entry-type)
(lsp--log-entry-type--cmacro)
(lsp--log-notification-performance)
(lsp--log-request-time)
(lsp--make-completion-item)
(lsp--make-diag)
(lsp--make-document-formatting-params)
(lsp--make-document-highlight-callback)
(lsp--make-document-range-formatting-params)
(lsp--make-log-entry)
(lsp--make-message)
(lsp--make-notification)
(lsp--make-notification--inliner)
(lsp--make-reference-params)
(lsp--make-request)
(lsp--make-response)
(lsp--make-workspace)
(lsp--managed-mode)
(lsp--map-tree-widget)
(lsp--matching-clients?)
(lsp--merge-results)
(lsp--on-auto-save)
(lsp--on-diagnostics)
(lsp--on-notification)
(lsp--on-request)
(lsp--on-self-insert)
(lsp--on-semantic-highlighting)
(lsp--on-set-visitied-file-name)
(lsp--open-in-workspace)
(lsp--open-network-stream)
(lsp--parse-header)
(lsp--parser-body)
(lsp--parser-body--cmacro)
(lsp--parser-body-length)
(lsp--parser-body-length--cmacro)
(lsp--parser-body-received)
(lsp--parser-body-received--cmacro)
(lsp--parser-headers)
(lsp--parser-headers--cmacro)
(lsp--parser-leftovers)
(lsp--parser-leftovers--cmacro)
(lsp--parser-make-filter)
(lsp--parser-on-message)
(lsp--parser-p)
(lsp--parser-p--cmacro)
(lsp--parser-read)
(lsp--parser-reading-body)
(lsp--parser-reading-body--cmacro)
(lsp--parser-reset)
(lsp--parser-workspace)
(lsp--parser-workspace--cmacro)
(lsp--path-to-uri)
(lsp--path-to-uri-1)
(lsp--persist)
(lsp--persist-session)
(lsp--plist-delete)
(lsp--point-in-bounds-p)
(lsp--point-inside-range-p)
(lsp--point-inside-range-p--inliner)
(lsp--point-to-position)
(lsp--position)
(lsp--position--inliner)
(lsp--position-compare)
(lsp--position-equal)
(lsp--position-to-point)
(lsp--position-to-point--inliner)
(lsp--process-lenses)
(lsp--propertize)
(lsp--range)
(lsp--range--inliner)
(lsp--range-at-point-bounds)
(lsp--range-before-p)
(lsp--range-before-p--inliner)
(lsp--range-inside-p)
(lsp--range-inside-p--inliner)
(lsp--range-to-region)
(lsp--range-to-region--inliner)
(lsp--read-from-file)
(lsp--read-json)
(lsp--region-or-line)
(lsp--region-to-range)
(lsp--region-to-range--inliner)
(lsp--registered-capability)
(lsp--registered-capability-id)
(lsp--registered-capability-id--cmacro)
(lsp--registered-capability-method)
(lsp--registered-capability-method--cmacro)
(lsp--registered-capability-options)
(lsp--registered-capability-options--cmacro)
(lsp--registered-capability-p)
(lsp--registered-capability-p--cmacro)
(lsp--remove-cur-overlays)
(lsp--render-element)
(lsp--render-markdown)
(lsp--render-on-hover-content)
(lsp--render-string)
(lsp--render-workspace)
(lsp--resolve-completion)
(lsp--restart-if-needed)
(lsp--save-include-text-p)
(lsp--select-action)
(lsp--semantic-highlighting-find-face)
(lsp--send-did-save-p)
(lsp--send-execute-command)
(lsp--send-no-wait)
(lsp--send-notification)
(lsp--send-open-close-p)
(lsp--send-request)
(lsp--send-request-async)
(lsp--send-will-save-p)
(lsp--send-will-save-wait-until-p)
(lsp--server-capabilities)
(lsp--server-register-capability)
(lsp--server-unregister-capability)
(lsp--session-workspaces)
(lsp--set-configuration)
(lsp--set-document-link-timer)
(lsp--setup-markdown)
(lsp--shutdown-workspace)
(lsp--signature->eldoc-message)
(lsp--sort-completions)
(lsp--spinner-start)
(lsp--spinner-stop)
(lsp--start-connection)
(lsp--start-workspace)
(lsp--string-listp)
(lsp--string-match-any)
(lsp--suggest-project-root)
(lsp--symbol-filter)
(lsp--symbol-get-start-point)
(lsp--symbol-information-to-xref)
(lsp--symbol-to-hierarchical-imenu-elem)
(lsp--symbol-to-imenu-elem)
(lsp--text-document-code-action-params)
(lsp--text-document-content-change-event)
(lsp--text-document-did-close)
(lsp--text-document-did-open)
(lsp--text-document-did-save)
(lsp--text-document-identifier)
(lsp--text-document-identifier--inliner)
(lsp--text-document-position-params)
(lsp--text-document-position-params--inliner)
(lsp--text-edit-sort-predicate)
(lsp--try-open-in-library-workspace)
(lsp--try-project-root-workspaces)
(lsp--uninitialize-workspace)
(lsp--update-document-links)
(lsp--update-key)
(lsp--uri-to-path)
(lsp--uri-to-path-1)
(lsp--versioned-text-document-identifier)
(lsp--warn)
(lsp--will-save-text-document-params)
(lsp--will-save-text-document-params--inliner)
(lsp--window-log-message)
(lsp--window-log-message-request)
(lsp--window-show-message)
(lsp--workspace-buffers)
(lsp--workspace-buffers--cmacro)
(lsp--workspace-client)
(lsp--workspace-client--cmacro)
(lsp--workspace-cmd-proc)
(lsp--workspace-cmd-proc--cmacro)
(lsp--workspace-diagnostics)
(lsp--workspace-diagnostics--cmacro)
(lsp--workspace-ewoc)
(lsp--workspace-ewoc--cmacro)
(lsp--workspace-extra-client-capabilities)
(lsp--workspace-extra-client-capabilities--cmacro)
(lsp--workspace-highlight-overlays)
(lsp--workspace-highlight-overlays--cmacro)
(lsp--workspace-host-root)
(lsp--workspace-host-root--cmacro)
(lsp--workspace-last-id)
(lsp--workspace-last-id--cmacro)
(lsp--workspace-metadata)
(lsp--workspace-metadata--cmacro)
(lsp--workspace-p)
(lsp--workspace-p--cmacro)
(lsp--workspace-parser)
(lsp--workspace-parser--cmacro)
(lsp--workspace-print)
(lsp--workspace-proc)
(lsp--workspace-proc--cmacro)
(lsp--workspace-registered-server-capabilities)
(lsp--workspace-registered-server-capabilities--cmacro)
(lsp--workspace-root)
(lsp--workspace-root--cmacro)
(lsp--workspace-server-capabilities)
(lsp--workspace-server-capabilities--cmacro)
(lsp--workspace-shutdown-action)
(lsp--workspace-shutdown-action--cmacro)
(lsp--workspace-status)
(lsp--workspace-status--cmacro)
(lsp--workspace-status-string)
(lsp--workspace-status-string--cmacro)
(lsp--workspace-watches)
(lsp--workspace-watches--cmacro)
(lsp--workspace-workspace-folders)
(lsp--workspace-workspace-folders--cmacro)
(lsp--xref-backend)
(lsp--xref-elements-index)
(lsp--xref-make-item)
(lsp-before-change)
(lsp-browser-mode)
(lsp-buffer-language)
(lsp-clients--clangd-command)
(lsp-clients--fortls-command)
(lsp-clients--rust-window-progress)
(lsp-clients-css--apply-code-action)
(lsp-clients-elm--make-init-options)
(lsp-clients-flow-activate-p)
(lsp-clients-flow-project-p)
(lsp-clients-flow-tag-file-present-p)
(lsp-clients-flow-tag-string-present-p)
(lsp-clients-go--bool-to-json)
(lsp-clients-go--bool-to-json--inliner)
(lsp-clients-go--make-init-options)
(lsp-clients-register-clangd)
(lsp-clj--file-in-jar)
(lsp-clojure--refactoring-call)
(lsp-clojure-add-missing-libspec)
(lsp-clojure-clean-ns)
(lsp-clojure-cycle-coll)
(lsp-clojure-cycle-privacy)
(lsp-clojure-expand-let)
(lsp-clojure-extract-function)
(lsp-clojure-introduce-let)
(lsp-clojure-move-to-let)
(lsp-clojure-thread-first)
(lsp-clojure-thread-first-all)
(lsp-clojure-thread-last)
(lsp-clojure-thread-last-all)
(lsp-clojure-unwind-all)
(lsp-clojure-unwind-thread)
(lsp-code-actions-at-point)
(lsp-completion-at-point)
(lsp-configuration-section)
(lsp-cur-line-diagnostics)
(lsp-dart--analysis-server-command)
(lsp-dart--lsp-command)
(lsp-deferred)
(lsp-describe-session)
(lsp-describe-thing-at-point)
(lsp-diagnostic-code)
(lsp-diagnostic-code--cmacro)
(lsp-diagnostic-column)
(lsp-diagnostic-column--cmacro)
(lsp-diagnostic-line)
(lsp-diagnostic-line--cmacro)
(lsp-diagnostic-message)
(lsp-diagnostic-message--cmacro)
(lsp-diagnostic-original)
(lsp-diagnostic-original--cmacro)
(lsp-diagnostic-p)
(lsp-diagnostic-p--cmacro)
(lsp-diagnostic-range)
(lsp-diagnostic-range--cmacro)
(lsp-diagnostic-severity)
(lsp-diagnostic-severity--cmacro)
(lsp-diagnostic-source)
(lsp-diagnostic-source--cmacro)
(lsp-diagnostics)
(lsp-disconnect)
(lsp-document-highlight)
(lsp-eldoc-function)
(lsp-elm--elm-language-server-command)
(lsp-elt)
(lsp-enable-imenu)
(lsp-erlang-server-start-fun)
(lsp-execute-code-action)
(lsp-execute-code-action-by-kind)
(lsp-execute-command)
(lsp-extend-selection)
(lsp-file-local-name)
(lsp-find-custom)
(lsp-find-declaration)
(lsp-find-definition)
(lsp-find-definition-mouse)
(lsp-find-implementation)
(lsp-find-locations)
(lsp-find-references)
(lsp-find-roots-for-workspace)
(lsp-find-session-folder)
(lsp-find-type-definition)
(lsp-find-workspace)
(lsp-foreach-workspace)
(lsp-format-buffer)
(lsp-format-region)
(lsp-fsharp--fsac-cmd)
(lsp-fsharp--fsac-install)
(lsp-fsharp--fsac-locate)
(lsp-fsharp--fsac-runtime-cmd)
(lsp-fsharp--make-init-options)
(lsp-fsharp--make-launch-cmd)
(lsp-get-or-calculate-code-actions)
(lsp-get-renderer)
(lsp-goto-implementation)
(lsp-goto-type-definition)
(lsp-groovy--lsp-command)
(lsp-hover)
(lsp-ht)
(lsp-ht-set)
(lsp-java--action-generate-equals-and-hash-code)
(lsp-java--action-generate-to-string)
(lsp-java--action-organize-imports)
(lsp-java--action-rename)
(lsp-java--actionable-notification-callback)
(lsp-java--apply-document-changes)
(lsp-java--apply-edit)
(lsp-java--apply-refactoring-command)
(lsp-java--apply-workspace-edit)
(lsp-java--bundles)
(lsp-java--bundles-dir)
(lsp-java--completing-read-multiple)
(lsp-java--current-workspace-or-lose)
(lsp-java--ensure-dir)
(lsp-java--ensure-server)
(lsp-java--find-project-uri)
(lsp-java--find-workspace)
(lsp-java--generate-accessors-prompt)
(lsp-java--generate-constructors-prompt)
(lsp-java--get-filename)
(lsp-java--get-java-version)
(lsp-java--get-metadata-location)
(lsp-java--get-project-uris)
(lsp-java--get-root)
(lsp-java--is-root)
(lsp-java--java-9-plus-p)
(lsp-java--json-bool)
(lsp-java--language-status-callback)
(lsp-java--list-or-empty)
(lsp-java--locate-server-config)
(lsp-java--locate-server-jar)
(lsp-java--ls-command)
(lsp-java--move-instance-method)
(lsp-java--move-type)
(lsp-java--override-methods-prompt)
(lsp-java--prepare-mvnw)
(lsp-java--progress-report)
(lsp-java--render-string)
(lsp-java--resolve-uri)
(lsp-java--select-destination-class)
(lsp-java--set-project-uris)
(lsp-java--symbol-label)
(lsp-java--workspace-folders)
(lsp-java--workspace-notify)
(lsp-java-actionable-notifications)
(lsp-java-add-import)
(lsp-java-add-throws)
(lsp-java-add-unimplemented-methods)
(lsp-java-assign-all)
(lsp-java-assign-to-field)
(lsp-java-boot--workspace-execute-client-command)
(lsp-java-boot-lens-mode)
(lsp-java-build-project)
(lsp-java-conver-to-static-import)
(lsp-java-create-field)
(lsp-java-create-local)
(lsp-java-create-parameter)
(lsp-java-execute-matching-action)
(lsp-java-extract-method)
(lsp-java-extract-to-constant)
(lsp-java-extract-to-local-variable)
(lsp-java-generate-equals-and-hash-code)
(lsp-java-generate-getters-and-setters)
(lsp-java-generate-overrides)
(lsp-java-generate-to-string)
(lsp-java-move-file)
(lsp-java-move-static-member)
(lsp-java-organize-imports)
(lsp-java-show-buffer)
(lsp-java-spring-initializr)
(lsp-java-update-project-configuration)
(lsp-java-update-project-uris)
(lsp-java-update-server)
(lsp-java-with-jdtls)
(lsp-json-bool)
(lsp-kill-watch)
(lsp-lens-backend)
(lsp-lens-hide)
(lsp-lens-mode)
(lsp-lens-show)
(lsp-log)
(lsp-log-io-mode)
(lsp-log-io-next)
(lsp-log-io-prev)
(lsp-make-notification)
(lsp-make-request)
(lsp-message)
(lsp-metals--doctor-reload)
(lsp-metals--doctor-render)
(lsp-metals--doctor-run)
(lsp-metals--echo-command)
(lsp-metals--execute-client-command)
(lsp-metals--generate-doctor-buffer-name)
(lsp-metals--goto-location)
(lsp-metals--server-command)
(lsp-metals-build-connect)
(lsp-metals-build-import)
(lsp-metals-doctor-run)
(lsp-metals-sources-scan)
(lsp-mode)
(lsp-mode-line)
(lsp-mode-menu)
(lsp-notify)
(lsp-on-change)
(lsp-on-open)
(lsp-on-revert)
(lsp-on-save)
(lsp-organize-imports)
(lsp-point-to-position)
(lsp-range--pcase-macroexpander)
(lsp-region-text)
(lsp-register-client)
(lsp-register-client-capabilities)
(lsp-register-custom-settings)
(lsp-rename)
(lsp-request)
(lsp-request-async)
(lsp-resolve-final-function)
(lsp-restart-workspace)
(lsp-send-execute-command)
(lsp-send-notification)
(lsp-send-request)
(lsp-send-request-async)
(lsp-server-present?)
(lsp-session)
(lsp-session-folder->servers)
(lsp-session-folder->servers--cmacro)
(lsp-session-folders)
(lsp-session-folders--cmacro)
(lsp-session-folders-blacklist)
(lsp-session-folders-blacklist--cmacro)
(lsp-session-get-metadata)
(lsp-session-metadata)
(lsp-session-metadata--cmacro)
(lsp-session-p)
(lsp-session-p--cmacro)
(lsp-session-server-id->folders)
(lsp-session-server-id->folders--cmacro)
(lsp-session-set-metadata)
(lsp-session-watches)
(lsp-shutdown-workspace)
(lsp-stdio-connection)
(lsp-switch-to-io-log-buffer)
(lsp-tcp-connection)
(lsp-tcp-server)
(lsp-tcp-server-command)
(lsp-text-document-identifier)
(lsp-tramp-connection)
(lsp-treemacs--after-diagnostics)
(lsp-treemacs--deps-find-children-for-key)
(lsp-treemacs--diag-statistics)
(lsp-treemacs--diagnostic-icon)
(lsp-treemacs--diagnostics-match-selected-severity)
(lsp-treemacs--errors)
(lsp-treemacs--expand)
(lsp-treemacs--expand-recursively)
(lsp-treemacs--face)
(lsp-treemacs--get-files)
(lsp-treemacs--kill-buffer)
(lsp-treemacs--kill-symbols-buffer)
(lsp-treemacs--match-diagnostic-severity)
(lsp-treemacs--project-diagnostics)
(lsp-treemacs--root-folders)
(lsp-treemacs--symbol-icon)
(lsp-treemacs--update)
(lsp-treemacs--update-symbols)
(lsp-treemacs-cycle-severity)
(lsp-treemacs-deps--get-children)
(lsp-treemacs-deps--goto-element)
(lsp-treemacs-deps--icon)
(lsp-treemacs-deps--java-file?)
(lsp-treemacs-deps--root-folders)
(lsp-treemacs-deps-list-mode)
(lsp-treemacs-deps-with-jdtls)
(lsp-treemacs-error-list-mode)
(lsp-treemacs-errors-list)
(lsp-treemacs-errors-mode)
(lsp-treemacs-goto-symbol)
(lsp-treemacs-java-deps-follow)
(lsp-treemacs-java-deps-list)
(lsp-treemacs-java-deps-mode)
(lsp-treemacs-java-deps-refresh)
(lsp-treemacs-open-error)
(lsp-treemacs-open-file)
  (lsp-treemacs-quick-fix)
(lsp-treemacs-symbols)
(lsp-treemacs-symbols-mode)
(lsp-typescript-javascript-tsx-jsx-activate-p)
(lsp-ui--hide-doc-frame-on-window-change)
(lsp-ui--location<)
(lsp-ui--reference-triples)
(lsp-ui--toggle)
(lsp-ui--workspace-path)
(lsp-ui-doc--buffer-width)
(lsp-ui-doc--callback)
(lsp-ui-doc--delete-frame)
(lsp-ui-doc--display)
(lsp-ui-doc--extract)
(lsp-ui-doc--extract-marked-string)
(lsp-ui-doc--filter-marked-string)
(lsp-ui-doc--get-frame)
(lsp-ui-doc--get-parent)
(lsp-ui-doc--hide-frame)
(lsp-ui-doc--inline)
(lsp-ui-doc--inline-faking-frame)
(lsp-ui-doc--inline-formatted-string)
(lsp-ui-doc--inline-height)
(lsp-ui-doc--inline-merge)
(lsp-ui-doc--inline-p)
(lsp-ui-doc--inline-padding)
(lsp-ui-doc--inline-pos)
(lsp-ui-doc--inline-pos-at)
(lsp-ui-doc--inline-untab)
(lsp-ui-doc--inline-window-width)
(lsp-ui-doc--inline-wrapped-line)
(lsp-ui-doc--inline-zip)
(lsp-ui-doc--line-height)
(lsp-ui-doc--make-buffer-name)
(lsp-ui-doc--make-clickable-link)
(lsp-ui-doc--make-frame)
(lsp-ui-doc--make-request)
(lsp-ui-doc--move-frame)
(lsp-ui-doc--mv-at-point)
(lsp-ui-doc--on-delete)
(lsp-ui-doc--put-click)
(lsp-ui-doc--remove-invisibles) 
(lsp-ui-doc--render-buffer)
(lsp-ui-doc--resize-buffer)
(lsp-ui-doc--set-frame)
(lsp-ui-doc--sideline-pos-y)
(lsp-ui-doc--visible-p)
(lsp-ui-doc--visit-file)
(lsp-ui-doc--webkit-execute-script)
(lsp-ui-doc--webkit-execute-script-rv)
(lsp-ui-doc--webkit-get-xwidget)
(lsp-ui-doc--webkit-resize-callback)
(lsp-ui-doc--webkit-run-xwidget)
(lsp-ui-doc--webkit-set-background)
(lsp-ui-doc--webkit-set-foreground)
(lsp-ui-doc--with-buffer)
(lsp-ui-doc-enable)
(lsp-ui-doc-hide)
(lsp-ui-doc-mode)
(lsp-ui-doc-show)
(lsp-ui-find-next-reference)
(lsp-ui-find-prev-reference)
(lsp-ui-find-workspace-symbol)
(lsp-ui-flycheck--report)
(lsp-ui-flycheck--start)
(lsp-ui-flycheck-add-mode)
(lsp-ui-flycheck-enable)
(lsp-ui-flycheck-list)
(lsp-ui-flycheck-list--open)
(lsp-ui-flycheck-list--post-command)
(lsp-ui-flycheck-list--quit)
(lsp-ui-flycheck-list--refresh)
(lsp-ui-flycheck-list--update)
(lsp-ui-flycheck-list--view)
(lsp-ui-flycheck-list--visit)
(lsp-ui-flycheck-list-mode)
(lsp-ui-imenu)
(lsp-ui-imenu--clear-bit)
(lsp-ui-imenu--get-bar)
(lsp-ui-imenu--get-color)
(lsp-ui-imenu--get-padding)
(lsp-ui-imenu--insert-items)
(lsp-ui-imenu--jump)
(lsp-ui-imenu--kill)
(lsp-ui-imenu--make-line)
(lsp-ui-imenu--make-ov)
(lsp-ui-imenu--move-to-name-beginning)
(lsp-ui-imenu--next-kind)
(lsp-ui-imenu--pad)
(lsp-ui-imenu--post-command)
(lsp-ui-imenu--prev-kind)
(lsp-ui-imenu--put-bit)
(lsp-ui-imenu--put-separator)
(lsp-ui-imenu--put-subtitle)
(lsp-ui-imenu--put-toplevel-title)
(lsp-ui-imenu--view)
(lsp-ui-imenu--visit)
(lsp-ui-imenu--win-separator)
(lsp-ui-imenu-enable)
(lsp-ui-imenu-mode)
(lsp-ui-mode)
(lsp-ui-peek--abort)
(lsp-ui-peek--add-prop)
(lsp-ui-peek--adjust)
(lsp-ui-peek--deactivate-keymap)
(lsp-ui-peek--disable)
(lsp-ui-peek--expand)
(lsp-ui-peek--expand-buffer)
(lsp-ui-peek--extract-chunk-from-buffer)
(lsp-ui-peek--fill)
(lsp-ui-peek--find-xrefs)
(lsp-ui-peek--fontify-buffer)
(lsp-ui-peek--get-references)
(lsp-ui-peek--get-selection)
(lsp-ui-peek--get-text-selection)
(lsp-ui-peek--get-xrefs-in-file)
(lsp-ui-peek--get-xrefs-list)
(lsp-ui-peek--goto-xref)
(lsp-ui-peek--goto-xref-other-window)
(lsp-ui-peek--insert-xrefs)
(lsp-ui-peek--make-footer)
(lsp-ui-peek--make-line)
(lsp-ui-peek--make-ref-line)
(lsp-ui-peek--peek)
(lsp-ui-peek--peek-hide)
(lsp-ui-peek--peek-new)
(lsp-ui-peek--prop)
(lsp-ui-peek--recenter)
(lsp-ui-peek--remove-hidden)
(lsp-ui-peek--render)
(lsp-ui-peek--select)
(lsp-ui-peek--select-next)
(lsp-ui-peek--select-next-file)
(lsp-ui-peek--select-prev)
(lsp-ui-peek--select-prev-file)
(lsp-ui-peek--show)
(lsp-ui-peek--skip-refs)
(lsp-ui-peek--toggle-file)
(lsp-ui-peek--toggle-hidden)
(lsp-ui-peek--toggle-text-prop)
(lsp-ui-peek--truncate)
(lsp-ui-peek--visual-index)
(lsp-ui-peek--with-evil-jumps)
(lsp-ui-peek--xref-make-item)
(lsp-ui-peek-enable)
(lsp-ui-peek-find-custom)
(lsp-ui-peek-find-definitions)
(lsp-ui-peek-find-implementation)
(lsp-ui-peek-find-references)
(lsp-ui-peek-find-workspace-symbol)
(lsp-ui-peek-mode)
(lsp-ui-sideline)
(lsp-ui-sideline--align)
(lsp-ui-sideline--calc-space)
(lsp-ui-sideline--calculate-tag)
(lsp-ui-sideline--check-duplicate)
(lsp-ui-sideline--code-actions)
(lsp-ui-sideline--delete-ov)
(lsp-ui-sideline--diagnostics)
(lsp-ui-sideline--diagnostics-changed)
(lsp-ui-sideline--erase)
(lsp-ui-sideline--extract-info)
(lsp-ui-sideline--find-line)
(lsp-ui-sideline--first-line-p)
(lsp-ui-sideline--format-info)
(lsp-ui-sideline--hide-before-company)
(lsp-ui-sideline--highlight-current)
(lsp-ui-sideline--make-display-string)
(lsp-ui-sideline--margin-width)
(lsp-ui-sideline--push-info)
(lsp-ui-sideline--run)
(lsp-ui-sideline--stop-p)
(lsp-ui-sideline--toggle-current)
(lsp-ui-sideline--window-width)
(lsp-ui-sideline-apply-code-actions)
(lsp-ui-sideline-enable)
(lsp-ui-sideline-mode)
(lsp-ui-sideline-toggle-symbols-info)
(lsp-warn)
(lsp-watch-descriptors)
(lsp-watch-descriptors--cmacro)
(lsp-watch-p)
(lsp-watch-p--cmacro)
(lsp-watch-root-directory)
(lsp-watch-root-directory--cmacro)
(lsp-watch-root-folder)
(lsp-workspace-blacklist-remove)
(lsp-workspace-folders-add)
(lsp-workspace-folders-open)
(lsp-workspace-folders-remove)
(lsp-workspace-folders-switch)
(lsp-workspace-get-metadata)
(lsp-workspace-restart)
(lsp-workspace-root)
(lsp-workspace-set-metadata)
(lsp-workspace-show-log)
(lsp-workspace-shutdown)
(lsp-workspace-status)
(lsp-workspaces)
(lsp-xml--create-connection)
(make-lsp--client)
(make-lsp--client--cmacro)
(make-lsp--folding-range)
(make-lsp--folding-range--cmacro)
(make-lsp--log-entry)
(make-lsp--log-entry--cmacro)
(make-lsp--parser)
(make-lsp--parser--cmacro)
(make-lsp--registered-capability)
(make-lsp--registered-capability--cmacro)
(make-lsp--workspace)
(make-lsp--workspace--cmacro)
(make-lsp-client)
(make-lsp-diagnostic)
(make-lsp-diagnostic--cmacro)
(make-lsp-session)
(make-lsp-session--cmacro)
(make-lsp-watch)
(make-lsp-watch--cmacro)
(my-lsp-FDQN)
(my-lsp-new-class)
(treemacs--do-collapse-lsp-error)
(treemacs--do-collapse-lsp-error-list)
(treemacs--do-collapse-lsp-files)
(treemacs--do-collapse-lsp-projects)
(treemacs--do-collapse-lsp-symbol)
(treemacs--do-collapse-lsp-symbols-list)
(treemacs--do-collapse-lsp-treemacs-deps)
(treemacs--do-collapse-lsp-treemacs-deps-list)
(treemacs--do-expand-lsp-error)
(treemacs--do-expand-lsp-error-list)
(treemacs--do-expand-lsp-files)
(treemacs--do-expand-lsp-projects)
(treemacs--do-expand-lsp-symbol)
(treemacs--do-expand-lsp-symbols-list)
(treemacs--do-expand-lsp-treemacs-deps)
(treemacs--do-expand-lsp-treemacs-deps-list)
(treemacs-LSP-ERROR-LIST-extension)
(treemacs-LSP-SYMBOLS-LIST-extension)
(treemacs-LSP-TREEMACS-DEPS-LIST-extension)
(treemacs-collapse-lsp-error)
(treemacs-collapse-lsp-error-list)
(treemacs-collapse-lsp-files)
(treemacs-collapse-lsp-projects)
(treemacs-collapse-lsp-symbol)
(treemacs-collapse-lsp-symbols-list)
(treemacs-collapse-lsp-treemacs-deps)
(treemacs-collapse-lsp-treemacs-deps-list)
(treemacs-expand-lsp-error)
(treemacs-expand-lsp-error-list)
(treemacs-expand-lsp-files)
(treemacs-expand-lsp-projects)
(treemacs-expand-lsp-symbol)
(treemacs-expand-lsp-symbols-list)
(treemacs-expand-lsp-treemacs-deps)
(treemacs-expand-lsp-treemacs-deps-list)
(when-lsp-workspace)
(with-lsp-workspace)
(with-lsp-workspaces)
xxxxxxxxxxxxxxxxxxxxxxx
end of lsp defun
xxxxxxxxxxxxxxxxxxxxxxx





;;;;;;;;;;;;;;;;;;;;;;;;; start  lsp java ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;;;;;;;;;;;;;;;;;;;;;;;;; start  lsp java ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;;;;;;;;;;;;;;;;;;;;;;;;; start  lsp java ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
          



(add-to-list 'auto-mode-alist '("\\.java?\\'" . java-mode))
  
(require 'lsp-java)
(add-hook 'java-mode-hook #'lsp)
(add-hook 'java-mode-hook 'flycheck-mode)
(add-hook 'java-mode-hook 'company-mode)  ;;; to complete as menu c-.
(add-hook 'java-mode-hook 'flymake-mode-off)   ;; also flymake-mode-off above load(filemake) and jdee
;; (add-hook 'java-mode-hook 'hs-minor-mode) ;; open java first then open hs-minor mode  ;; C-c @ C-c or just M-x hs-minor then c-c @ c-c to hide then c-c @ c-c to show

(require 'company-lsp)
(push 'company-lsp company-backends)

;;     (add-hook  'lsp-mode-hook 
;;       (lambda()
;;       (jdee-mode -1)
;;       (flymake-mode -1)  ;; the correct way is  ( flymake-mode-off  )
;;     ))


;      
      (require 'lsp-ui)
      (add-hook 'lsp-mode-hook 'lsp-ui-mode)


;;      
;;      
;;      ;; You may remap xref-find-{definitions,references} (bound to M-. M-? by default):
;;       (define-key lsp-ui-mode-map [remap xref-find-definitions] #'lsp-ui-peek-find-definitions)
;;       (define-key lsp-ui-mode-map [remap xref-find-references] #'lsp-ui-peek-find-references)
;;      
;;      ;; There is a window-local jump list dedicated to cross references:
;;      ;; (lsp-ui-peek-jump-backward)
;;      ;; (lsp-ui-peek-jump-forward)




(require 'lsp-mode)

(use-package lsp-mode
  :init
  (setq lsp-prefer-flymake nil)
;;  (setq lsp-response-timeout 30)

  :demand t
  :after jmi-init-platform-paths)


(use-package lsp-ui
  :config
  (setq lsp-ui-doc-enable t
        lsp-ui-sideline-enable nil
        lsp-ui-flycheck-enable t
	lsp-ui-doc-max-height  8
	lsp-ui-doc-max-width   50
	lsp-ui-doc-position  'bottom
	lsp-ui-doc-delay 3.0
        lsp-ui-doc-include-signature  t
	lsp-response-timeout 30
        lsp-java-maven-download-sources t 
        lsp-java-code-generation-generate-comments t
	)
  :after lsp-mode)



(use-package dap-mode
  :config
  (dap-mode t)
  (dap-ui-mode t))


    (use-package lsp-java
      :init
      (defun jmi/java-mode-config ()
        (setq-local tab-width 4
                    c-basic-offset 4)
        (toggle-truncate-lines 1)
        (setq-local tab-width 4)
        (setq-local c-basic-offset 4)
        (lsp))
    
      :config
      ;; Enable dap-java
      (require 'dap-java)
    
    
      ;; Support Lombok in our projects, among other things
      (setq lsp-java-vmargs
            (list "-noverify"
                  "-Xmx2G"
                  "-XX:+UseG1GC"
                  "-XX:+UseStringDeduplication"
                  (concat "-javaagent:" jmi/lombok-jar)
                  (concat "-Xbootclasspath/a:" jmi/lombok-jar))
            lsp-file-watch-ignored
            '(".idea" ".ensime_cache" ".eunit" "node_modules"
              ".git" ".hg" ".fslckout" "_FOSSIL_"
              ".bzr" "_darcs" ".tox" ".svn" ".stack-work"
              "build")
	    ;;  set your import order packages by 
            lsp-java-import-order '["" "java" "javax" "#"]

            ;; Don't organize imports on save
            lsp-java-save-action-organize-imports  nil
    
            ;; Formatter profile
            lsp-java-format-settings-url
            (concat "file://" jmi/java-format-settings-file))
    
      :hook (java-mode   . jmi/java-mode-config)
    
      :demand t
      :after (lsp lsp-mode dap-mode jmi-init-platform-paths))
    


;;;;;;;;;;;;;;;;;;;;; dap-java  


;; dap-java-test-runner  variable location is wrong in dap-java.el
;; [very important note]  location of junit-platform-console-standalone.jar  is wrong  in dap-java.el
;;   fix it by 
;; [change it like this]  ===>> (expand-file-name (locate-user-emacs-file "eclipse.jdt.ls/server/test-runner/junit-platform-console-standalone.jar"))
;; [change the date]      ===>> (load "~/.emacs.d/elpa/dap-mode-20190722.1641/dap-java.el")
;; 
     (load "~/.emacs.d/elpa/dap-mode-20190831.457/dap-java.el")
          
;; (setenv "JAVA_OPTS" "-Xdebug -Xrunjdwp:transport=dt_socket,server=y,suspend=n,address=1044")
;;
;;  (dap-register-debug-provider
;;   "java"
;;   (lambda (conf)
;;    (plist-put conf :debugPort 1044)
;;    (plist-put conf :host "localhost")
;;    conf))
;; 
;; 
;; (dap-register-debug-template
;;  "javaConfiguration"
;;   (list :type "java"
;;      :request "launch"
;;      :args ""
;;      :name "JDbug"))

;;
;; [old] [old] [old]
;; [fixed]
;;  auto-save-visited file can be recongized by lsp server now, by these config
;; [solved]
;; auto-save will stop the dap-java-debug because the class will not update-generate at the target/classes must save .java manually
;;  (call-interactively  'save-buffer) ;; c-x c-s
;; in emacs 26.1 
;; If you want auto-saving to be done in the (visited file) rather than in a (separate auto-save file),
;; enable the global minor mode
;;   M-x ‘auto-save-visited-mode’.
;;   In this mode, auto-saving is identical to explicit saving. 
;; '(auto-save-default nil) ;; stop auto-save-mode
;; '(auto-save-timeout 0)   ;; stop auto-save 
;; '(auto-save-visited-file-name t)  ;; visited file mean (the real file), save directly in visited file not in the #file#
;; '(auto-save-visited-interval 2)   ;; vistited file after 2 seconds    
;; '(auto-save-visited-mode t)       ;; auto-save-visisted-mode better than auto-save-mode, because it is save as c-x c-s, so jdee and lsp-java will be see it.

;;;;;;;;;;;;;;



;;;;;; [[ fixed ]];;;;;;;;;;;;;;;;;;
;; [fixed]
;;  jumping to the buffers without filters 
;; '(aw-ignore-on nil) ;; aw means ace-window (jump between  windows c-x o)=> ignore some buffers, so stop it, so i can jump to all buffers
;;  so i dont need to set the  'next-multiframe-window like this 
;;  [old] ==>> (global-set-key (kbd "C-x O") 'next-multiframe-window) ;;    Select the next window, regardless of which frame it is on.

;;;;;; [[ fixed ]];;;;;;;;;;;;;;;;;;




;;;;;; [[ fixed ]];;;;;;;;;;;;;;;;;;
;; fix auto-save-visisted-mode(emacs 26) which message still appears.
;;  so the solution is real-auto-save
    (setq auto-save-default nil) ;; old auto-save in emacs 25
    (setq auto-save-visited-mode nil) ;; new auto-save in emacs 26
    (setq auto-save-timeout 0)  ;; disable auto-save
    (setq auto-save-visited-file-name t)  ;; visited file mean (the real file), save directly in visited file not in the #file#
    (setq auto-save-visited-interval 2)   ;; not work now, because the auto-save-visited-mode is nil, the default is 5
    (setq save-silently  t) ;; no messages in minibuffer
    (require 'real-auto-save)   ;; so no need to use (save-buffer like c-x c-s)  
    (setq real-auto-save-interval 4)  ;; save every 4 seconds save the buffer
    (add-hook 'find-file-hook 'real-auto-save-mode)      ;; for all modes open real-auto-save-modes
;;   no need for hooks
;;  (add-hook 'text-mode-hook 'real-auto-save-mode)  ;;when text-mode enabled then real-auto-save-mode enable
;;  (add-hook 'java-mode-hook 'real-auto-save-mode)
;;;;;; [[ fixed ]];;;;;;;;;;;;;;;;;;




;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;;  return  class FDQN. full name
(defun my-lsp-FDQN ()
  (interactive)
  "Get class FDQN. full name"
  (-if-let* ((symbols (lsp--get-document-symbols))
             (package-name (-some->> symbols
                                     (-first (-lambda ((&hash "kind")) (= kind 4)))
                                     (gethash "name")))
             (class-name (->> symbols
                              (--first (= (gethash "kind" it) 5))
                              (gethash "name"))))
      (message (kill-new  (concat package-name "." class-name)))
    ;; kill-new ==> to copy
    ;; message to print in minibuffer
    (user-error "No class found")))

;;  M-x rc  
  (defalias 'rc   'my-lsp-FDQN) ;; return full class name

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;


;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;




(defun my-lsp-new-class ()
  (interactive)
  "create new class with path"
;xxx (call-interactively  'find-file-at-point) ;; to create file without ido mode, same as  c-x c-f c-f 
                         ;; (call-interactively  'make-directory)     ;; to create directory (or not, just press enter ) same as  c-x d alt-m , or in dired use ( + c-f )
;xxx (call-interactively  'save-buffer)        ;; save buffer to the file (because it is empty it will not saved yet)
;xxx (revert-buffer t t)                       ;; without confirm (y)  in dired press g means refresh it, go lsp server  can see the file 
  (-if-let* ((symbols (lsp--get-document-symbols))
             (package-name (-some->> symbols
                                     (-first (-lambda ((&hash "kind")) (= kind 4)))
                                     (gethash "name")))
             )
        (insert (kill-new  (concat package-name "." )))
;;      (insert (kill-new  (concat "package "package-name "\n\n" "public class " class-name)))
    ;; kill-new ==> to copy
    ;; message to print in minibuffer
    (user-error "No class found")))
;;
;;
(global-set-key (kbd "C-c C-d C-n")   'my-lsp-new-class)


;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;




;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;



;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;; lsp-java keys ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;


(define-key java-mode-map (kbd "C-c s") 'pop-tag-mark)
(define-key java-mode-map (kbd "C-.")   'company-complete) ;; faster complete without update, to update use c-. only
(define-key java-mode-map (kbd "C-c j") 'lsp-ui-peek-find-definitions) ;; open decleration
(define-key java-mode-map (kbd "C-c J") 'lsp-ui-peek-find-implementation) ;; C-c shift-j ;; M-x lsp-ui-peek-find-implementation     ==>  who is implement this interface 
(define-key java-mode-map (kbd "C-c C-d j") 'imenus) ;;local  like c-] in eclipse ; M-x imenus-rescan to refresh, fast jump to methods variables, 

(define-key java-mode-map (kbd "C-c C-d J") 'lsp-ui-imenu)  ;;local  like c-] in eclipse ; M-x imenus-rescan to refresh, fast jump to methods variables

(define-key java-mode-map (kbd "C-c C-v n") 'lsp-ui-find-next-reference)   ;; M-x lsp-ui-find-next-reference 
(define-key java-mode-map (kbd "C-c C-v a") 'lsp-ui-find-prev-reference)   ;; M-x lsp-ui-find-prev-reference 

(define-key java-mode-map (kbd "C-2 r") 'lsp-rename)  ;; lsp-rename ==> rename local var
(define-key java-mode-map (kbd "C-c C-d i") 'lsp-java-organize-imports) ;; import all classes
(define-key java-mode-map (kbd "C-c C-d f") 'lsp-format-buffer) ;; format code

;; use M-. M-? to find definition, c-c s to  pop-tag-mark==> return to original point
  (define-key lsp-ui-mode-map     [remap xref-find-definitions] #'lsp-ui-peek-find-definitions)
  (define-key lsp-ui-mode-map     [remap xref-find-references]  #'lsp-ui-peek-find-references)

;;  (defalias 'rc   'my-lsp-FDQN)   ;; return full class name

;;  C-M-n   ==> next method
;;  C-M-p   ==> pre  method
;;  C-M-a   ==> begging of the  method
;;  C-M-e   ==> endding of the   method
;;  c-M-u/d ==> backward-up-list

;;[not work] (define-key java-mode-map (kbd "C-c n") 'senator-next-tag) ;; if set it to global you can use it with xml
;;[not work] (define-key java-mode-map (kbd "C-c p") 'senator-previous-tag) ;; if set it to global you can use it with xml
;;[not work] (define-key java-mode-map (kbd "C-c C-d C-w") 'senator-kill-tag)  ;; use C-y to yank or paste 
;;[not work] (define-key java-mode-map (kbd "C-c C-d M-w") 'senator-copy-tag)  ;; use C-y to yank or paste 
;;[not work] (define-key java-mode-map (kbd "C-c C-d C-c o") 'senator-copy-tag) ;; use C-y to yank or paste 
;;[not work]  (define-key java-mode-map (kbd "C-c C-d C-y") 'senator-yank-tag) ;; use C-y to yank or paste 
;;[not work] (define-key java-mode-map (kbd "C-c C-d r") 'senator-copy-tag-to-register)
;;[not work] (define-key java-mode-map (kbd "C-c C-d ,") 'semantic-force-refresh)
;;[not work] (define-key java-mode-map (kbd "C-c C-d <up>") 'senator-transpose-tags-up) 
;;[not work] (define-key java-mode-map (kbd "C-c C-d <down>") 'senator-transpose-tags-down) 

(define-key java-mode-map (kbd "C-c i") 'lsp-java-generate-getters-and-setters) ;; getter and setter
(define-key java-mode-map (kbd "C-c t") 'lsp-java-generate-equals-and-hash-code) ;; Generates an equals(), a hashCode()  method.
(define-key java-mode-map (kbd "C-c T") 'lsp-java-generate-to-string) ;; Generates an equals(), a hashCode()  method.

(define-key java-mode-map (kbd "C-c C-d t")   'lsp-java-add-throws)
(define-key java-mode-map (kbd "C-c C-d m")   'lsp-java-extract-method)
(define-key java-mode-map (kbd "C-c C-v C-b") 'lsp-java-build-project)
(define-key java-mode-map (kbd "C-c C-v C-r") 'lsp-treemacs-errors-list)
(define-key java-mode-map (kbd "C-c C-v C-d") 'dap-java-debug)
(define-key java-mode-map (kbd "C-c C-v C-c") 'dap-hydra)
(define-key java-mode-map (kbd "C-c C-v o") 'lsp-java-generate-overrides) ;; Generates override methods
(define-key java-mode-map (kbd "C-c C-v i") 'lsp-java-add-unimplemented-methods)
(defalias 'my-pom   'lsp-java-update-project-configuration) ;; 
(define-key java-mode-map (kbd "C-c C-v ;") 'lsp-execute-code-action) ;; generate constroctors with argument, and toString,hashcode,getters,setters
(define-key java-mode-map (kbd "C-c C-v k") 'lsp-restart-workspace)  ;; M-x lsp-restart-workspace
(define-key java-mode-map (kbd "C-c C-v C-w") 'lsp-describe-thing-at-point)  ;; visit web javadoc
(define-key java-mode-map (kbd "C-c C-d g")   'company-yasnippet)  ;; like   c-c space  or  c-c & c-s 
(define-key java-mode-map (kbd "C-c C-v l")   'treemacs-add-and-display-current-project) ;; view project as tree



;; this line  is already above 
;; (add-hook 'java-mode-hook 'hs-minor-mode) ;; open jdee first then open hs-minor mode  ;; C-c @ C-c , it is above ,
;; or just use M-x hs-minor-mode then c-c @ c-c to hide  then c-c @ c-c to show

;; log file 
;; (setq  lsp-log-io  t) ;;reads messages from server
;; M-x   lsp-workspace-show-log
;; see also .log
;;
;; tail -f ~/.emacs.d/workspace/.metadata/.log
;; bookmark ==> lsp-log

;; javadoc
;; javadoc  -d /home/myLSP/myPath/myDoc  -classpath /home/myLSP/myPath/mariadb-java-client-2.3.0.jar:/home/myLSP/myPath/javax.servlet-api-4.0.1.jar   -sourcepath ./              -subpackages *
;; javadoc  -d /home/myLSP/test/  -classpath /home/myLSP/myPath/mariadb-java-client-2.3.0.jar:/home/myLSP/myPath/javax.servlet-api-4.0.1.jar          -sourcepath ./              -subpackages first
;; javadoc  -d /home/myLSP/test/  -classpath /home/myLSP/myPath/mariadb-java-client-2.3.0.jar:/home/myLSP/myPath/javax.servlet-api-4.0.1.jar          -sourcepath ./              -subpackages first:ok
;; javadoc  -d [destination dir]  -classpath [classpath:classpath]                                                                                     -sourcepath [source dir]   -subpackages [package1:subpackage:subpackage]


;; need shortcut keys
;; need shortcut keys
;; M-x  lsp-java-update-project-uris     Update WORKSPACE project uris.
;; M-x lsp-java-actionable-notifications
;; M-x lsp-goto-implementation  ==>  Find implementations of the symbol under point.;; same as  (define-key java-mode-map (kbd "C-c J") 'lsp-ui-peek-find-implementation) ;; C-c shift-j ;; M-x lsp-ui-peek-find-implementation     ==>  who is implement this interface 
;; M-x treemacs-add-project-to-workspace
;; M-x lsp-workspace-show-log  first must set-variable lsp-log-io  t, then viewt the massages
;; M-x lsp-java-update-server	         Update LDT LS server form internet
;; M-x lsp-java-classpath-open
;; M-x lsp-java-create-parameter        Create parameter refactoring.
;;
;; [[lsp variables]]
;;  lsp-java-bundles  nil
;;
;;
;;
;; xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
;; xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;; lsp-java keys ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;



;;;;;;;;;;;;;;;;;;;;;;;;; end  lsp java ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;;;;;;;;;;;;;;;;;;;;;;;;; end  lsp java ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;;;;;;;;;;;;;;;;;;;;;;;;; end  lsp java ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;



# i chocked by lsp-java
 // Failed to get sources. Instead, stub sources have been generated by the disassembler.

(setq  lsp-java-java-path  "/home/myLSP/Xmysource/jdk-11.0.2/bin/java") ;; change the jdk version but cant see the src.zip when changed

(setq  lsp-java-maven-download-sources t )   nil  ==> it will be done by M-x lsp-java-update-project-configuration

var   lsp-java-code-generation-generate-comments  nil   ==>  set it to  t
     ;; if company-lsp mode is work 


# full config lsp-mode
https://emacs.nasy.moe/

# twitter lsp mode
https://twitter.com/yonchovski

# config lsp-mode
https://github.com/RezoChiang/prelude/tree/rezo-lsp/modules


# lsp-mode lsp-java config 
https://blog.jmibanez.com/2019/03/31/emacs-as-java-ide-revisited.html


M-x company-complete  ==> complete as menu 
M-x dap-hydra         ==> easy keybinding

M-x lsp-ui-find-next-reference
M-x lsp-ui-find-prev-reference
M-x lsp-ui-find-workspace-symbol
M-x lsp-ui-sideline-mode
M-x lsp-format-buffer   ==> c-d c-d f
M-x lsp-java-add-import 
 M-x lsp   ==> connected server
 M-x lsp-restart-workspace  
M-x lsp-java-build-project
M-x lsp-java-update-project-configuration  in pom.xml => like mvn command  build pom.xml project 
M-x imenus            ==> fast jump to methods variables ;; (define-key java-mode-map (kbd "C-c C-d j") 'imenus) ;;local  like c-] in eclipse ; M-x imenus-rescan to refresh
M-x lsp-ui-imenu c-c c-d J => list all methods/files 
M-x next-multiframe-window    ==> to jump to treemacs, '(aw-ignore-on nil) ;; aw means ace-window (jump between  windows c-x o)=> ignore some buffers, so stop it, so i can jump to all buffers
M-x lsp-java-organize-imports     to fix import and 
M-x lsp-execute-code-action   ==> to fix import and generate getter and setter and toString overriden methods and ...
M-x lsp-java-add-import	        Add missing import.
  M-x lsp-java-add-throws	        Extract constant refactoring.
M-x lsp-goto-implementation	        Find implementations of the symbol under point.
M-x lsp-goto-type-definition        Find type definitions of the symbol under point.
M-x lsp-java-actionable-notifications    Lists current actionable notifications.
M-x lsp-java-add-unimplemented-methods
 M-x lsp-ui-peek-find-implementation     ==>  who is implement this interface 
(setq  lsp-java-maven-download-sources t )   nil
(setq  lsp-java-java-path  "java")
 lsp-java-jdt-download-url  "http://download.eclipse.org/jdtls/snapshots/jdt-language-server-latest.tar.gz"






# lsp-mode lsp-java config 
https://blog.jmibanez.com/2019/03/31/emacs-as-java-ide-revisited.html

(add-hook 'java-mode-hook #'lsp)
(add-hook 'java-mode-hook 'flycheck-mode)
(add-hook 'java-mode-hook 'company-mode)

# lsp-mode for every thing xml js html css web flycheck





;; .emacs 

(require 'lsp-java)
(add-hook 'java-mode-hook #'lsp)

(require 'lsp-ui)
(add-hook 'lsp-mode-hook 'lsp-ui-mode)
(add-hook 'java-mode-hook 'flycheck-mode)

;; You may remap xref-find-{definitions,references} (bound to M-. M-? by default):
(define-key lsp-ui-mode-map [remap xref-find-definitions] #'lsp-ui-peek-find-definitions)
(define-key lsp-ui-mode-map [remap xref-find-references] #'lsp-ui-peek-find-references)

;; There is a window-local jump list dedicated to cross references:
(lsp-ui-peek-jump-backward)
(lsp-ui-peek-jump-forward)

;; Other cross references:
   (lsp-ui-peek-find-workspace-symbol "pattern 0")
;; If the server supports custom cross references
   (lsp-ui-peek-find-custom 'base "$cquery/base")


;; c-j to enter 

;; problem M-x package-install => pad request
remove https from
    (("gnu" . "http://elpa.gnu.org/packages/")
     ("melpa" . "http://melpa.org/packages/")
     ("marmalade" . "http://marmalade-repo.org/packages/"))))

ido-ubiquitous and  'ido-completing-read+ ==> produce this error
;; dont touch these packages 
;; (package-reinstall   'ido-ubiquitous )
;; (package-reinstall   'ido-completing-read+)


[very-important note]
M-x package-refresh-contents






;; emacs lsp 
 root 15248 100.0 11.0  16:47 01:06 /usr/bin/java
-Declipse.application=org.eclipse.jdt.ls.core.id1
-Dosgi.bundles.defaultStartLevel=4
-Declipse.product=org.eclipse.jdt.ls.core.product
-Dlog.protocol=true -Dlog.level=ALL
-noverify -Xmx1G -XX:+UseG1GC -XX:+UseStringDeduplication
-jar /root/.emacs.d/eclipse.jdt.ls/server/plugins/org.eclipse.equinox.launcher_1.5.500.v20190715-1310.jar
-configuration /root/.emacs.d/eclipse.jdt.ls/server/config_linux
-data /root/.emacs.d/workspace/ --add-modules=ALL-SYSTEM --add-opens\ java.base/java.util=ALL-UNNAMED
--add-opens\ java.base/java.lang=ALL-UNNAMED

;; eclipse command 
  root  4187  5.7 13.2  13:22 14:22 /usr/bin/java
  -Dosgi.requiredJavaVersion=1.8
  -Dosgi.instance.area.default=@user.home/eclipse-workspace
  -XX:+UseG1GC -XX:+UseStringDeduplication
  --add-modules=ALL-SYSTEM -Dosgi.requiredJavaVersion=1.8
  -Dosgi.dataAreaRequiresExplicitInit=true -Xms256m -Xmx1024m
  --add-modules=ALL-SYSTEM
  -jar /home/myLSP/eclipse//plugins/org.eclipse.equinox.launcher_1.5.400.v20190515-0925.jar
  -os linux -ws gtk -arch x86_64
  -showsplash /home/myLSP/eclipse//plugins/org.eclipse.epp.package.common_4.12.0.20190614-1200/splash.bmp
  -launcher /home/myLSP/eclipse/eclipse
  -name Eclipse --launcher.library /home/myLSP/eclipse//plugins/org.eclipse.equinox.launcher.gtk.linux.x86_64_1.1.1000.v20190125-2016/eclipse_1801.so
  -startup /home/myLSP/eclipse//plugins/org.eclipse.equinox.launcher_1.5.400.v20190515-0925.jar
  --launcher.appendVmargs -exitdata b8008 -product org.eclipse.epp.package.jee.product
  -vm /usr/bin/java -vmargs -Dosgi.requiredJavaVersion=1.8
  -Dosgi.instance.area.default=@user.home/eclipse-workspace
  -XX:+UseG1GC -XX:+UseStringDeduplication --add-modules=ALL-SYSTEM -Dosgi.requiredJavaVersion=1.8
  -Dosgi.dataAreaRequiresExplicitInit=true -Xms256m -Xmx1024m --add-modules=ALL-SYSTEM
  -jar /home/myLSP/eclipse//plugins/org.eclipse.equinox.launcher_1.5.400.v20190515-0925.jar


;; eclipse apache (not remote debug)
root 7893  2.1  1.5  14:25 00:09 /usr/lib/jvm/java-11-openjdk-amd64/bin/java
-Dcatalina.base=/home/myLSP/lspWorkspace/.metadata/.plugins/org.eclipse.wst.server.core/tmp0
-Dcatalina.home=/home/myLSP/myPath/apache-tomcat-9.0.12
-Dwtp.deploy= /home/myLSP/lspWorkspace/.metadata/.plugins/org.eclipse.wst.server.core/tmp0/wtpwebapps
-Dfile.encoding=UTF-8
-classpath /home/myLSP/myPath/apache-tomcat-9.0.12/bin/bootstrap.jar
          :/home/myLSP/myPath/apache-tomcat-9.0.12/bin/tomcat-juli.jar
       org.apache.catalina.startup.Bootstrap start


;; emacs debug (remote debug)
  root 17550  7.7  0.5  17:33 00:00 /usr/lib/jvm/java-11-openjdk-amd64/bin/java
  -Xdebug -Xnoagent -Djava.compiler=NONE
  -Xrunjdwp:transport=dt_socket,address=localhost:46019,server=n,suspend=y
  -Dfile.encoding=UTF-8
  -cp  /home/myLSP/lspWorkspace/Test5/target/classes
      :/home/myLSP/myPath/mariadb-java-client-2.3.0.jar
      :/home/myLSP/myPath/javax.servlet-api-4.0.1.jar
      :/root/.m2/repository/javax/servlet/javax.servlet-api/4.0.1/javax.servlet-api-4.0.1.jar
      :/root/.m2/repository/org/mariadb/jdbc/mariadb-java-client/2.3.0/mariadb-java-client-2.3.0.jar
      first.Hi


;; eclipse debug
  root 5198  1.1  0.6  19:17 00:00 /usr/lib/jvm/java-11-openjdk-amd64/bin/java
  -agentlib:jdwp=transport=dt_socket,suspend=y,address=localhost:46695
  -javaagent:/home/myLSP/eclipse/configuration/org.eclipse.osgi/405/0/.cp/lib/javaagent-shaded.jar
  -Dfile.encoding=UTF-8
  -classpath /home/myLSP/lspWorkspace/Test5/target/classes
            :/home/myLSP/myPath/mariadb-java-client-2.3.0.jar
            :/home/myLSP/myPath/javax.servlet-api-4.0.1.jar
	    :/root/.m2/repository/javax/servlet/javax.servlet-api/4.0.1/javax.servlet-api-4.0.1.jar
	    :/root/.m2/repository/org/mariadb/jdbc/mariadb-java-client/2.3.0/mariadb-java-client-2.3.0.jar
	    first.Hi


;; filter dap-debug
  /home/myLSP/lspWorkspace/.metadata/.plugins/org.eclipse.core.runtime/.settings/org.eclipse.jdt.debug.ui.prefs
 ./.metadata/.plugins/org.eclipse.core.runtime/.settings/org.eclipse.jdt.debug.ui.prefs:3:org.eclipse.jdt.debug.ui.active_filters=com.ibm.*,com.sun.*,java.*,javax.*,jrockit.*,org.eclipse.jdt.launching.internal.*,org.omg.*,sun.*,sunw.*,java.lang.ClassLoader
  root 27777 100.0  8.5  19:20 01:59 /usr/bin/java -Dosgi.requiredJavaVersion=1.8 -Dosgi.instance.area.default=@user.home/eclipse-workspace -XX:+UseG1GC -XX:+UseStringDeduplication --add-modules=ALL-SYSTEM -Dosgi.requiredJavaVersion=1.8 -Dosgi.dataAreaRequiresExplicitInit=true -Xms256m -Xmx1024m --add-modules=ALL-SYSTEM -jar /home/myLSP/eclipse//plugins/org.eclipse.equinox.launcher_1.5.400.v20190515-0925.jar -os linux -ws gtk -arch x86_64 -showsplash /home/myLSP/eclipse//plugins/org.eclipse.epp.package.common_4.12.0.20190614-1200/splash.bmp -launcher /home/myLSP/eclipse/eclipse -name Eclipse --launcher.library /home/myLSP/eclipse//plugins/org.eclipse.equinox.launcher.gtk.linux.x86_64_1.1.1000.v20190125-2016/eclipse_1801.so -startup /home/myLSP/eclipse//plugins/org.eclipse.equinox.launcher_1.5.400.v20190515-0925.jar --launcher.appendVmargs -exitdata 468008 -product org.eclipse.epp.package.jee.product -vm /usr/bin/java -vmargs -Dosgi.requiredJavaVersion=1.8 -Dosgi.instance.area.default=@user.home/eclipse-workspace -XX:+UseG1GC -XX:+UseStringDeduplication --add-modules=ALL-SYSTEM -Dosgi.requiredJavaVersion=1.8 -Dosgi.dataAreaRequiresExplicitInit=true -Xms256m -Xmx1024m --add-modules=ALL-SYSTEM -jar /home/myLSP/eclipse//plugins/org.eclipse.equinox.launcher_1.5.400.v20190515-0925.jar
  root 27889   9.8  0.6  19:20 00:01 /usr/lib/jvm/java-11-openjdk-amd64/bin/java -agentlib:jdwp=transport=dt_socket,suspend=y,address=localhost:46065 -javaagent:/home/myLSP/eclipse/configuration/org.eclipse.osgi/405/0/.cp/lib/javaagent-shaded.jar -Dfile.encoding=UTF-8 -classpath /home/myLSP/lspWorkspace/Test5/target/classes:/home/myLSP/myPath/mariadb-java-client-2.3.0.jar:/home/myLSP/myPath/javax.servlet-api-4.0.1.jar:/root/.m2/repository/javax/servlet/javax.servlet-api/4.0.1/javax.servlet-api-4.0.1.jar:/root/.m2/repository/org/mariadb/jdbc/mariadb-java-client/2.3.0/mariadb-java-client-2.3.0.jar first.Hi

# try this instead of cp hard link, because the cp -l, cant see the new files, ln cant see the folders,
# so the best one is mount --bind
# mount --bind olddir newdir     ==> (all for reading and write )
# mount -o bind,ro olddir newdir ==> olddir (will be rw), but newdir(read only)
# 

(defun my-webapp-lanuch()
(interactive)
"launch webapp from lsp workspace to apache tomcat by mount binding, 0 means ok,  1 or else means fail => c-h e(view message errors)
  the option (o) in mount -o bind ro ==> the webapps in server will be read-only, so if you delete the ro it will be for read and write "
   (shell-command "umount   /home/jdee_workspace/sourcePathx/servers/tomcat9/webapps/web1/WEB-INF/classes/")
   (shell-command "umount   /home/jdee_workspace/sourcePathx/servers/tomcat9/webapps/web1/")
   (shell-command "mkdir -p                                                       /home/jdee_workspace/sourcePathx/servers/tomcat9/webapps/web1/")
   (shell-command "mount -o bind /home/myLSP/lspWorkspace/web1/WebContent/        /home/jdee_workspace/sourcePathx/servers/tomcat9/webapps/web1/")
   (shell-command "mkdir -p                                                       /home/jdee_workspace/sourcePathx/servers/tomcat9/webapps/web1/WEB-INF/classes/")
   (shell-command "mount -o bind /home/myLSP/lspWorkspace/web1/build/classes/     /home/jdee_workspace/sourcePathx/servers/tomcat9/webapps/web1/WEB-INF/classes/")
)
;; end of defun

(defun my-webapp-turning-off()
(interactive)
"turning off launching  webapp by  umount binding,# 0 ok ;; 1 or else  fail => c-h e(view message errors)"
   (shell-command "umount   /home/jdee_workspace/sourcePathx/servers/tomcat9/webapps/web1/WEB-INF/classes/")
   (shell-command "umount   /home/jdee_workspace/sourcePathx/servers/tomcat9/webapps/web1/")
)
;; end of defun

;; dont use the M-x tomcat-clean because it will remove all mounted webapps folders from webapps and from workspace 


#  http://localhost:8080/web1/html/index.html
#  http://localhost:8080/web1/html/FirstJsp.jsp
#  http://localhost:8080/web1/html/index.html
#  http://localhost:8080/web1/html/addLeague.do?
#  http://localhost:8080/web1/html/testSession.view
#  http://localhost:8080/web1/html/myCookie.view




;;  java -jar /home/jdee_workspace/sourcePathx/jars/private_JAR/checkstyle-8.12-all.jar -c /home/jdee_workspace/sourcePathx/jars/private_JAR/checkstyle-8.12-all/sun_checks.xml  Hi.java
;; M-x my-lsp-new-class then  grep-mode  to visit the file
(defun my-lsp-java-checkstyle()
(interactive)
 "lsp-java checkstyle by command java -jar checkstyle -c sun.xml  current_file.java"
  (shell-command (concat "/usr/bin/java -jar /home/jdee_workspace/sourcePathx/jars/private_JAR/checkstyle-8.12-all.jar -c /home/jdee_workspace/sourcePathx/jars/private_JAR/checkstyle-8.12-all/sun_checks.xml  "(buffer-name)))
  (other-window 1)  ;; jump to the other window
  (grep-mode)
)
;; end of defun





;; in lsp-treemacs.el define-key  [[ x r = ]] are already exisit
;; thes keys  are already in lsp-treemacs.el but i added C-1 for 'lsp-treemacs-quick-fix looks like eclipse quick-assist 
;; x     (c-2)                   lsp-treemacs-quick-fix ;; like C-1 in eclipse to fix-errors
;; r     (refresh)               lsp-treemacs-java-deps-refresh ;; 
;; =     (show/hide ifo/warning) lsp-treemacs-cycle-severity ;; hide/show info,warning
;;
   (define-key lsp-treemacs-error-list-mode-map  (kbd "C-2") 'lsp-treemacs-quick-fix)  ;; C-1 after C-c C-v C-r

;; error when press x lsp-treemacs-quick-fix
Nov 21, 2019 10:06:54 org.eclipse.lsp4j.jsonrpc.RemoteEndpoint fallbackResponseError()
Message: Internal error: java.lang.NullPointerException
java.util.concurrent.CompletionException: java.lang.NullPointerException
	at java.base/java.util.concurrent.CompletableFuture.encodeThrowable(CompletableFuture.java:314)
	at java.base/java.util.concurrent.CompletableFuture.completeThrowable(CompletableFuture.java:319)
	at java.base/java.util.concurrent.CompletableFuture$UniApply.tryFire(CompletableFuture.java:645)
	at java.base/java.util.concurrent.CompletableFuture$Completion.exec(CompletableFuture.java:479)
	at java.base/java.util.concurrent.ForkJoinTask.doExec(ForkJoinTask.java:290)
	at java.base/java.util.concurrent.ForkJoinPool$WorkQueue.topLevelExec(ForkJoinPool.java:1020)
	at java.base/java.util.concurrent.ForkJoinPool.scan(ForkJoinPool.java:1656)
	at java.base/java.util.concurrent.ForkJoinPool.runWorker(ForkJoinPool.java:1594)
	at java.base/java.util.concurrent.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:177)
Caused by: java.lang.NullPointerException
	at org.eclipse.lsp4xml.commons.LanguageModelCache.get(LanguageModelCache.java:56)
	at org.eclipse.lsp4xml.XMLTextDocumentService.getXMLDocument(XMLTextDocumentService.java:182)
	at org.eclipse.lsp4xml.XMLTextDocumentService.lambda$14(XMLTextDocumentService.java:338)
	at java.base/java.util.concurrent.CompletableFuture$UniApply.tryFire(CompletableFuture.java:642)
	... 6 more


apt openjdk-11-jdk the result will be 
openjdk-11-jre-zero
openjdk-11-jdk
openjdk-11-jdk-headless
openjdk-11-demo
openjdk-11-jre
openjdk-11-dbg
openjdk-11-jre-headless
openjdk-11-source
openjdk-11-doc

root@zink:~# apt install  openjdk-11-jdk  openjdk-11-doc openjdk-11-source 
the result is
openjdk-11-jre-zero
openjdk-11-jdk
openjdk-11-jdk-headless
openjdk-11-demo
openjdk-11-jre
openjdk-11-dbg
openjdk-11-jre-headless
openjdk-11-source
openjdk-11-doc
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

;;[done]
set it as C-c c-d c-S-f
   ("C-c C-d C-f"  .  lsp-ui-find-workspace-symbol) ;; search inside ~/.emacs.d/workspace not works as expected, but c-c c-d f(format code)

;;[not done] set it as c-c c-d c-f as global 
(defun my-lsp-find-in-project-as-grep ()
"search inside all files in project like this 
 /home/myLSP/lspWorkspace/web03/
 in grep use wildcards 
 "
(interactive)
 (let (
  ;; "/home/myLSP/lspWorkspace/web03/"
  ;; find '/home/myLSP/lspWorkspace/web03' -iname '*'  -type f -exec grep  --color  -nHi -e 'leagueList' {} +
  (my-lsp-project-name-for-search (format "%s"    (replace-regexp-in-string "/src/.*"  "" (expand-file-name ""))))
  (my-lsp-project-search-for-word-as-grep (format "%s" (read-string "find as grep : ")))  
  ) ;; end of let definition
  (find-grep (format "find '%s' -iname '*'  -type f -exec grep  --color  -nHi -e '%s' {} +" my-lsp-project-name-for-search   my-lsp-project-search-for-word-as-grep))
  ) ;; end of let
 ) ;; end of my-lsp-generate-javadoc-html
(global-set-key (kbd "C-c C-d C-f")   'my-lsp-find-in-project-as-grep)


[done]
(defalias 'my-pom   'lsp-java-update-project-configuration) ;;  update pom.xml prject, M-x my-pom inside pom.xml xml-mode not java-mode
(defalias 'my-boot  'my-toggle-spring-boot-server-on-off) ;; (defalias 'my-boot  'my-toggle-spring-boot-server-on-off) ;; 

# generated error called
# error in process filter: Wrong type argument: integer-or-marker-p, nil
 '(dap-ui-default-fetch-count 100)
 '(dap-ui-expressiosn-expand-depth 1)
 '(dap-ui-locals-expand-depth 1)
 '(dap-ui-variable-length 100)


# json error (if not using emacs 27.1)
# lsp java emacs File mode specification error: (void-function json-serialize)
M-x packager-reinstall lsp-mode lsp-java lsp-ui lsp-treemacs



# error when c-c c-v c-d run java
Debug session process exited with status: deleted
the solution is
https://github.com/emacs-lsp/dap-mode/issues/110
When the session ends up like that there is stderr buffer with an error message.
The issue is outside emacs, what do you have in the error buffer?
So if you look at the buffer list there should be buffer which name ends with stderr*, can you paste the content of that buffer?

read  stderr* buffer 
WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by com.google.gson.internal.ConstructorConstructor (file:/home/ahmad/.emacs.d/.cache/lsp/eclipse.jdt.ls/plugins/com.google.gson_2.8.2.v20180104-1110.jar) to constructor java.lang.StackTraceElement()
WARNING: Please consider reporting this to the maintainers of com.google.gson.internal.ConstructorConstructor
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
so the problem in gson_2.8.2.v20180104-1110.jar
(file:/home/ahmad/.emacs.d/.cache/lsp/eclipse.jdt.ls/plugins/com.google.gson_2.8.2.v20180104-1110.jar) to constructor java.lang.StackTraceElement()
so the problem in jdk version 11 12 13 14 15 ...
https://github.com/google/gson/issues/1540

jdtls server latest version 
https://github.com/eclipse/eclipse.jdt.ls/
https://download.eclipse.org/jdtls/snapshots/jdt-language-server-latest.tar.gz


# change jdk version in lsp 
lsp-java-java-path
(setq lsp-java-java-path "D:/xxx/Documents/utils/jdk1.8.0_202/jre/bin/java.exe")


# debug filter
https://marketplace.visualstudio.com/items?itemName=vscjava.vscode-java-debug
skipClasses - Skip the specified classes when stepping. You could use the built-in variables such as '$JDK' and '$Libraries' to skip a group of classes, or add a specific class name expression, e.g. java.*, *.Foo


# java configurations in lsp
https://github.com/redhat-developer/vscode-java/#setting-the-jdk
https://marketplace.visualstudio.com/items?itemName=vscjava.vscode-java-debug

in debug i found 
java.debug.settings.stepping.skipClasses: Skip the specified classes when stepping. You could use the built-in variables such as '$JDK' and '$Libraries' to skip a group of classes, or add a specific class name expression, e.g. java.*, *.Foo

example of using java configuration in lsp 
https://github.com/emacs-lsp/lsp-java/issues/249
java.configuration.runtimes
(setq lsp-java-configuration-runtimes '[(:name "JavaSE-8"
                                                 :path "/home/kyoncho/.java-jdk/"
                                                 :default t)])




("java.completion.filteredTypes" lsp-java-completion-filtered-types)

(defcustom lsp-java-completion-filtered-types ["java.awt.*" "com.sun.*"]
  "Defines the type filters. All types whose fully qualified name
  matches the selected filter strings will be ignored in content
assist or quick fix proposals and when organizing imports. For
example 'java.awt.*' will hide all types from the awt packages."
  :type 'lsp-string-vector
  :group 'lsp-java)


("java.debug.settings.stepping.skipClasses" lsp-java.debug.settings.stepping.skipClasses)

(defcustom lsp-java.debug.settings.stepping.skipClasses  ["java.lang.*" "java.util.*"] 
  " java filters in debug java.lang.* java.util.*
    that is it 
  "
  :type 'lsp-string-vector
  :group 'lsp-java)


(setq lsp-java.debug.settings.stepping.skipClasses ["java.lang.*" "java.util.*"] )



# stderr*  in lsp java produce by gson
# what is gson, it it java object json , so i will use emacs 27 with libjansson-dev , then reinsalll lsp-java lsp-mode lsp-ui lsp-treemacs
sudo apt install libjansson-dev   ;; json file between jdtls and emacs 
sudo aptitude  install   libjansson-dev    ;; the reinstall lsp-mode in emacs to stop using json files 
(file:/home/ahmad/.emacs.d/.cache/lsp/eclipse.jdt.ls/plugins/com.google.gson_2.8.2.v20180104-1110.jar) to constructor java.lang.StackTraceElement()


gson
A Java serialization/deserialization library to convert Java Objects into JSON and back









# seperated line 
# soso
# soso
# soso
# soso
# seperated line 
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
Type RET on an entry to view its full documentation.

lsp--erase-log-buffer	      M-x ... RET
   Delete contents of current lsp log buffer.
lsp--erase-session-log-buffers M-x ... RET
   Erase log buffers of the running session.
lsp-avy-lens		      M-x ... RET
   Click lsp lens using `avy' package.
lsp-breadcrumb-go-to-symbol   M-x ... RET
   Go to the symbol on breadcrumb at SYMBOL-POSITION.
lsp-breadcrumb-narrow-to-symbol	M-x ... RET
   Narrow to the symbol range on breadcrumb at SYMBOL-POSITION.
lsp-browser-mode	      M-x ... RET
   Define mode for displaying lsp sessions.
lsp-clojure-add-import-to-namespace M-x ... RET
   Add to IMPORT-NAME to :import form.
lsp-clojure-add-missing-libspec	M-x ... RET
   Apply add-missing-libspec refactoring at point.
lsp-clojure-clean-ns	      M-x ... RET
   Apply clean-ns refactoring at point.
lsp-clojure-cursor-info	      M-x ... RET
   Request cursor info at point.
lsp-clojure-cycle-coll	      M-x ... RET
   Apply cycle-coll refactoring at point.
lsp-clojure-cycle-privacy     M-x ... RET
   Apply cycle-privacy refactoring at point.
lsp-clojure-expand-let	      M-x ... RET
   Apply expand-let refactoring at point.
lsp-clojure-extract-function  M-x ... RET
   Move form at point into a new function named FUNCTION-NAME.
lsp-clojure-inline-symbol     M-x ... RET
   Apply inline-symbol refactoring at point.
lsp-clojure-introduce-let     M-x ... RET
   Move form at point into a new let binding as BINDING-NAME.
lsp-clojure-move-to-let	      M-x ... RET
   Move form at point into nearest existing let binding as
   BINDING-NAME.
lsp-clojure-server-info	      M-x ... RET
   Request server info.
lsp-clojure-thread-first      M-x ... RET
   Apply thread-first refactoring at point.
lsp-clojure-thread-first-all  M-x ... RET
   Apply thread-first-all refactoring at point.
lsp-clojure-thread-last	      M-x ... RET
   Apply thread-last refactoring at point.
lsp-clojure-thread-last-all   M-x ... RET
   Apply thread-last-all refactoring at point.
lsp-clojure-unwind-all	      M-x ... RET
   Apply unwind-all refactoring at point.
lsp-clojure-unwind-thread     M-x ... RET
   Apply unwind-thread refactoring at point.
lsp-completion-mode	      M-x ... RET
   Toggle LSP completion support.
lsp-csharp-update-server      M-x ... RET
   Checks if the currently installed version (if any) is lower than
   then one
lsp-describe-session	      s-l s d
   Describes current `lsp-session'.
lsp-describe-thing-at-point   s-l h h, C-c C-v C-w
   Display the type signature and documentation of the thing at
lsp-diagnose		      M-x ... RET
   Validate performance settings.
lsp-diagnostics-mode	      M-x ... RET
   Toggle LSP diagnostics integration.
lsp-diagnostics-modeline-mode M-x ... RET
   Toggle diagnostics modeline.
lsp-disconnect		      s-l s D
   Disconnect the buffer from the language server.
lsp-doctor		      M-x ... RET
   Validate performance settings.
lsp-document-highlight	      s-l a h
   Highlight all relevant references to the symbol under point.
lsp-eslint-apply-all-fixes    M-x ... RET
   Apply all autofixes in the current buffer.
lsp-eslint-create-default-configuration	M-x ... RET
   Create default eslint configuration.
lsp-eslint-fix-all	      M-x ... RET
   Perform the source.fixAll.eslint code action, if available.
lsp-evil-multiedit-highlights M-x ... RET
   Start an `evil-multiedit' operation on the documentHighlights at
   point.
lsp-execute-code-action	      s-l a a, C-c C-d s, C-c C-d C-s, C-2 c
   Execute code action ACTION.
   lsp-extend-selection	      M-x ... RET
   Extend selection.
lsp-find-declaration	      M-x ... RET
   Find declarations of the symbol under point.
lsp-find-definition	      s-l g g
   Find definitions of the symbol under point.
lsp-find-definition-mouse     <C-down-mouse-1>
   Click to start `lsp-find-definition' at clicked point.
lsp-find-implementation	      s-l g i, C-c J
   Find implementations of the symbol under point.
lsp-find-references	      s-l g r, C-c C-v m
   Find references of the symbol under point.
lsp-find-type-definition      s-l g t
   Find type definitions of the symbol under point.
lsp-format-buffer	      s-l = =, C-c C-d f
   Ask the server to format this document.
lsp-format-region	      s-l = r
Ask the server to format the region, or if none is selected, the
   current line.
lsp-fsharp-update-fsac	      M-x ... RET
   Update fsautocomplete to the latest version.
lsp-goto-implementation	      M-x ... RET
   Find implementations of the symbol under point.
lsp-goto-type-definition      M-x ... RET
   Find type definitions of the symbol under point.
lsp-headerline-breadcrumb-mode s-l T b
   Toggle breadcrumb on headerline.
lsp-iedit-highlights	      M-x ... RET
   Start an `iedit' operation on the documentHighlights at point.
lsp-install-server	      M-x ... RET
   Interactively install server.
lsp-java-add-import	      M-x ... RET
   Add missing import.
lsp-java-add-throws	      C-1 t
   Extract constant refactoring.
lsp-java-add-unimplemented-methods C-1 i
   Extract constant refactoring.
lsp-java-assign-all	      C-1 a
   Assign to new field.
lsp-java-assign-to-field      C-1 f
   Assign to new field.
lsp-java-boot-lens-mode	      M-x ... RET
   Toggle code-lens overlays.
lsp-java-build-project	      C-c C-v C-b
   Perform project build action.
lsp-java-convert-to-static-import M-x ... RET
   Convert to static import.
lsp-java-create-field	      M-x ... RET
   Create field refactoring.
lsp-java-create-local	      M-x ... RET
   Create local refactoring.
lsp-java-create-parameter     C-1 p
   Create parameter refactoring.
lsp-java-extract-method	      C-2 m
   Extract method refactoring.
lsp-java-extract-to-constant  M-x ... RET
   Extract constant refactoring.
lsp-java-extract-to-local-variable C-1 l
   Extract local variable refactoring.
lsp-java-generate-equals-and-hash-code C-c t
   Generate `hashCode' and `equals' methods.
lsp-java-generate-getters-and-setters C-c i
   Generate getter and setters with prompt.
lsp-java-generate-overrides   C-1 o
   Override methods.
lsp-java-generate-to-string   C-c T
   Generate `toString' method.
lsp-java-inline		      M-x ... RET
   Inline.
lsp-java-lens-mode	      M-x ... RET
   Toggle run/debug overlays.
lsp-java-open-super-implementation M-x ... RET
   Open super implementation.
lsp-java-organize-imports     C-c C-d i
   Organize java imports.
lsp-java-spring-initializr    M-x ... RET
   Emacs frontend for https://start.spring.io/.
lsp-java-update-project-configuration M-x ... RET
   Update project configuration.
lsp-java-update-server	      M-x ... RET
   (not documented)
lsp-jt-browser		      M-x ... RET
   (not documented)
lsp-jt-lens-mode	      M-x ... RET
   Toggle code-lens overlays.
lsp-lens-hide		      M-x ... RET
   Delete all lenses.
lsp-lens-mode		      s-l T l
   Toggle code-lens overlays.
lsp-lens-show		      M-x ... RET
   Display lenses in the buffer.
lsp-log-io-mode		      M-x ... RET
   Special mode for viewing IO logs.
lsp-log-io-next		      M-x ... RET
   Move to next log entry.
lsp-log-io-prev		      M-x ... RET
   Move to previous log entry.
lsp-managed-mode	      M-x ... RET
   Mode for source buffers managed by lsp-mode.
lsp-mode		      M-x ... RET
   (not documented)
lsp-modeline-code-actions-mode s-l T a
   Toggle code actions on modeline.
lsp-modeline-diagnostics-mode s-l T D
   Toggle diagnostics modeline.
lsp-modeline-workspace-status-mode M-x ... RET
   Toggle workspace status on modeline.
lsp-mouse-click		      <mouse-3>
   (not documented)
lsp-org			      M-x ... RET
   (not documented)
lsp-organize-imports	      s-l r o
   Perform the source.organizeImports code action, if available.
lsp-phpactor-install-extension M-x ... RET
   Install a `phpactor' EXTENSION.
lsp-rename		      s-l r r, C-2 r
   Rename the symbol (and all references to it) under point to
   NEWNAME.
lsp-restart-workspace	      C-c C-v k
   (not documented)
lsp-rust-analyzer-expand-macro M-x ... RET
   Expands the macro call at point recursively.
lsp-rust-analyzer-inlay-hints-mode M-x ... RET
   Mode for displaying inlay hints.
lsp-rust-analyzer-join-lines  M-x ... RET
Join selected lines into one, smartly fixing up whitespace and
   trailing commas.
lsp-rust-analyzer-rerun	      M-x ... RET
   (not documented)
lsp-rust-analyzer-run	      M-x ... RET
   Select and run a runnable action.
lsp-rust-analyzer-status      M-x ... RET
   Displays status information for rust-analyzer.
lsp-rust-analyzer-status-mode M-x ... RET
   Mode for the rust-analyzer status buffer.
lsp-rust-analyzer-syntax-tree M-x ... RET
   Display syntax tree for current buffer.
lsp-rust-analyzer-syntax-tree-mode M-x ... RET
   Mode for the rust-analyzer syntax tree buffer.
lsp-rust-find-parent-module   M-x ... RET
   Find parent module of current module.
lsp-rust-switch-server	      M-x ... RET
   Switch priorities of lsp servers, unless LSP-SERVER is already
   active.
lsp-semantic-tokens-mode      M-x ... RET
   Toggle semantic-tokens support.
lsp-shutdown-workspace	      M-x ... RET
   Shutdown language server.
lsp-signature-activate	      s-l h s, C-S-SPC
   Activate signature help.
lsp-signature-mode	      M-x ... RET
   (not documented)
lsp-signature-next	      M-x ... RET
   Show next signature.
lsp-signature-previous	      M-x ... RET
   Next signature.
lsp-signature-stop	      M-x ... RET
   Stop showing current signature help.
lsp-signature-toggle-full-docs M-x ... RET
   Toggle full/partial signature documentation.
lsp-sql-execute-query	      M-x ... RET
Execute COMMAND on selected region/whole buffer against current
   database.
lsp-sql-show-connections      M-x ... RET
   Show connections.
lsp-sql-show-databases	      M-x ... RET
   Show databases.
lsp-sql-show-schemas	      M-x ... RET
   Show schemas.
lsp-sql-switch-connection     M-x ... RET
   Switch connection.
lsp-sql-switch-database	      M-x ... RET
   Switch database.
lsp-switch-to-io-log-buffer   M-x ... RET
   Display the log buffer of WORKSPACE.
lsp-toggle-on-type-formatting s-l T f
   Toggle on type formatting.
lsp-toggle-signature-auto-activate s-l T s
   Toggle signature auto activate.
lsp-toggle-symbol-highlight   s-l T h
   Toggle symbol highlighting.
lsp-toggle-trace-io	      s-l T L
   Toggle client-server protocol logging.

lsp-treemacs-call-hierarchy   s-l g h
   Show the incoming call hierarchy for the symbol at point.
lsp-treemacs-cycle-severity   M-x ... RET
   Cycle through the severity levels shown in the errors list
lsp-treemacs-deps-list-mode   M-x ... RET
   (not documented)
lsp-treemacs-error-list-mode  M-x ... RET
   (not documented)
lsp-treemacs-errors-list      s-l g e, C-c C-v C-r
   Display error list.
lsp-treemacs-generic-mode     M-x ... RET
   Treemacs generic mode.
lsp-treemacs-generic-right-click M-x ... RET
   (not documented)
lsp-treemacs-goto-symbol      M-x ... RET
   Goto the symbol at point.
lsp-treemacs-implementations  C-c C-j
   Show the implementations for the symbol at point.
lsp-treemacs-java-deps-follow C-c C-v C-f
   (not documented)
lsp-treemacs-java-deps-list   C-c C-v C-l
   Display error list.
lsp-treemacs-java-deps-refresh M-x ... RET
   Refresh dependecy list.
lsp-treemacs-open-error	      M-x ... RET
   Open error.
lsp-treemacs-open-file	      M-x ... RET
   Open file.
lsp-treemacs-perform-ret-action	M-x ... RET
   (not documented)
lsp-treemacs-quick-fix	      M-x ... RET
   Select the element under cursor.
lsp-treemacs-references	      C-c C-v RET
   Show the references for the symbol at point.
lsp-treemacs-symbols	      M-x ... RET
   Show symbols view.
lsp-treemacs-sync-mode	      s-l T T
   Global minor mode for synchronizing lsp-mode workspace folders and
   treemacs projects.
lsp-treemacs-type-hierarchy   M-x ... RET
   Show the type hierarchy for the symbol at point.
lsp-ui-doc--handle-mouse-movement M-x ... RET
   Show the documentation corresponding to the text under EVENT.
lsp-ui-doc--open-markdown-link M-x ... RET
   (not documented)
lsp-ui-doc-focus-frame	      M-x ... RET
   Focus into lsp-ui-doc-frame.
lsp-ui-doc-frame-mode	      M-x ... RET
   Marker mode to add additional key bind for lsp-ui-doc-frame.
lsp-ui-doc-glance	      s-l h g
   Trigger display hover information popup and hide it on next typing.
lsp-ui-doc-hide		      M-x ... RET
   Hide hover information popup.
lsp-ui-doc-mode		      s-l T d
   Minor mode for showing hover information in child frame.
lsp-ui-doc-show		      M-x ... RET
   Trigger display hover information popup.
lsp-ui-doc-unfocus-frame      M-x ... RET
   Unfocus from lsp-ui-doc-frame.
lsp-ui-find-next-reference    C-c C-v n
   Find next reference of the symbol at point.
lsp-ui-find-prev-reference    C-c C-v p
   Find previous reference of the symbol at point.
lsp-ui-find-workspace-symbol  C-c C-d C-S-f
   List project-wide symbols matching the query string PATTERN.
lsp-ui-flycheck-list	      C-c C-v r
   List all the diagnostics in the whole workspace.
lsp-ui-flycheck-list--quit    M-x ... RET
   (not documented)
lsp-ui-flycheck-list--view    M-x ... RET
   (not documented)
lsp-ui-flycheck-list--visit   M-x ... RET
   (not documented)
lsp-ui-flycheck-list-mode     M-x ... RET
   Mode showing flycheck diagnostics for the whole workspace.
lsp-ui-imenu		      C-c C-d C-j
   Open ui-imenu in side window.
lsp-ui-imenu--kill	      M-x ... RET
   Kill imenu window.
lsp-ui-imenu--next-kind	      M-x ... RET
   Jump to next kind of imenu.
lsp-ui-imenu--prev-kind	      M-x ... RET
   Jump to previous kind of imenu.
lsp-ui-imenu--refresh	      M-x ... RET
   Safe refresh imenu content.
lsp-ui-imenu--view	      M-x ... RET
   (not documented)
lsp-ui-imenu--visit	      M-x ... RET
   (not documented)
lsp-ui-imenu-buffer-mode      M-x ... RET
   Minor mode 'lsp-ui-imenu-buffer-mode'.
lsp-ui-imenu-mode	      M-x ... RET
   Mode showing imenu entries.
lsp-ui-mode		      M-x ... RET
   Toggle language server UI mode on or off.
lsp-ui-peek--abort	      M-x ... RET
   Abort peek.
lsp-ui-peek--goto-xref	      M-x ... RET
   Go to a reference/definition.
lsp-ui-peek--goto-xref-other-window M-x ... RET
   (not documented)
   lsp-ui-peek--select-next      M-x ... RET
   (not documented)
   lsp-ui-peek--select-next-file M-x ... RET
   (not documented)
   lsp-ui-peek--select-prev      M-x ... RET
   (not documented)
   lsp-ui-peek--select-prev-file M-x ... RET
   (not documented)
lsp-ui-peek--toggle-file      M-x ... RET
   (not documented)
lsp-ui-peek-enable	      M-x ... RET
   (not documented)
lsp-ui-peek-find-definitions  <menu-bar> <edit> <goto> <xref-find-def>, M-., s-l G g, C-c j
   Find definitions to the IDENTIFIER at point.
lsp-ui-peek-find-implementation	s-l G i
   Find implementation locations of the symbol at point.
lsp-ui-peek-find-references   M-?, s-l G r
   Find references to the IDENTIFIER at point.
lsp-ui-peek-find-workspace-symbol s-l G s
   Find symbols in the worskpace.
lsp-ui-peek-mode	      M-x ... RET
   Mode for lsp-ui-peek.
lsp-ui-sideline-apply-code-actions M-x ... RET
   Choose and apply code action(s) on the current line.
lsp-ui-sideline-mode	      s-l T S
   Minor mode for showing information for current line.
lsp-ui-sideline-toggle-symbols-info M-x ... RET
   Toggle display of symbols information.
lsp-version		      M-x ... RET
   Return string describing current version of `lsp-mode'.
lsp-virtual-buffer-disconnect M-x ... RET
   (not documented)
lsp-workspace-blacklist-remove s-l F b
   Remove PROJECT-ROOT from the workspace blacklist.
lsp-workspace-folders-add     s-l F a
   Add PROJECT-ROOT to the list of workspace folders.
lsp-workspace-folders-open    M-x ... RET
   Open the directory located at PROJECT-ROOT
lsp-workspace-folders-remove  s-l F r
   Remove PROJECT-ROOT from the list of workspace folders.
lsp-workspace-folders-switch  M-x ... RET
   Open the directory located at PROJECT-ROOT
lsp-workspace-restart	      s-l s r
   Restart the workspace WORKSPACE and the language server associated
   with it
lsp-workspace-show-log	      M-x ... RET
   Display the log buffer of WORKSPACE.
lsp-workspace-shutdown	      s-l s q
   Shut the workspace WORKSPACE and the language server associated
   with it
lsp-yaml-download-schema-store-db M-x ... RET
   Download the remote schema store at `lsp-yaml-schema-store-uri'
   into local cache.
   lsp-yaml-select-buffer-schema M-x ... RET
   Select schema for the current buffer based on the list of supported
   schemas.
lsp-yaml-set-buffer-schema    M-x ... RET
   Set yaml schema for the current buffer to URI-STRING.
my-cleaner-lsp-temp	      M-x ... RET
   clean lsp java temp folders and files emacs.d/workspace/ and
   .emacs.d/.lsp-session-v1 
my-lsp-FDQN		      M-x ... RET
   (not documented)
my-lsp-FDQN-dot		      M-x ... RET
   (not documented)
my-lsp-FDQN-slash	      M-x ... RET
   (not documented)
my-lsp-find-in-project-as-grep C-c C-d C-f
   search inside all files in project like this 
my-lsp-generate-javadoc-html  M-x ... RET
   generate javadoc html for package in /home/myLSP/myPath/myDoc/
my-lsp-java-checkstyle	      M-x ... RET
   (not documented)
my-lsp-new-class	      C-c C-d C-n
   (not documented)
my-lsp-show-ClassPath-for-currentProject M-x ... RET
   retrun classpath for project name as two arrays, .classpath and
   pom.xml and CLASSPATH_ARGS from M-x getenv
my-lsp-show-ClassPath-for-project M-x ... RET
   retrun classpath for project name as two arrays, .classpath and
   pom.xml and CLASSPATH_ARGS from M-x getenv
my-lsp-try-catch	      C-1 T
   Insert a try catch around a region.
my-toggle-lsp-ui-doc-show-and-hide C-c C-v w
    toggle lsp-ui-doc show and hide
treemacs-collapse-lsp-error   M-x ... RET
   Collapse treemacs nodes of type `lsp-error'.
treemacs-collapse-lsp-error-list M-x ... RET
   Collapse treemacs nodes of type `lsp-error-list'.
treemacs-collapse-lsp-files   M-x ... RET
   Collapse treemacs nodes of type `lsp-files'.
treemacs-collapse-lsp-projects M-x ... RET
   Collapse treemacs nodes of type `lsp-projects'.
treemacs-collapse-lsp-symbol  M-x ... RET
   Collapse treemacs nodes of type `lsp-symbol'.
treemacs-collapse-lsp-treemacs-deps M-x ... RET
   Collapse treemacs nodes of type `lsp-treemacs-deps'.
treemacs-collapse-lsp-treemacs-deps-list M-x ... RET
   Collapse treemacs nodes of type `lsp-treemacs-deps-list'.
treemacs-expand-lsp-error     M-x ... RET
   Expand treemacs nodes of type `lsp-error'.
treemacs-expand-lsp-error-list M-x ... RET
   Expand treemacs nodes of type `lsp-error-list'.
treemacs-expand-lsp-files     M-x ... RET
   Expand treemacs nodes of type `lsp-files'.
treemacs-expand-lsp-projects  M-x ... RET
   Expand treemacs nodes of type `lsp-projects'.
treemacs-expand-lsp-symbol    M-x ... RET
   Expand treemacs nodes of type `lsp-symbol'.
treemacs-expand-lsp-treemacs-deps M-x ... RET
   Expand treemacs nodes of type `lsp-treemacs-deps'.
treemacs-expand-lsp-treemacs-deps-list M-x ... RET
   Expand treemacs nodes of type `lsp-treemacs-deps-list'.
----------------------------------------------------------

Click on a completion to select it.
In this buffer, type RET to select the completion near point.

Possible completions are:
:lsp-items 	:lsp-modeline-code-actions
:lsp-ui-code-actions 	:lsp-ui-doc-hover
cl-struct-lsp--client-tags 	cl-struct-lsp--folding-range-tags
cl-struct-lsp--log-entry-tags
cl-struct-lsp--registered-capability-tags
cl-struct-lsp--workspace-tags 	cl-struct-lsp-session-tags
cl-struct-lsp-watch-tags 	lsp--already-widened
lsp--before-change-vals 	lsp--buffer-deferred
lsp--buffer-workspaces 	lsp--cached-folding-ranges
lsp--cached-nested-folding-ranges 	lsp--cancelable-requests
lsp--client-packages-required 	lsp--cur-version
lsp--cur-workspace 	lsp--default-action-handlers
lsp--default-notification-handlers 	lsp--delay-timer
lsp--delayed-requests 	lsp--dependencies
lsp--describe-buffer 	lsp--display-inline-image-alist
lsp--document-selection-range-cache 	lsp--document-symbols
lsp--document-symbols-request-async 	lsp--document-symbols-tick
lsp--eldoc-saved-message 	lsp--empty-ht
lsp--errors 	lsp--file-change-type
lsp--flushing-delayed-changes 	lsp--formatting-indent-alist
lsp--have-document-highlights 	lsp--highlight-kind-face
lsp--hover-saved-bounds 	lsp--imenu-compare-function-alist
lsp--last-active-workspaces 	lsp--line-col-to-point-hash-table
lsp--log-io-ewoc 	lsp--message-type-face
lsp--on-change-timer 	lsp--on-idle-timer
lsp--peek-save-major-mode 	lsp--request-cleanup-hooks
lsp--session 	lsp--show-message
lsp--signature-last 	lsp--signature-last-buffer
lsp--signature-last-index 	lsp--stderr-index
lsp--symbol-bounds-of-last-highlight-invocation
lsp--symbol-kind 	lsp--symbols-cache
lsp--sync-full 	lsp--sync-incremental
lsp--sync-none 	lsp--tcp-port
lsp--tcp-server-port 	lsp--tcp-server-wait-seconds
lsp--throw-on-input 	lsp--uri-file-prefix
lsp--url-path-allowed-chars 	lsp--virtual-buffer
lsp--virtual-buffer-connections 	lsp--virtual-buffer-mappings
lsp--virtual-buffer-point-max 	lsp--watch-kind
lsp-actionscript-extension-name 	lsp-actionscript-java-path
lsp-actionscript-option-charset 	lsp-actionscript-sdk-path
lsp-actionscript-server-download-url 	lsp-actionscript-server-store-path
lsp-actionscript-version 	lsp-ada-enable-diagnostics
lsp-ada-option-charset 	lsp-ada-project-file
lsp-after-apply-edits-hook 	lsp-after-diagnostics-hook
lsp-after-initialize-hook 	lsp-after-open-hook
lsp-after-uninitialized-functions 	lsp-auto-configure
lsp-auto-execute-action 	lsp-auto-guess-root
lsp-auto-select-workspace 	lsp-bash-explainshell-endpoint
lsp-bash-glob-pattern 	lsp-bash-highlight-parsing-errors
lsp-before-apply-edits-hook 	lsp-before-initialize-hook
lsp-before-open-hook 	lsp-before-save-edits
lsp-browser-mode-abbrev-table 	lsp-browser-mode-hook
lsp-browser-mode-map 	lsp-browser-mode-syntax-table
lsp-buffer-uri 	lsp-client-packages
lsp-client-settings 	lsp-clients
lsp-clients--clangd-default-executable 	lsp-clients--haxe-executable
lsp-clients--haxe-server-path 	lsp-clients--haxe-settings
lsp-clients-angular-language-server-command
lsp-clients-clangd-args 	lsp-clients-clangd-executable
lsp-clients-crystal-executable 	lsp-clients-digestif-executable
lsp-clients-elixir-server-executable 	lsp-clients-emmy-lua-args
lsp-clients-emmy-lua-command 	lsp-clients-emmy-lua-jar-path
lsp-clients-emmy-lua-java-path 	lsp-clients-flow-server
lsp-clients-flow-server-args 	lsp-clients-fortls-args
lsp-clients-fortls-executable 	lsp-clients-go-library-directories
lsp-clients-go-library-directories-include-go-modules
lsp-clients-hack-command 	lsp-clients-kotlin-server-executable
lsp-clients-lua-language-server-args 	lsp-clients-lua-language-server-bin
lsp-clients-lua-language-server-command
lsp-clients-lua-language-server-install-dir
lsp-clients-lua-language-server-main-location
lsp-clients-lua-lsp-server-install-dir 	lsp-clients-luarocks-bin-dir
lsp-clients-php-iph-server-command 	lsp-clients-php-server-command
lsp-clients-python-command 	lsp-clients-python-library-directories
lsp-clients-r-server-command 	lsp-clients-texlab-executable
lsp-clients-typescript-javascript-server-args
lsp-clients-typescript-log-verbosity 	lsp-clients-typescript-plugins
lsp-clients-typescript-server-args 	lsp-clients-vala-ls-executable
lsp-clients-verilog-executable 	lsp-clients-vim-executable
lsp-clients-vim-initialization-options 	lsp-clojure-custom-server-command
lsp-clojure-server-command 	lsp-clojure-server-download-url
lsp-clojure-server-store-path 	lsp-command-map
lsp-completion--cache 	lsp-completion--item-kind
lsp-completion--kind->symbol 	lsp-completion--last-result
lsp-completion--no-reordering 	lsp-completion-enable
lsp-completion-enable-additional-text-edit
lsp-completion-filter-on-incomplete 	lsp-completion-mode
lsp-completion-mode-hook 	lsp-completion-no-cache
lsp-completion-provider 	lsp-completion-show-detail
lsp-completion-show-kind 	lsp-completion-sort-initial-results
lsp-completion-use-last-result 	lsp-configure-hook
lsp-csharp-server-install-dir 	lsp-csharp-server-path
lsp-css-completion-trigger-property-value-completion
lsp-css-experimental-custom-data 	lsp-css-lint-arguments-in-color-function
lsp-css-lint-box-model 	lsp-css-lint-compatible-vendor-prefixes
lsp-css-lint-duplicate-properties 	lsp-css-lint-empty-rules
lsp-css-lint-float 	lsp-css-lint-font-face-properties
lsp-css-lint-hex-color-length 	lsp-css-lint-id-selector
lsp-css-lint-ie-hack 	lsp-css-lint-import-statement
lsp-css-lint-important
lsp-css-lint-property-ignored-due-to-display
lsp-css-lint-universal-selector 	lsp-css-lint-unknown-at-rules
lsp-css-lint-unknown-properties
lsp-css-lint-unknown-vendor-specific-properties
lsp-css-lint-valid-properties 	lsp-css-lint-vendor-prefix
lsp-css-lint-zero-units 	lsp-css-trace-server
lsp-css-validate 	lsp-custom-markup-modes
lsp-debounce-full-sync-notifications
lsp-debounce-full-sync-notifications-interval
lsp-deps-providers 	lsp-diagnostic-clean-after-change
lsp-diagnostic-package 	lsp-diagnostic-stats
lsp-diagnostics--flycheck-checker 	lsp-diagnostics--flycheck-enabled
lsp-diagnostics--flymake-report-fn 	lsp-diagnostics-attributes
lsp-diagnostics-disabled-modes 	lsp-diagnostics-flycheck-default-level
lsp-diagnostics-mode 	lsp-diagnostics-mode-hook
lsp-diagnostics-modeline-scope 	lsp-diagnostics-provider
lsp-diagnostics-updated-hook 	lsp-disabled-clients
lsp-display-inline-image 	lsp-dockerfile-language-server-command
lsp-document-sync-method 	lsp-eldoc-enable-hover
lsp-eldoc-hook 	lsp-eldoc-render-all
lsp-elixir-dialyzer-enabled 	lsp-elixir-dialyzer-format
lsp-elixir-dialyzer-warn-opts 	lsp-elixir-enable-test-lenses
lsp-elixir-fetch-deps 	lsp-elixir-mix-env
lsp-elixir-mix-target 	lsp-elixir-project-dir
lsp-elixir-signature-after-complete 	lsp-elixir-suggest-specs
lsp-elm-elm-analyse-trigger 	lsp-elm-elm-format-path
lsp-elm-elm-language-server-path 	lsp-elm-elm-path
lsp-elm-elm-test-path 	lsp-elm-server-args
lsp-elm-trace-server 	lsp-enable-completion-at-point
lsp-enable-dap-auto-configure 	lsp-enable-file-watchers
lsp-enable-folding 	lsp-enable-imenu
lsp-enable-indentation 	lsp-enable-links
lsp-enable-on-type-formatting 	lsp-enable-relative-indentation
lsp-enable-semantic-highlighting 	lsp-enable-snippet
lsp-enable-symbol-highlighting 	lsp-enable-text-document-color
lsp-enable-xref 	lsp-enabled-clients
lsp-erlang-server-connection-type 	lsp-erlang-server-path
lsp-eslint-auto-fix-on-save
lsp-eslint-code-action-disable-rule-comment
lsp-eslint-code-action-show-documentation
lsp-eslint-enable 	lsp-eslint-experimental-incremental-sync
lsp-eslint-fix-all-problem-type 	lsp-eslint-format
lsp-eslint-lint-task-enable 	lsp-eslint-lint-task-options
lsp-eslint-node 	lsp-eslint-node-path
lsp-eslint-options 	lsp-eslint-package-manager
lsp-eslint-provide-lint-task 	lsp-eslint-quiet
lsp-eslint-run 	lsp-eslint-runtime
lsp-eslint-server-command 	lsp-eslint-trace-server
lsp-eslint-unzipped-path 	lsp-eslint-validate
lsp-eslint-working-directories 	lsp-eslint/status-error
lsp-eslint/status-ok 	lsp-eslint/status-warn
lsp-ext-gunzip-script 	lsp-ext-pwsh-script
lsp-ext-unzip-script 	lsp-file-truename-cache
lsp-file-watch-ignored 	lsp-file-watch-ignored-directories
lsp-file-watch-ignored-files 	lsp-file-watch-threshold
lsp-flycheck-default-level 	lsp-folding-line-folding-only
lsp-folding-range-limit 	lsp-fsharp--default-init-options
lsp-fsharp-auto-workspace-init 	lsp-fsharp-enable-reference-code-lens
lsp-fsharp-external-autocomplete 	lsp-fsharp-interface-stub-generation
lsp-fsharp-interface-stub-generation-method-body
lsp-fsharp-interface-stub-generation-object-identifier
lsp-fsharp-keywords-autocomplete 	lsp-fsharp-linter
lsp-fsharp-record-stub-generation 	lsp-fsharp-record-stub-generation-body
lsp-fsharp-resolve-namespaces 	lsp-fsharp-server-args
lsp-fsharp-server-install-dir 	lsp-fsharp-server-runtime
lsp-fsharp-simplify-name-analyzer 	lsp-fsharp-union-case-stub-generation
lsp-fsharp-union-case-stub-generation-body
lsp-fsharp-unused-declarations-analyzer 	lsp-fsharp-unused-opens-analyzer
lsp-gdscript-port 	lsp-glob-split
lsp-globstar 	lsp-globstar-regexp
lsp-go-available-codelens 	lsp-go-available-codelenses
lsp-go-build-flags 	lsp-go-codelens
lsp-go-codelenses 	lsp-go-env
lsp-go-gopls-server-args 	lsp-go-gopls-server-path
lsp-go-hover-kind 	lsp-go-library-directories
lsp-go-library-directories-include-go-modules
lsp-go-link-target 	lsp-go-use-placeholders
lsp-gopls-available-codelens 	lsp-gopls-build-flags
lsp-gopls-codelens 	lsp-gopls-env
lsp-gopls-hover-kind 	lsp-gopls-server-args
lsp-gopls-server-path 	lsp-gopls-use-placeholders
lsp-groovy-classpath 	lsp-groovy-server-file
lsp-gunzip-script 	lsp-haxe-build-completion-cache
lsp-haxe-code-generation 	lsp-haxe-configurations
lsp-haxe-diagnostics-path-filter 	lsp-haxe-display-configurations
lsp-haxe-display-port 	lsp-haxe-display-server
lsp-haxe-enable-code-lens 	lsp-haxe-enable-compilation-server
lsp-haxe-enable-completion-cache-warning
lsp-haxe-enable-diagnostics 	lsp-haxe-enable-methods-view
lsp-haxe-enable-server-view
lsp-haxe-enable-signature-help-documentation
lsp-haxe-exclude 	lsp-haxe-executable
lsp-haxe-hxml 	lsp-haxe-postfix-completion
lsp-haxe-task-presentation
lsp-headerline--path-up-to-project-segments
lsp-headerline--string 	lsp-headerline-arrow
lsp-headerline-breadcrumb-enable
lsp-headerline-breadcrumb-enable-diagnostics
lsp-headerline-breadcrumb-enable-symbol-numbers
lsp-headerline-breadcrumb-icons-enable 	lsp-headerline-breadcrumb-mode
lsp-headerline-breadcrumb-mode-hook 	lsp-headerline-breadcrumb-segments
lsp-html-auto-closing-tags 	lsp-html-experimental-custom-data
lsp-html-format-content-unformatted 	lsp-html-format-enable
lsp-html-format-end-with-newline 	lsp-html-format-extra-liners
lsp-html-format-indent-handlebars 	lsp-html-format-indent-inner-html
lsp-html-format-max-preserve-new-lines 	lsp-html-format-preserve-new-lines
lsp-html-format-unformatted 	lsp-html-format-wrap-attributes
lsp-html-format-wrap-line-length 	lsp-html-server-command-args
lsp-html-suggest-html5 	lsp-html-trace-server
lsp-html-validate-scripts 	lsp-html-validate-styles
lsp-http-proxy 	lsp-http-proxyStrictSSL
lsp-idle-delay 	lsp-imenu-container-name-separator
lsp-imenu-detailed-outline 	lsp-imenu-index-symbol-kinds
lsp-imenu-show-container-name 	lsp-imenu-sort-methods
lsp-inhibit-lsp-hooks 	lsp-intelephense-clear-cache
lsp-intelephense-completion-fully-qualify-global-constants-and-functions
lsp-intelephense-completion-insert-use-declaration
lsp-intelephense-completion-max-items
lsp-intelephense-completion-trigger-parameter-hints
lsp-intelephense-files-associations 	lsp-intelephense-files-exclude
lsp-intelephense-files-max-size 	lsp-intelephense-format-enable
lsp-intelephense-licence-key 	lsp-intelephense-multi-root
lsp-intelephense-rename-exclude 	lsp-intelephense-server-command
lsp-intelephense-storage-path 	lsp-intelephense-stubs
lsp-intelephense-telemetry-enabled 	lsp-intelephense-trace-server
lsp-io-messages-max 	lsp-java--download-root
lsp-java--helm-result 	lsp-java-9-args
lsp-java-autobuild-enabled 	lsp-java-boot--callback
lsp-java-boot-enabled 	lsp-java-boot-java-tools-jar
lsp-java-boot-lens-mode 	lsp-java-boot-lens-mode-hook
lsp-java-buffer-configurations 	lsp-java-bundles
lsp-java-code-generation-generate-comments
lsp-java-code-generation-hash-code-equals-use-instanceof
lsp-java-code-generation-hash-code-equals-use-java7objects
lsp-java-code-generation-to-string-code-style
lsp-java-code-generation-to-string-limit-elements
lsp-java-code-generation-to-string-list-array-contents
lsp-java-code-generation-to-string-skip-null-values
lsp-java-code-generation-to-string-template
lsp-java-code-generation-use-blocks 	lsp-java-completion-enabled
lsp-java-completion-favorite-static-members
lsp-java-completion-filtered-types
lsp-java-completion-guess-method-arguments
lsp-java-completion-import-order 	lsp-java-completion-max-results
lsp-java-completion-overwrite
lsp-java-configuration-check-project-settings-exclusions
lsp-java-configuration-maven-user-settings
lsp-java-configuration-runtimes
lsp-java-configuration-update-build-configuration
lsp-java-content-provider-preferred
lsp-java-dependency-package-representation
lsp-java-errors-incomplete-classpath-severity
lsp-java-folding-range-enabled 	lsp-java-format-comments-enabled
lsp-java-format-enabled 	lsp-java-format-on-type-enabled
lsp-java-format-settings-profile 	lsp-java-format-settings-url
lsp-java-implementations-code-lens-enabled
lsp-java-import-exclusions 	lsp-java-import-gradle-arguments
lsp-java-import-gradle-enabled 	lsp-java-import-gradle-home
lsp-java-import-gradle-java-home 	lsp-java-import-gradle-jvm-arguments
lsp-java-import-gradle-offline-enabled 	lsp-java-import-gradle-user-home
lsp-java-import-gradle-version 	lsp-java-import-gradle-wrapper-enabled
lsp-java-import-maven-enabled
lsp-java-imports-gradle-wrapper-checksums
lsp-java-inhibit-message 	lsp-java-java-path
lsp-java-jdt-download-url 	lsp-java-lens-mode
lsp-java-lens-mode-hook 	lsp-java-maven-download-sources
lsp-java-maven-update-snapshots 	lsp-java-max-concurrent-builds
lsp-java-pop-buffer-function 	lsp-java-progress-reports-enabled
lsp-java-progress-string 	lsp-java-project-import-hint
lsp-java-project-import-on-first-time-startup
lsp-java-project-referenced-libraries 	lsp-java-project-resource-filters
lsp-java-references-code-lens-enabled 	lsp-java-save-action-organize-imports
lsp-java-save-actions-organize-imports 	lsp-java-selection-enabled
lsp-java-selection-range-enabled 	lsp-java-server-install-dir
lsp-java-server-launch-mode
lsp-java-show-build-status-on-start-enabled
lsp-java-signature-help-enabled
lsp-java-sources-organize-imports-star-threshold
lsp-java-sources-organize-imports-static-star-threshold
lsp-java-theme 	lsp-java-themes-directory
lsp-java-trace-server 	lsp-java-vmargs
lsp-java-workspace-cache-dir 	lsp-java-workspace-dir

lsp-javascript-auto-closing-tags 	lsp-javascript-format-enable
lsp-javascript-format-insert-space-after-comma-delimiter
lsp-javascript-format-insert-space-after-constructor
lsp-javascript-format-insert-space-after-function-keyword-for-anonymous-functions
lsp-javascript-format-insert-space-after-keywords-in-control-flow-statements
lsp-javascript-format-insert-space-after-opening-and-before-closing-jsx-expression-braces
lsp-javascript-format-insert-space-after-opening-and-before-closing-nonempty-braces
lsp-javascript-format-insert-space-after-opening-and-before-closing-nonempty-brackets
lsp-javascript-format-insert-space-after-opening-and-before-closing-nonempty-parenthesis
lsp-javascript-format-insert-space-after-opening-and-before-closing-template-string-braces
lsp-javascript-format-insert-space-after-semicolon-in-for-statements
lsp-javascript-format-insert-space-before-and-after-binary-operators
lsp-javascript-format-insert-space-before-function-parenthesis
lsp-javascript-format-place-open-brace-on-new-line-for-control-blocks
lsp-javascript-format-place-open-brace-on-new-line-for-functions
lsp-javascript-implicit-project-config-check-js
lsp-javascript-implicit-project-config-experimental-decorators
lsp-javascript-preferences-import-module-specifier
lsp-javascript-preferences-quote-style
lsp-javascript-preferences-rename-shorthand-properties
lsp-javascript-references-code-lens-enabled
lsp-javascript-suggest-auto-imports
lsp-javascript-suggest-complete-function-calls
lsp-javascript-suggest-complete-js-docs 	lsp-javascript-suggest-enabled
lsp-javascript-suggest-names 	lsp-javascript-suggest-paths
lsp-javascript-suggestion-actions-enabled
lsp-javascript-update-imports-on-file-move-enabled
lsp-javascript-validate-enable 	lsp-json--extra-init-params
lsp-json--major-modes 	lsp-json--schema-associations
lsp-json-schemas 	lsp-keep-workspace-alive
lsp-keymap-prefix 	lsp-kotlin-compiler-jvm-target
lsp-kotlin-completion-snippets-enabled 	lsp-kotlin-debug-adapter-enabled
lsp-kotlin-debug-adapter-path
lsp-kotlin-external-sources-auto-convert-to-kotlin
lsp-kotlin-external-sources-use-kls-scheme
lsp-kotlin-language-server-path 	lsp-kotlin-linting-debounce-time
lsp-kotlin-trace-server 	lsp-language-id-configuration
lsp-last-id 	lsp-lens--backend-cache
lsp-lens--data 	lsp-lens--last-count
lsp-lens--modified? 	lsp-lens--overlays
lsp-lens--page 	lsp-lens--refresh-timer
lsp-lens-auto-enable 	lsp-lens-backends
lsp-lens-debounce-interval 	lsp-lens-enable
lsp-lens-mode 	lsp-lens-mode-hook
lsp-log-io 	lsp-log-io-mode-abbrev-table
lsp-log-io-mode-hook 	lsp-log-io-mode-map
lsp-log-io-mode-syntax-table 	lsp-log-max
lsp-lua-color-mode 	lsp-lua-completion-call-snippet
lsp-lua-completion-display-context 	lsp-lua-completion-enable
lsp-lua-completion-keyword-snippet 	lsp-lua-develop-debugger-port
lsp-lua-develop-debugger-wait 	lsp-lua-develop-enable
lsp-lua-diagnostics-disable 	lsp-lua-diagnostics-enable
lsp-lua-diagnostics-globals 	lsp-lua-diagnostics-severity
lsp-lua-files-associations 	lsp-lua-files-exclude
lsp-lua-hover-enable 	lsp-lua-hover-view-number
lsp-lua-hover-view-string 	lsp-lua-hover-view-string-max
lsp-lua-runtime-path 	lsp-lua-runtime-version
lsp-lua-signature-help-enable 	lsp-lua-workspace-ignore-dir
lsp-lua-workspace-ignore-submodules 	lsp-lua-workspace-library
lsp-lua-workspace-max-preload 	lsp-lua-workspace-preload-file-size
lsp-lua-workspace-use-git-ignore 	lsp-lua-zzzzzz-cat
lsp-managed-mode 	lsp-managed-mode-hook
lsp-merlin-command 	lsp-method-requirements
lsp-mode 	lsp-mode-hook
lsp-mode-map 	lsp-mode-menu
lsp-modeline--code-actions-string 	lsp-modeline--diagnostics-string
lsp-modeline--diagnostics-wks->strings 	lsp-modeline-code-action-fallback-icon
lsp-modeline-code-actions-enable 	lsp-modeline-code-actions-kind-regex
lsp-modeline-code-actions-mode 	lsp-modeline-code-actions-mode-hook
lsp-modeline-code-actions-segments 	lsp-modeline-diagnostics-enable
lsp-modeline-diagnostics-mode 	lsp-modeline-diagnostics-mode-hook
lsp-modeline-diagnostics-scope 	lsp-modeline-workspace-status-enable
lsp-modeline-workspace-status-mode 	lsp-modeline-workspace-status-mode-hook
lsp-nix-server-path 	lsp-non-path-regexp
lsp-ocaml-lang-server-command 	lsp-ocaml-lsp-server-command
lsp-ocaml-ocaml-lang-server-command 	lsp-on-change-hook
lsp-on-idle-hook 	lsp-overlay-document-color-char
lsp-parsed-message 	lsp-path-regexp
lsp-perl-file-filter 	lsp-perl-ignore-dirs
lsp-perl-language-server-client-version 	lsp-perl-language-server-path
lsp-perl-language-server-port 	lsp-perl-perl-cmd
lsp-perl-perl-inc 	lsp-phpactor-extension-alist
lsp-phpactor-path 	lsp-prefer-capf
lsp-prefer-flymake 	lsp-print-io
lsp-print-performance 	lsp-progress-via-spinner
lsp-purescript-server-args 	lsp-purescript-server-executable
lsp-pwsh--major-modes 	lsp-pwsh--sess-id
lsp-pwsh-code-folding-enable 	lsp-pwsh-code-folding-show-last-line
lsp-pwsh-code-formatting-align-property-value-pairs
lsp-pwsh-code-formatting-ignore-one-line-block
lsp-pwsh-code-formatting-new-line-after-close-brace
lsp-pwsh-code-formatting-new-line-after-open-brace
lsp-pwsh-code-formatting-open-brace-on-same-line
lsp-pwsh-code-formatting-pipeline-indentation-style
lsp-pwsh-code-formatting-preset
lsp-pwsh-code-formatting-use-correct-casing
lsp-pwsh-code-formatting-whitespace-after-separator
lsp-pwsh-code-formatting-whitespace-around-operator
lsp-pwsh-code-formatting-whitespace-around-pipe
lsp-pwsh-code-formatting-whitespace-before-open-brace
lsp-pwsh-code-formatting-whitespace-before-open-paren
lsp-pwsh-code-formatting-whitespace-inside-brace
lsp-pwsh-developer-editor-services-log-level
lsp-pwsh-developer-editor-services-wait-for-debugger
lsp-pwsh-developer-feature-flags 	lsp-pwsh-dir
lsp-pwsh-exe 	lsp-pwsh-ext-path
lsp-pwsh-github-asset-url 	lsp-pwsh-help-completion
lsp-pwsh-log-path 	lsp-pwsh-script-analysis-enable
lsp-pwsh-script-analysis-settings-path 	lsp-pyls-configuration-sources
lsp-pyls-plugins-autopep8-enabled 	lsp-pyls-plugins-flake8-config
lsp-pyls-plugins-flake8-enabled 	lsp-pyls-plugins-flake8-exclude
lsp-pyls-plugins-flake8-filename 	lsp-pyls-plugins-flake8-hang-closing
lsp-pyls-plugins-flake8-ignore 	lsp-pyls-plugins-flake8-max-line-length
lsp-pyls-plugins-flake8-select 	lsp-pyls-plugins-jedi-completion-enabled
lsp-pyls-plugins-jedi-completion-fuzzy
lsp-pyls-plugins-jedi-completion-include-class-objects
lsp-pyls-plugins-jedi-completion-include-params
lsp-pyls-plugins-jedi-definition-enabled
lsp-pyls-plugins-jedi-definition-follow-builtin-imports
lsp-pyls-plugins-jedi-definition-follow-imports
lsp-pyls-plugins-jedi-environment 	lsp-pyls-plugins-jedi-hover-enabled
lsp-pyls-plugins-jedi-references-enabled
lsp-pyls-plugins-jedi-signature-help-enabled
lsp-pyls-plugins-jedi-symbols-all-scopes
lsp-pyls-plugins-jedi-symbols-enabled
lsp-pyls-plugins-jedi-use-pyenv-environment
lsp-pyls-plugins-mccabe-enabled 	lsp-pyls-plugins-mccabe-threshold
lsp-pyls-plugins-preload-enabled 	lsp-pyls-plugins-preload-modules
lsp-pyls-plugins-pycodestyle-enabled 	lsp-pyls-plugins-pycodestyle-exclude
lsp-pyls-plugins-pycodestyle-filename
lsp-pyls-plugins-pycodestyle-hang-closing
lsp-pyls-plugins-pycodestyle-ignore
lsp-pyls-plugins-pycodestyle-max-line-length
lsp-pyls-plugins-pycodestyle-select 	lsp-pyls-plugins-pydocstyle-add-ignore
lsp-pyls-plugins-pydocstyle-add-select 	lsp-pyls-plugins-pydocstyle-convention
lsp-pyls-plugins-pydocstyle-enabled 	lsp-pyls-plugins-pydocstyle-ignore
lsp-pyls-plugins-pydocstyle-match 	lsp-pyls-plugins-pydocstyle-match-dir
lsp-pyls-plugins-pydocstyle-select 	lsp-pyls-plugins-pyflakes-enabled
lsp-pyls-plugins-pylint-args 	lsp-pyls-plugins-pylint-enabled
lsp-pyls-plugins-rope-completion-enabled
lsp-pyls-plugins-yapf-enabled 	lsp-pyls-rename-backend
lsp-pyls-rope-extension-modules 	lsp-pyls-rope-rope-folder
lsp-pyls-server-command 	lsp-rename-history
lsp-rename-use-prepare 	lsp-response-timeout
lsp-restart 	lsp-rf-language-server-dir
lsp-rf-language-server-exclude-paths 	lsp-rf-language-server-include-paths
lsp-rf-language-server-libraries 	lsp-rf-language-server-log-level
lsp-rf-language-server-start-command 	lsp-rf-language-server-trace-server
lsp-rust-action-handlers 	lsp-rust-all-features
lsp-rust-all-targets 	lsp-rust-analyzer--last-runnable
lsp-rust-analyzer-call-info-full 	lsp-rust-analyzer-cargo-all-targets
lsp-rust-analyzer-cargo-load-out-dirs-from-check
lsp-rust-analyzer-cargo-override-command
lsp-rust-analyzer-cargo-watch-args 	lsp-rust-analyzer-cargo-watch-command
lsp-rust-analyzer-cargo-watch-enable
lsp-rust-analyzer-completion-add-call-argument-snippets
lsp-rust-analyzer-completion-add-call-parenthesis
lsp-rust-analyzer-completion-postfix-enable
lsp-rust-analyzer-diagnostics-disabled 	lsp-rust-analyzer-diagnostics-enable
lsp-rust-analyzer-diagnostics-enable-experimental
lsp-rust-analyzer-display-chaining-hints
lsp-rust-analyzer-display-parameter-hints
lsp-rust-analyzer-download-url 	lsp-rust-analyzer-exclude-globs
lsp-rust-analyzer-import-merge-behaviour
lsp-rust-analyzer-import-prefix 	lsp-rust-analyzer-inlay-chain-format
lsp-rust-analyzer-inlay-chain-space-format
lsp-rust-analyzer-inlay-hints-mode 	lsp-rust-analyzer-inlay-hints-mode-hook
lsp-rust-analyzer-inlay-hints-timer 	lsp-rust-analyzer-inlay-param-format
lsp-rust-analyzer-inlay-param-space-format
lsp-rust-analyzer-inlay-type-format
lsp-rust-analyzer-inlay-type-space-format
lsp-rust-analyzer-lru-capacity 	lsp-rust-analyzer-macro-expansion-method
lsp-rust-analyzer-max-inlay-hint-length 	lsp-rust-analyzer-proc-macro-enable
lsp-rust-analyzer-rustfmt-extra-args
lsp-rust-analyzer-rustfmt-override-command
lsp-rust-analyzer-server-args 	lsp-rust-analyzer-server-command
lsp-rust-analyzer-server-display-inlay-hints
lsp-rust-analyzer-status-mode-abbrev-table
lsp-rust-analyzer-status-mode-hook 	lsp-rust-analyzer-status-mode-map
lsp-rust-analyzer-status-mode-syntax-table
lsp-rust-analyzer-store-path
lsp-rust-analyzer-syntax-tree-mode-abbrev-table
lsp-rust-analyzer-syntax-tree-mode-hook 	lsp-rust-analyzer-syntax-tree-mode-map
lsp-rust-analyzer-syntax-tree-mode-syntax-table
lsp-rust-analyzer-use-client-watching 	lsp-rust-build-bin
lsp-rust-build-command 	lsp-rust-build-lib
lsp-rust-build-on-save 	lsp-rust-cfg-test
lsp-rust-clear-env-rust-log 	lsp-rust-clippy-preference
lsp-rust-crate-blacklist 	lsp-rust-features
lsp-rust-full-docs 	lsp-rust-jobs
lsp-rust-library-directories 	lsp-rust-no-default-features
lsp-rust-notification-handlers 	lsp-rust-racer-completion
lsp-rust-rls-server-command 	lsp-rust-rustflags
lsp-rust-rustfmt-path 	lsp-rust-server
lsp-rust-show-hover-context 	lsp-rust-show-warnings
lsp-rust-sysroot 	lsp-rust-target
lsp-rust-target-dir 	lsp-rust-unstable-features
lsp-rust-wait-to-build 	lsp-semantic-tokens-enable
lsp-serenata-exclude-path-expressions 	lsp-serenata-file-extensions
lsp-serenata-index-database-uri 	lsp-serenata-php-version
lsp-serenata-server-path 	lsp-serenata-uris
lsp-server-install-dir 	lsp-server-trace
lsp-session-file 	lsp-signature-auto-activate
lsp-signature-doc-lines 	lsp-signature-function
lsp-signature-mode 	lsp-signature-mode-hook
lsp-signature-mode-map 	lsp-signature-render-documentation
lsp-solargraph-autoformat 	lsp-solargraph-completion
lsp-solargraph-definitions 	lsp-solargraph-diagnostics
lsp-solargraph-folding 	lsp-solargraph-formatting
lsp-solargraph-hover 	lsp-solargraph-library-directories
lsp-solargraph-log-level 	lsp-solargraph-multi-root
lsp-solargraph-references 	lsp-solargraph-rename
lsp-solargraph-symbols 	lsp-solargraph-use-bundler
lsp-sorbet-use-bundler 	lsp-sqls-connections
lsp-sqls-server 	lsp-sqls-timeout
lsp-sqls-workspace-config-path 	lsp-steep-log-level
lsp-steep-use-bundler
lsp-svelte-plugin-css-color-presentations-enable
lsp-svelte-plugin-css-completions-emmet 	lsp-svelte-plugin-css-completions-enable
lsp-svelte-plugin-css-diagnostics-enable
lsp-svelte-plugin-css-document-colors-enable
lsp-svelte-plugin-css-document-symbols-enable
lsp-svelte-plugin-css-enable 	lsp-svelte-plugin-css-globals
lsp-svelte-plugin-css-hover-enable
lsp-svelte-plugin-css-selection-range-enable
lsp-svelte-plugin-html-completions-emmet
lsp-svelte-plugin-html-completions-enable
lsp-svelte-plugin-html-document-symbols-enable
lsp-svelte-plugin-html-enable 	lsp-svelte-plugin-html-hover-enable
lsp-svelte-plugin-html-tag-complete-enable
lsp-svelte-plugin-svelte-code-actions-enable
lsp-svelte-plugin-svelte-compiler-warnings
lsp-svelte-plugin-svelte-completions-enable
lsp-svelte-plugin-svelte-diagnostics-enable
lsp-svelte-plugin-svelte-enable 	lsp-svelte-plugin-svelte-format-enable
lsp-svelte-plugin-svelte-hover-enable 	lsp-svelte-plugin-svelte-rename-enable
lsp-svelte-plugin-svelte-selection-range-enable
lsp-svelte-plugin-typescript-code-actions-enable
lsp-svelte-plugin-typescript-completions-enable
lsp-svelte-plugin-typescript-definitions-enable
lsp-svelte-plugin-typescript-diagnostics-enable
lsp-svelte-plugin-typescript-document-symbols-enable
lsp-svelte-plugin-typescript-enable
lsp-svelte-plugin-typescript-find-references-enable
lsp-svelte-plugin-typescript-hover-enable
lsp-svelte-plugin-typescript-rename-enable
lsp-svelte-plugin-typescript-selection-range-enable
lsp-svelte-plugin-typescript-signature-help-enable
lsp-symbol-highlighting-skip-current 	lsp-tcp-connection-timeout
lsp-terraform-enable-logging 	lsp-terraform-server
lsp-tex-server 	lsp-treemacs--empty
lsp-treemacs--generic-cache 	lsp-treemacs--hierarchy-both
lsp-treemacs--hierarchy-sub 	lsp-treemacs--hierarchy-super
lsp-treemacs--right-click-actions 	lsp-treemacs--symbols
lsp-treemacs--symbols-current-buffer 	lsp-treemacs--symbols-last-buffer
lsp-treemacs--symbols-state-locals 	lsp-treemacs--symbols-state-string
lsp-treemacs--symbols-tick 	lsp-treemacs--symbols-timer
lsp-treemacs-deps-buffer-name 	lsp-treemacs-deps-list-mode
lsp-treemacs-deps-list-mode-hook 	lsp-treemacs-deps-list-mode-map
lsp-treemacs-deps-position-params 	lsp-treemacs-detailed-outline
lsp-treemacs-error-list-mode 	lsp-treemacs-error-list-mode-hook
lsp-treemacs-error-list-mode-map 	lsp-treemacs-error-list-severity
lsp-treemacs-errors-buffer-name 	lsp-treemacs-face-map
lsp-treemacs-file-face-map 	lsp-treemacs-generic-map
lsp-treemacs-generic-mode 	lsp-treemacs-generic-mode-hook
lsp-treemacs-symbols-buffer-name 	lsp-treemacs-symbols-position-params
lsp-treemacs-symbols-sort-functions
lsp-treemacs-symbols-space-between-root-nodes
lsp-treemacs-sync-mode 	lsp-treemacs-sync-mode-hook
lsp-treemacs-theme 	lsp-treemacs-tree
lsp-treemacs-use-cache 	lsp-typescript-auto-closing-tags
lsp-typescript-check-npm-is-installed
lsp-typescript-disable-automatic-type-acquisition
lsp-typescript-format-enable
lsp-typescript-format-insert-space-after-comma-delimiter
lsp-typescript-format-insert-space-after-constructor
lsp-typescript-format-insert-space-after-function-keyword-for-anonymous-functions
lsp-typescript-format-insert-space-after-keywords-in-control-flow-statements
lsp-typescript-format-insert-space-after-opening-and-before-closing-jsx-expression-braces
lsp-typescript-format-insert-space-after-opening-and-before-closing-nonempty-braces
lsp-typescript-format-insert-space-after-opening-and-before-closing-nonempty-brackets
lsp-typescript-format-insert-space-after-opening-and-before-closing-nonempty-parenthesis
lsp-typescript-format-insert-space-after-opening-and-before-closing-template-string-braces
lsp-typescript-format-insert-space-after-semicolon-in-for-statements
lsp-typescript-format-insert-space-after-type-assertion
lsp-typescript-format-insert-space-before-and-after-binary-operators
lsp-typescript-format-insert-space-before-function-parenthesis
lsp-typescript-format-place-open-brace-on-new-line-for-control-blocks
lsp-typescript-format-place-open-brace-on-new-line-for-functions
lsp-typescript-implementations-code-lens-enabled
lsp-typescript-locale 	lsp-typescript-npm
lsp-typescript-preferences-import-module-specifier
lsp-typescript-preferences-quote-style
lsp-typescript-preferences-rename-shorthand-properties
lsp-typescript-references-code-lens-enabled
lsp-typescript-report-style-checks-as-warnings
lsp-typescript-suggest-auto-imports
lsp-typescript-suggest-complete-function-calls
lsp-typescript-suggest-complete-js-docs 	lsp-typescript-suggest-enabled
lsp-typescript-suggest-paths
lsp-typescript-suggestion-actions-enabled
lsp-typescript-surveys-enabled 	lsp-typescript-tsc-auto-detect
lsp-typescript-tsdk 	lsp-typescript-tsserver-log
lsp-typescript-tsserver-plugin-paths 	lsp-typescript-tsserver-trace
lsp-typescript-update-imports-on-file-move-enabled
lsp-typescript-validate-enable 	lsp-ui-doc--bounds
lsp-ui-doc--buffer-prefix 	lsp-ui-doc--from-mouse
lsp-ui-doc--from-mouse-current 	lsp-ui-doc--highlight-ov
lsp-ui-doc--ignore-commands 	lsp-ui-doc--inline-ov
lsp-ui-doc--inline-width 	lsp-ui-doc--last-event
lsp-ui-doc--mouse-tracked-by-us 	lsp-ui-doc--parent-vars
lsp-ui-doc--timer 	lsp-ui-doc--timer-mouse-idle
lsp-ui-doc--timer-mouse-movement 	lsp-ui-doc--timer-on-changes
lsp-ui-doc--unfocus-frame-timer 	lsp-ui-doc-alignment
lsp-ui-doc-border 	lsp-ui-doc-delay
lsp-ui-doc-enable 	lsp-ui-doc-frame-hook
lsp-ui-doc-frame-mode 	lsp-ui-doc-frame-mode-hook
lsp-ui-doc-frame-mode-map 	lsp-ui-doc-frame-parameters
lsp-ui-doc-header 	lsp-ui-doc-include-signature
lsp-ui-doc-max-height 	lsp-ui-doc-max-width
lsp-ui-doc-mode 	lsp-ui-doc-mode-hook
lsp-ui-doc-mode-map 	lsp-ui-doc-position
lsp-ui-doc-render-function 	lsp-ui-doc-show-with-cursor
lsp-ui-doc-show-with-mouse 	lsp-ui-doc-use-childframe
lsp-ui-doc-use-webkit 	lsp-ui-doc-webkit-client-path
lsp-ui-doc-winum-ignore 	lsp-ui-flycheck--save-mode
lsp-ui-flycheck-enable 	lsp-ui-flycheck-list--buffer
lsp-ui-flycheck-list-mode-abbrev-table 	lsp-ui-flycheck-list-mode-hook
lsp-ui-flycheck-list-mode-map 	lsp-ui-flycheck-list-mode-syntax-table
lsp-ui-flycheck-list-position 	lsp-ui-imenu--custom-mode-line-format
lsp-ui-imenu--max-bars 	lsp-ui-imenu--origin
lsp-ui-imenu--refresh-timer 	lsp-ui-imenu-auto-refresh
lsp-ui-imenu-auto-refresh-delay 	lsp-ui-imenu-buffer-mode
lsp-ui-imenu-buffer-mode-hook 	lsp-ui-imenu-buffer-name
lsp-ui-imenu-colors 	lsp-ui-imenu-enable
lsp-ui-imenu-kind-position 	lsp-ui-imenu-mode-abbrev-table
lsp-ui-imenu-mode-hook 	lsp-ui-imenu-mode-map
lsp-ui-imenu-mode-syntax-table 	lsp-ui-imenu-ov
lsp-ui-imenu-window-width 	lsp-ui-mode
lsp-ui-mode-hook 	lsp-ui-mode-map
lsp-ui-peek--deactivate-keymap-fn 	lsp-ui-peek--jumps
lsp-ui-peek--last-xref 	lsp-ui-peek--list
lsp-ui-peek--method 	lsp-ui-peek--offset
lsp-ui-peek--overlay 	lsp-ui-peek--selection
lsp-ui-peek--size-list 	lsp-ui-peek--win-start
lsp-ui-peek-always-show 	lsp-ui-peek-enable
lsp-ui-peek-expand-function 	lsp-ui-peek-fontify
lsp-ui-peek-list-width 	lsp-ui-peek-mode
lsp-ui-peek-mode-hook 	lsp-ui-peek-mode-map
lsp-ui-peek-peek-height 	lsp-ui-peek-show-directory
lsp-ui-resources-dir 	lsp-ui-sideline--code-actions
lsp-ui-sideline--last-tick-info 	lsp-ui-sideline--last-width
lsp-ui-sideline--occupied-lines 	lsp-ui-sideline--ovs
lsp-ui-sideline--previous-line 	lsp-ui-sideline--tag
lsp-ui-sideline--timer 	lsp-ui-sideline-actions-icon
lsp-ui-sideline-actions-icon-default 	lsp-ui-sideline-actions-kind-regex
lsp-ui-sideline-code-actions-prefix 	lsp-ui-sideline-delay
lsp-ui-sideline-diagnostic-max-line-length
lsp-ui-sideline-diagnostic-max-lines 	lsp-ui-sideline-enable
lsp-ui-sideline-ignore-duplicate 	lsp-ui-sideline-mode
lsp-ui-sideline-mode-hook 	lsp-ui-sideline-show-code-actions
lsp-ui-sideline-show-diagnostics 	lsp-ui-sideline-show-hover
lsp-ui-sideline-show-symbol 	lsp-ui-sideline-update-mode
lsp-ui-sideline-wait-for-all-symbols 	lsp-unconfigure-hook
lsp-unzip-script 	lsp-use-plists
lsp-vetur-completion-auto-import 	lsp-vetur-completion-tag-casing
lsp-vetur-completion-use-scaffold-snippets
lsp-vetur-dev-log-level 	lsp-vetur-dev-vls-path
lsp-vetur-dev-vls-port 	lsp-vetur-emmet
lsp-vetur-experimental-template-interpolation-service
lsp-vetur-format-default-formatter-css 	lsp-vetur-format-default-formatter-html
lsp-vetur-format-default-formatter-js 	lsp-vetur-format-default-formatter-less
lsp-vetur-format-default-formatter-options
lsp-vetur-format-default-formatter-postcss
lsp-vetur-format-default-formatter-scss
lsp-vetur-format-default-formatter-stylus
lsp-vetur-format-default-formatter-ts 	lsp-vetur-format-enable
lsp-vetur-format-options-tab-size 	lsp-vetur-format-options-use-tabs
lsp-vetur-format-script-initial-indent 	lsp-vetur-format-style-initial-indent
lsp-vetur-global-snippets-dir 	lsp-vetur-grammar-custom-blocks
lsp-vetur-language-features-code-actions
lsp-vetur-server 	lsp-vetur-server-command
lsp-vetur-trace-server 	lsp-vetur-use-workspace-dependencies
lsp-vetur-validation-script 	lsp-vetur-validation-style
lsp-vetur-validation-template 	lsp-vhdl--params
lsp-vhdl-server 	lsp-vhdl-server-path
lsp-vscode-ext-url 	lsp-window-body-width
lsp-workspace-folders-changed-functions 	lsp-workspace-folders-changed-hook
lsp-xml-catalogs 	lsp-xml-completion-auto-close-tags
lsp-xml-file-associations 	lsp-xml-format-enabled
lsp-xml-format-join-cdata-lines 	lsp-xml-format-join-comment-lines
lsp-xml-format-join-content-lines 	lsp-xml-format-preserve-empty-content
lsp-xml-format-quotations
lsp-xml-format-space-before-empty-close-tag
lsp-xml-format-split-attributes 	lsp-xml-jar-download-url
lsp-xml-jar-file 	lsp-xml-jar-name
lsp-xml-jar-version 	lsp-xml-logs-client
lsp-xml-server-command 	lsp-xml-server-vmargs
lsp-xml-server-work-dir 	lsp-xml-trace-server
lsp-xml-validation-enabled 	lsp-xml-validation-no-grammar
lsp-xml-validation-resolve-external-entities
lsp-xml-validation-schema 	lsp-yaml--built-in-kubernetes-schema
lsp-yaml--schema-store-schemas-alist 	lsp-yaml-bracket-spacing
lsp-yaml-completion 	lsp-yaml-custom-tags
lsp-yaml-format-enable 	lsp-yaml-hover
lsp-yaml-print-width 	lsp-yaml-prose-wrap
lsp-yaml-schema-store-enable 	lsp-yaml-schema-store-local-db
lsp-yaml-schema-store-uri 	lsp-yaml-schemas
lsp-yaml-server-command 	lsp-yaml-single-quote
lsp-yaml-validate 	my-lsp-ui-doc-hidden-state
treemacs-icon-lsp-error-closed 	treemacs-icon-lsp-error-list-closed
treemacs-icon-lsp-error-list-open 	treemacs-icon-lsp-error-open
treemacs-icon-lsp-files-closed 	treemacs-icon-lsp-files-open
treemacs-icon-lsp-projects-closed 	treemacs-icon-lsp-projects-open
treemacs-icon-lsp-symbol-closed 	treemacs-icon-lsp-symbol-open
treemacs-icon-lsp-treemacs-deps-closed
treemacs-icon-lsp-treemacs-deps-list-closed
treemacs-icon-lsp-treemacs-deps-list-open
treemacs-icon-lsp-treemacs-deps-open 	treemacs-lsp-error-closed-state
treemacs-lsp-error-list-closed-state 	treemacs-lsp-error-list-open-state
treemacs-lsp-error-open-state 	treemacs-lsp-files-closed-state
treemacs-lsp-files-open-state 	treemacs-lsp-projects-closed-state
treemacs-lsp-projects-open-state 	treemacs-lsp-symbol-closed-state
treemacs-lsp-symbol-open-state 	treemacs-lsp-treemacs-deps-closed-state
treemacs-lsp-treemacs-deps-list-closed-state
treemacs-lsp-treemacs-deps-list-open-state
treemacs-lsp-treemacs-deps-open-state 	web-mode-lsp-constants
web-mode-lsp-font-lock-keywords 	web-mode-lsp-keywords

================================================
Type RET on an entry to view its full documentation.

dap-auto-configure-mode	      M-x ... RET
   Auto configure dap minor mode.
dap-breakpoint-add	      M-x ... RET
   Add breakpoint on the current line.
dap-breakpoint-condition      M-x ... RET
   Set breakpoint condition for the breakpoint at point.
dap-breakpoint-delete	      M-x ... RET
   Delete breakpoint on the current line.
dap-breakpoint-delete-all     M-x ... RET
   Delete all breakpoints.
dap-breakpoint-hit-condition  M-x ... RET
   Set breakpoint hit condition for the breakpoint at point.
dap-breakpoint-log-message    M-x ... RET
   Set breakpoint log message for the breakpoint at point.
dap-breakpoint-toggle	      M-x ... RET
   Toggle breakpoint on the current line.
dap-continue		      M-x ... RET
   Call continue for the currently active session and thread.
dap-debug		      C-c C-v d, <menu-bar> <Debug> <Start>
   Run debug configuration DEBUG-ARGS.
dap-debug-edit-template	      <menu-bar> <Debug> <Create Debug Template>
   Edit registered template DEBUG-ARGS.
dap-debug-last		      <menu-bar> <Debug> <Debug last session>
   Debug last configuration.
dap-debug-recent	      M-x ... RET
   Debug last configuration.
dap-debug-restart	      M-x ... RET
   Restarts current frame.
dap-delete-all-sessions	      C-c C-v C-s
   Terminate/remove all sessions.
dap-delete-session	      M-x ... RET
   Remove DEBUG-SESSION.
dap-disconnect		      C-c C-v s
   Disconnect from the currently active session.
dap-eval		      M-x ... RET
   Eval and print EXPRESSION.
dap-eval-region		      M-x ... RET
   Evaluate the region between START and END.
dap-eval-thing-at-point	      M-x ... RET
   Eval and print EXPRESSION.
dap-go-to-output-buffer	      <menu-bar> <Debug> <Output>
   Go to output buffer.
dap-hydra		      C-c C-v C-c
   Run `dap-hydra/body'.
dap-java-debug		      C-c C-v C-d
   Start debug session with DEBUG-ARGS.
dap-java-debug-test-class     M-x ... RET
   Debug JUnit test class.
dap-java-debug-test-method    M-x ... RET
   Debug JUnit test.
dap-java-run-test-class	      M-x ... RET
   Run JUnit test.
dap-java-run-test-method      M-x ... RET
   Run JUnit test.
dap-mode		      M-x ... RET
   Global minor mode for DAP mode.
dap-mode-mouse-set-clear-breakpoint <left-margin> <mouse-1>, <left-fringe> <mouse-1>
   Set or remove a breakpoint at the position represented by an
dap-next		      M-x ... RET
   Step over statements.
dap-restart-frame	      M-x ... RET
   Restarts current frame.
dap-server-log-mode	      M-x ... RET
   Major mode derived from `compilation-mode' by
   `define-derived-mode'.
dap-step-in		      M-x ... RET
   Like `dap-next', but step into function calls.
dap-step-out		      M-x ... RET
   Debug step out.
dap-stop-thread		      M-x ... RET
Stop selected thread.
dap-switch-session	      M-x ... RET
   Switch current session interactively.
dap-switch-stack-frame	      M-x ... RET
Switch stackframe by selecting another stackframe stackframes from
   current thread.
dap-switch-thread	      M-x ... RET
   Switch current thread.
dap-tooltip-at-point	      M-x ... RET
   Show information about the variable under point.
dap-tooltip-mode	      <menu-bar> <Debug> <Toggle Mouse Hover>
   Toggle the display of GUD tooltips.
dap-tooltip-mouse-motion      <mouse-movement>
   Command handler for mouse movement events in `dap-mode-map'.
dap-turn-on-dap-mode	      M-x ... RET
   Turn on function `dap-mode'.
dap-ui-breakpoint-condition   M-x ... RET
   Code action dap-ui-breakpoint-condition
dap-ui-breakpoint-delete      M-x ... RET
   Code action dap-ui-breakpoint-delete
dap-ui-breakpoint-hit-condition	M-x ... RET
   Code action dap-ui-breakpoint-hit-condition
dap-ui-breakpoint-log-message M-x ... RET
   Code action dap-ui-breakpoint-log-message
dap-ui-breakpoints	      <menu-bar> <Debug> <Breakpoints>
   (not documented)
dap-ui-breakpoints-delete     M-x ... RET
   Delete BREAKPOINT on the current line.
   dap-ui-breakpoints-delete-selected M-x ... RET
   Delete breakpoint on the current line.
dap-ui-breakpoints-goto	      M-x ... RET
   Go to breakpoint under cursor.
dap-ui-breakpoints-goto-breakpoint M-x ... RET
   Code action dap-ui-breakpoints-goto-breakpoint
dap-ui-breakpoints-list	      M-x ... RET
   List breakpoints.
dap-ui-breakpoints-mode	      M-x ... RET
   UI Breakpoints list minor mode.
dap-ui-breakpoints-toggle     M-x ... RET
   Code action dap-ui-breakpoints-toggle
dap-ui-breakpoints-ui-list-mode	M-x ... RET
   Major mode for displaying 'dap-ui-breakpoints-ui' entries in 'list'
   buffer.
dap-ui-continue		      M-x ... RET
   Code action dap-ui-continue
dap-ui-controls-mode	      <menu-bar> <Debug> <Toggle Controls>
   Displaying DAP visuals.
dap-ui-delete-session	      M-x ... RET
   Code action dap-ui-delete-session
dap-ui-disconnect	      M-x ... RET
   Code action dap-ui-disconnect
dap-ui-eval-in-buffer	      M-x ... RET
   Like `dap-eval', but in a new treemacs buffer.
dap-ui-eval-variable-in-buffer M-x ... RET
   Evaluate the symbol at point in a new buffer.
dap-ui-expressions	      <menu-bar> <Debug> <Expressions>
   (not documented)
dap-ui-expressions-add	      M-x ... RET
   (not documented)
dap-ui-expressions-add-prompt M-x ... RET
   Prompts for an expression and adds it to `dap-ui-expressions'.
dap-ui-expressions-mouse-remove	M-x ... RET
   Code action dap-ui-expressions-mouse-remove
dap-ui-expressions-refresh    M-x ... RET
   (not documented)
dap-ui-expressions-remove     M-x ... RET
   (not documented)
dap-ui-hide-many-windows      M-x ... RET
   Hide all debug windows when sessions are dead.
dap-ui-locals		      <menu-bar> <Debug> <Locals>
   (not documented)
dap-ui-many-windows-mode      M-x ... RET
   Shows/hide the windows from `dap-auto-configure-features`
dap-ui-mode		      M-x ... RET
   Displaying DAP visuals.
dap-ui-mode-menu	      M-x ... RET
   Menu for DAP
dap-ui-repl		      M-x ... RET
   Start an adapter-specific REPL.
dap-ui-repl-company	      M-x ... RET
   Dap-Ui REPL backend for company-mode.
dap-ui-repl-mode	      M-x ... RET
   Provide a REPL for the active debug session.
dap-ui-restart-frame	      M-x ... RET
   Code action dap-ui-restart-frame
   dap-ui-select-stack-frame     M-x ... RET
   Code action dap-ui-select-stack-frame
   dap-ui-session-select	      M-x ... RET
   Code action dap-ui-session-select
dap-ui-sessions		      <menu-bar> <Debug> <Sessions>
   Show currently active sessions.
dap-ui-sessions-mode	      M-x ... RET
   UI Session list minor mode.
dap-ui-set-variable-value     M-x ... RET
   Code action dap-ui-set-variable-value
dap-ui-show-many-windows      M-x ... RET
   Show auto configured feature windows.
   dap-ui-thread-select	      M-x ... RET
   Code action dap-ui-thread-select
dap-ui-thread-stop	      M-x ... RET
   Code action dap-ui-thread-stop
------------------------------------------------
Click on a completion to select it.
In this buffer, type RET to select the completion near point.

Possible completions are:
:dap-completion-item 	:dap-server-path
cl-struct-dap--debug-session-tags 	cl-struct-dap--parser-tags
dap--debug-configuration 	dap--debug-providers
dap--tooltip-overlay 	dap-auto-configure-features
dap-auto-configure-mode 	dap-auto-configure-mode-hook
dap-auto-show-output 	dap-breakpoints-changed-hook
dap-breakpoints-file 	dap-connect-retry-count
dap-connect-retry-interval 	dap-continue-hook
dap-debug-restart-keep-session 	dap-debug-template-configurations
dap-default-terminal-kind 	dap-exception-breakpoints
dap-executed-hook 	dap-external-terminal
dap-features->modes 	dap-features->windows
dap-inhibit-io 	dap-internal-terminal
dap-java--classpath-separator 	dap-java--var-format
dap-java-build 	dap-java-compile-port
dap-java-default-debug-port 	dap-java-hot-reload
dap-java-java-command 	dap-java-test-additional-args
dap-java-test-runner 	dap-java-testng-report-dir
dap-java-use-testng 	dap-label-output-buffer-category
dap-launch-configuration-providers 	dap-loaded-sources-changed-hook
dap-mode 	dap-mode-hook
dap-mode-map 	dap-mouse--hide-timer
dap-mouse-buffer 	dap-mouse-popup-timeout
dap-mouse-posframe-properties 	dap-output-buffer-filter
dap-output-window-max-height 	dap-output-window-min-height
dap-overlays-eval-result-duration 	dap-overlays-eval-result-prefix
dap-overlays-use-font-lock 	dap-overlays-use-overlays
dap-position-changed-hook 	dap-print-io
dap-server-log-mode-abbrev-table 	dap-server-log-mode-hook
dap-server-log-mode-map 	dap-server-log-mode-syntax-table
dap-session-changed-hook 	dap-session-created-hook
dap-stack-frame-changed-hook 	dap-stopped-hook
dap-terminated-hook 	dap-tooltip-echo-area
dap-tooltip-mode 	dap-tooltip-mode-hook
dap-tooltip-mouse-motions-active 	dap-ui--breakpoint-overlays
dap-ui--breakpoints-buffer 	dap-ui--control-buffer
dap-ui--control-images-root-dir 	dap-ui--cursor-overlay
dap-ui--debug-window-buffer 	dap-ui--expressions-buffer
dap-ui--locals-buffer 	dap-ui--locals-timer
dap-ui--repl-buffer 	dap-ui--sessions-buffer
dap-ui--watches-timer 	dap-ui-breakpoints-mode
dap-ui-breakpoints-mode-hook 	dap-ui-breakpoints-mode-map
dap-ui-breakpoints-ui-list-buffer-name
dap-ui-breakpoints-ui-list-describe-function
dap-ui-breakpoints-ui-list-describe-warning-count
dap-ui-breakpoints-ui-list-displayed-hook
dap-ui-breakpoints-ui-list-format
dap-ui-breakpoints-ui-list-get-entries-function
dap-ui-breakpoints-ui-list-history-size
dap-ui-breakpoints-ui-list-mode-abbrev-table
dap-ui-breakpoints-ui-list-mode-hook 	dap-ui-breakpoints-ui-list-mode-map
dap-ui-breakpoints-ui-list-mode-syntax-table
dap-ui-breakpoints-ui-list-revert-confirm
dap-ui-breakpoints-ui-list-show-single 	dap-ui-breakpoints-ui-list-sort-key
dap-ui-breakpoints-ui-list-titles 	dap-ui-buffer-configurations
dap-ui-controls-mode 	dap-ui-controls-mode-hook
dap-ui-default-fetch-count 	dap-ui-expressions
dap-ui-expressions-expand-depth 	dap-ui-expressiosn-expand-depth
dap-ui-locals-expand-depth 	dap-ui-many-windows-mode
dap-ui-many-windows-mode-hook 	dap-ui-menu-items
dap-ui-mode 	dap-ui-mode-hook
dap-ui-mode-map 	dap-ui-mode-menu
dap-ui-repl-mode-abbrev-table 	dap-ui-repl-mode-hook
dap-ui-repl-mode-map 	dap-ui-repl-prompt
dap-ui-repl-welcome 	dap-ui-session-mode-map
dap-ui-sessions-mode 	dap-ui-sessions-mode-hook
dap-ui-variable-length 	dap-variables-prompt-histories
lsp-enable-dap-auto-configure


;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
last emacs update hanging M-x dap-java-debug ==>
the solution :-
M-x dap-debug java-run-configuration
M-x dap-debug-edit-template 




;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
(line-number-at-pos) 7384 5382 4882 4869 4857 4743 
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
